{"version":3,"sources":["core/Constants.js","core/Selectors.js","core/history.js","core/artist/Actions.js","core/track/Actions.js","views/components/track-card/AlbumCard.js","views/components/tracklist/TrackCardList.js","views/pages/HomePage.js","svgs/play.svg","views/components/tracklist/TracklistPageHeader.js","core/library/Actions.js","svgs/note.svg","core/player/Actions.js","views/components/track-card/TracklistItem.js","views/pages/AlbumPage.js","views/components/artist/ArtistPageHeader.js","views/components/track-card/ArtistTrackCard.js","core/album/Album.js","core/artist/Artist.js","core/track/Track.js","core/utils/Utils.js","views/pages/CustomHooks.js","views/pages/ArtistPage.js","views/components/side-menu/SideMenu.js","views/components/track-card/ArtistCard.js","views/pages/LibraryPage.js","core/api/api-calls.js","views/components/search-bar/SearchBar.js","views/pages/SearchPage.js","views/components/music-control/MusicControler.js","views/pages/Login.js","core/user/Actions.js","App.js","core/album/Actions.js","core/artist/ArtistReducer.js","core/user/UserReducer.js","core/album/AlbumReducer.js","core/track/TrackReducer.js","core/library/LibraryReducer.js","core/player/PlayerReducer.js","core/RootReducer.js","core/api/sagas.js","core/library/sagas.js","core/player/sagas.js","core/RootSaga.js","index.js"],"names":["api_base_url","scope","USERS_TOP_TRACKS","getAlbumReducer","state","AlbumReducer","getTrackReducer","TrackReducer","getLibraryReducer","LibraryReducer","getArtistReducer","ArtistReducer","getToken","UserReducer","accessToken","createSelector","reducer","get","getCurrentTracks","getPlayingTracks","getTrackIds","tracks","map","each","getPlayingTrack","PlayerReducer","playerReducer","getTrackToToggle","getArtistToToggle","getAlbumToToggle","getRecentlyPlayed","getUserTopTracks","getSavedAlbums","getSavedArtists","findArtistById","artistId","find","item","getCurrentArtistId","getArtists","getCurrentArtist","artists","id","getRelatedArtists","getCurrentArtistSaved","artist","undefined","getAlbums","getCurrentAlbumId","getCurrentArtistsAlbums","findAlbumById","albumId","albums","getCurrentAlbumTracks","found","history","saveArtists","type","fetchArtistsAlbumsLoading","fetchArtistsAlbumsSuccessful","data","saveRelatedArtists","fetchAlbumTracksLoading","fetchAlbumTracksSuccessful","AlbumCard","props","dispatch","useDispatch","fetchTracks","useCallback","push","handleArtistClick","e","index","subtitle","indexOf","target","fetchArtists","artistIds","className","key","uuidv4","src","imgSrc","alt","onClick","title","TrackCardList","albumIds","cards","useSelector","filter","includes","display","limit","length","slice","fetchList","prototype","PropTypes","array","string","Map","require","Homepage","recentlyPlayedAlbumIds","userTopAlbumIds","console","log","limits","_extends","Object","assign","i","arguments","source","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","isRequired","instanceOf","number","_ref2","createElement","points","fill","_ref","svgRef","height","role","width","viewBox","ref","ForwardRef","forwardRef","TracklistPageHeader","toggleSave","albumName","artistName","playAlbum","saved","font-size","saveToLikes","func","imgSr","saveToSavedArtists","toggleTrack","trackId","toggleAlbum","saveToUserTopTracks","d","x","y","style","enableBackground","xmlSpace","play","current","previous","next","TracklistItem","useState","setSaved","playIcon","setPlayIcon","fetchAlbumsForArtist","handleClickArtist","dispatchPlay","dispatchPause","handleToggleTrack","AlbumPage","albumSaved","setAlbumSaved","currentAlbumId","albumsFromStore","trackSaved","toggleSaveAlbum","object","boolean","ArtistPageHeader","fontSize","toggleFollow","ArtistTrackCard","round","name","createAlbum","albumImg","album_type","artistNames","albumType","createArtist","img","createTrack","duration_ms","preview_url","duration","url","createRequest","token","method","myHeaders","Headers","Request","headers","mode","cache","convertToMin","parseInt","seconds","Math","floor","minutes","toString","removeDuplicates","list","Array","from","Set","findItemFromAList","removeDuplicateAlbums","midResult","query","result","createArtistFromList","images","createTracksForAlbum","eachArtist","createAlbumFromData","createAlbumsForAnArtist","singles","anAlbum","album_group","createSavedAlbums","album","createUsersTopTracks","thisArtists","concat","createTop2Artists","firstArtist","secondArtist","createRecentPlayed","track","createPlaylist","owner","display_name","useSavedTracks","pageNumber","setPageNumber","loading","setLoading","error","setError","setTracks","hasMore","setHasMore","useEffect","offset","myRequest","store","getState","fetch","then","response","json","items","total","catch","useLoadTracks","observer","useRef","lastTrackElementRef","node","disconnect","IntersectionObserver","entries","isIntersecting","prevPageNumber","observe","ArtistPage","currentArtist","relatedArtists","fetchArtistPage","useDispatchArtistPage","SideMenu","ListItem","button","ListItemIcon","ListItemText","primary","color","ArtistCard","SavedTracks","LibraryPage","view","setView","savedArtists","savedAlbums","fetchLibrary","useDispatchLibraryPage","fetchRecentPlayed","a","fetchUsersTopTracks","fetchUsersTopTwoArtists","fetchTracksForAlbum","fetchArtistsAlbums","fetchAlbumById","fetchArtistById","fetchSearchResults","callback","fetchSavedAlbums","fetchRelatedArtists","fetchSavedArtists","saveRemoveAlbum","status","followUnfollowArtist","checkFollowArtist","checkFollowAlbum","checkFollowTracks","trackIds","formattedIds","join","SearchBar","setQuery","handleInputDebounce","throttle","newQuery","encodeURI","value","playlists","onChange","placeholder","Searchpage","showResults","setShowResults","setArtists","setAlbums","setPlaylists","setTrackSaved","notFound","storeState","onErr","err","initialEntity","MusicControl","currentTrack","playNextTrack","playPreviousTrack","controls","onEnded","aria-hidden","set","Login","setShow","dispatchStore","dispatchSaveToken","newToken","split","retrieveAccessToken","window","location","href","Button","backgroundColor","process","show","path","exact","component","SearchPage","saveAlbums","initialState","action","newState","newArtists","trimmedNewArtists","singleIds","relatedArtistIds","trimmedList","currentAlbum","trimmedData","trimmedAlbums","trimmedSingles","newMap","newTrakcs","allTrakcs","cursor","RootReducer","combineReducers","fetchHomePage","checkArtistSaved","fetchAlbumPage","checkAlbumPageSaved","fetchLibraryPage","watchInitHomePage","watchInitAlbumPage","watchInitArtistPage","watchInitLibraryPage","select","all","data1","data2","data3","recentPlayed","topTracks","topTwoArtists","albumsToSave","artistsToSave","put","currentArtistId","artistSaved","otherTracks","tracksSaved","artistsFromStore","artistExist","relatedArtistsExist","saveSatusChecked","albumsExist","albums2","relatedArtists2","artist1","albums1","relatedArtists1","albumsAndArtists","take","takeLatest","ApiSaga","fork","fetchNextTracks","fetchToggleAlbum","fetchToggleArtist","checkLibrarySaved","watchFetchNextTracks","watchToggleAlbumSaved","watchToggleArtistSaved","watchCheckLibraryPageSaved","responseStatus","LibrarySaga","updateplay","playPreviousSong","playNextSong","watchPlay","watchPlayPreviousSong","watchPlayNextSong","PlayerSaga","RootSaga","sagaMiddleware","createSagaMiddleware","createStore","applyMiddleware","logger","run","ReactDOM","render","basename","document","getElementById"],"mappings":"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","file":"static/js/main.f9de4cdc.chunk.js","sourcesContent":["export const api_base_url = \"https://api.spotify.com/v1/\"\n\nexport const client_id = \"0c0eb8c9fa814086a12af77d398f0fcf\"\n\nexport const client_secret = \"80852af252fe42fd9089bbbea4b13c2c\"\n\nexport const response_type = \"token\"\n\nexport const redirect_url = \"http://localhost:3000\"\n\nexport const scope = [\"playlist-read-private\", \"user-top-read\", \"user-follow-read\", \"playlist-read-collaborative\",\n    \"playlist-read-private\", \"playlist-modify-public\", \"playlist-modify-private\",\n    \"user-follow-modify\", \"user-library-modify\", \"user-read-recently-played\", \"user-library-read\"]\n\nexport const authorization_base_url = \"https://accounts.spotify.com/authorize?\"\n\nexport const RECENTLY_PLAYED = \"Recently Played\"\nexport const USERS_TOP_TRACKS = \"Your Favorite Albums And Songs\"\nexport const BROWSE_ALL = \"Browse All\"\nexport const ARTISTS_TOP_TRACKS = \"Top Tracks\"\nexport const FOR_FANS_OF_FIRST = \"For Fans Of first\"\nexport const FOR_FANS_OF_SECOND = \"For Fans Of second\"\nexport const FOR_FANS_OF = \"For Fans Of \"\nexport const FANS_ALSO_LIKE = \"Fans also like\"\n\nexport const SAVED_ALBUMS = \"Albums\"\nexport const SAVED_ARTISTS = \"Artists\"\nexport const SAVED_PLAYLISTS = \"Playlists\"\nexport const SAVED_TRACKS = \"Tracks\"\nexport const NEXT_TRACKS = \"Next Tracks\"","import { createSelector } from 'reselect'\nimport { RECENTLY_PLAYED, USERS_TOP_TRACKS, SAVED_ALBUMS, SAVED_ARTISTS} from \"./Constants\"\n\nexport const getPlayerReducer = (state) => {\n    return state.PlayerReducer\n}\n\nexport const getAlbumReducer = (state) => {\n    return state.AlbumReducer\n}\n\nexport const getTrackReducer = (state) => {\n    return state.TrackReducer\n}\n\nexport const getLibraryReducer = (state) => {\n    return state.LibraryReducer\n}\n\nexport const getArtistReducer = (state) => {\n    return state.ArtistReducer\n}\n\nexport function getToken(state) {\n    return state.UserReducer.accessToken;\n}\n\n/****************** Reselectors *********************/\n\n//------------- Track Reducer ------------//\n\nexport const getTracks = createSelector(\n    getTrackReducer,\n    reducer => reducer.get(\"track\")\n)\n\n\nexport const getCurrentTracks = createSelector(\n    getTrackReducer,\n    reducer => reducer.get(\"currentDisplayTracks\")\n)\n\nexport const getPlayingTracks = createSelector(\n    getTrackReducer,\n    reducer => reducer.get(\"currentPlayingTracks\")\n)\n\nexport const getTrackIds = createSelector(\n    getCurrentTracks,\n    tracks => tracks.map(each => each.get(\"id\"))\n)\n\n//------------- Player Reducer ------------//\n\n\nexport const getPlayingTrack = createSelector(\n    getPlayerReducer,\n    playerReducer => playerReducer.get(\"currentTrack\")\n)\n\n//------------- Library Reducer ------------//\n\nexport const getTrackIdAndIndex = createSelector(\n    getLibraryReducer,\n    reducer => reducer.get(\"trackToToggle\") //return id\n)\n\nexport const getTrackToToggle = createSelector(\n    getLibraryReducer,\n    reducer => reducer.get(\"trackToToggle\") //return id\n)\n\nexport const getArtistToToggle = createSelector(\n    getLibraryReducer,\n    reducer => reducer.get(\"artistoToggle\") //return id\n)\n\nexport const getAlbumToToggle = createSelector(\n    getLibraryReducer,\n    reducer => reducer.get(\"albumToToggle\") //return id\n)\n\nexport const getPlaylistToToggle = createSelector(\n    getLibraryReducer,\n    reducer => reducer.get(\"playlistToToggle\") //return id\n)\n\nexport const getRecentlyPlayed = createSelector(\n    getLibraryReducer,\n    reducer => reducer.get(RECENTLY_PLAYED) //return id\n)\n\nexport const getUserTopTracks = createSelector(\n    getLibraryReducer,\n    reducer => reducer.get(USERS_TOP_TRACKS) //return id\n)\n\nexport const getSavedAlbums = createSelector(\n    getLibraryReducer,\n    reducer => reducer.get(\"Albums\") //return id\n)\n\nexport const getSavedArtists = createSelector(\n    getLibraryReducer,\n    reducer => reducer.get(SAVED_ARTISTS) //return id\n)\n\n//------------- Artist Reducer ------------//\n\nexport const findArtistById = (artistId) => createSelector(\n    getArtistReducer,\n    reducer => reducer.get(\"artists\").find(item => artistId === item.get(\"artistId\"))\n)\n\nexport const getCurrentArtistId = createSelector(\n    getArtistReducer,\n    reducer => reducer.get(\"currentArtistId\")\n)\n\nexport const getArtists = createSelector(\n    getArtistReducer,\n    reducer => reducer.get(\"artists\")\n)\n\nexport const getCurrentArtist = createSelector(\n    getArtists,\n    getCurrentArtistId,\n    (artists, id) => artists.find(item => item.get(\"artistId\") === id)\n)\n\nexport const getArtistSaved = createSelector(\n    getCurrentArtistId,\n    id => findArtistById(id).get(\"saved\")\n)\n\nexport const getRelatedArtists = createSelector(\n    getArtistReducer,\n    reducer => reducer.get(\"relatedArtists\")\n)\n\nexport const getCurrentArtistSaved = createSelector(\n    getCurrentArtist,\n    artist => artist!==undefined && artist.get(\"saved\")!==undefined?artist.get(\"saved\"):false\n)\n\n\n//------------- Album Reducer ------------//\n\nexport const getAlbums = createSelector(\n    getAlbumReducer,\n    reducer => reducer.get(\"albums\")\n)\n\nexport const getCurrentAlbumId = createSelector(\n    getAlbumReducer,\n    reducer => reducer.get(\"currentAlbumId\")\n)\n\nexport const getCurrentArtistsAlbums = createSelector(\n    getAlbumReducer,\n    reducer => reducer.get(\"currentArtistAlbums\")\n)\n\nexport const findAlbumById = albumId => createSelector(\n    getAlbums,\n    albums => albums.find(item => item.get(\"albumId\") === albumId)\n)\n\nexport const findAlbumList = albumIds => createSelector(\n    getAlbums,\n    albums => albums.filter(item => albumIds.includes(item.get(\"albumId\")))\n)\n\nexport const getCurrentAlbumTracks = createSelector(\n    getCurrentAlbumId,\n    getAlbums,\n    (id, albums) => {\n        const found = albums.find(item => item.get(\"albumId\") === id)\n        if (found) { return found.get(\"tracks\") }\n    }\n)\n\nexport const getTracksInAlbum = (id) => createSelector(\n    getAlbums,\n    albums => {\n        const album = albums.find(item => item.get(\"albumId\") === id)\n        if (album) { return album.get(\"trackIds\") }\n    }\n)\n\n\n\n","import { createBrowserHistory as history} from 'history';\n\nexport default history();","export const SAVE_ARTISTS = \"SAVE_ARTISTS\"\nexport const FETCH_ARTISTS_ALBUMS_LOADING = \"FETCH_ARTISTS_ALBUMS_LOADING\"\nexport const FETCH_ARTISTS_ALBUMS_SUCCESSFUL = \"FETCH_ARTISTS_ALBUMS_SUCCESSFUL\"\nexport const SAVE_ARTIST_IMG = \"SAVE_ARTIST_IMG\"\nexport const SAVE_RELATED_ARTISTS = \"SAVE_RELATED_ARTISTS\"\nexport const UPDATE_CURRENT_ARTIST_SAVED = \"UPDATE_CURRENT_ARTIST_SAVED\"\nexport const FETCH_TOGGLE_ARTIST_SAVED = \"FETCH_TOGGLE_ARTIST_SAVED\"\n\nexport const saveArtists = artists => ({\n    type: SAVE_ARTISTS,\n    artists: artists\n})\n\n\nexport const fetchArtistsAlbumsLoading = artistId => ({\n    type: FETCH_ARTISTS_ALBUMS_LOADING,\n    artistId: artistId\n})\n\nexport const fetchArtistsAlbumsSuccessful = data => ({\n    type: FETCH_ARTISTS_ALBUMS_SUCCESSFUL,\n    data: data\n})\n\n\nexport const saveRelatedArtists = artists => ({\n    type: SAVE_RELATED_ARTISTS,\n    artists: artists\n})\n\nexport const updateCurrentArtistSaved = artists => ({\n    type: UPDATE_CURRENT_ARTIST_SAVED,\n    data: artists\n})\n\nexport const fetchToggleArtistSaved = () => ({\n    type: FETCH_TOGGLE_ARTIST_SAVED\n})","export const FETCH_ALBUM_TRACKS_LOADING = \"FETCH_ALBUM_TRACKS_LOADING\"\nexport const FETCH_ALBUM_TRACKS_SUCCESSFUL = \"FETCH_ALBUM_TRACKS_SUCCESSFUL\"\nexport const FETCH_ALBUM_TRACKS_FAILED = \"FETCH_ALBUM_TRACKS_FAILED\"\nexport const UPDATE_CURRENT_ALBUM_SAVED = \"UPDATE_ALBUM_SAVED\"\nexport const UPDATE_CURRENT_TRACKS_SAVED = \"UPDATE_TRACKS_SAVED\"\nexport const UPDATE_DISPLAY_TRACKS = \"UPDATE_DISPLAY_TRACKS\"\nexport const UPDATE_PLAYING_TRACKS = \"UPDATE_PLAYING_TRACKS\"\n\nexport const fetchAlbumTracksLoading = (albumId) => ({\n    type: FETCH_ALBUM_TRACKS_LOADING,\n    albumId: albumId,\n})\n\nexport const fetchAlbumTracksSuccessful = (data) => ({\n    type: FETCH_ALBUM_TRACKS_SUCCESSFUL,\n    data: data,\n    //albumId:albumId\n})\n\nexport const fetchAlbumTracksFailed = (albumId, err) => ({\n    type: FETCH_ALBUM_TRACKS_FAILED,\n    error: err\n})\n\nexport const updateDisplayTracks = (data)=> ({\n    type: UPDATE_DISPLAY_TRACKS,\n    data: data,\n})","import React, { useCallback } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { useDispatch } from \"react-redux\"\nimport history from \"../../../core/history\"\nimport { fetchArtistsAlbumsLoading } from \"../../../core/artist/Actions\"\nimport { fetchAlbumTracksLoading } from \"../../../core/track/Actions\"\nimport PropTypes from 'prop-types';\n\nexport default function AlbumCard(props) {\n    const dispatch = useDispatch()\n\n    const fetchTracks = useCallback(() => {\n        dispatch(fetchAlbumTracksLoading(props.albumId))\n        history.push(\"/albums\")\n    }, [dispatch])\n\n    const handleArtistClick = (e) => {\n        const index = props.subtitle.indexOf(e.target.id)\n        fetchArtists(props.artistIds[index])\n        history.push(\"/artists/\")\n    }\n\n    const fetchArtists = useCallback(\n        (id) =>\n            dispatch(fetchArtistsAlbumsLoading(id)\n            ), [dispatch]\n    )\n\n    return (\n        <div className=\"card\" key={uuidv4()}>\n            <img src={props.imgSrc} alt=\"track-card\" key={uuidv4()} onClick={fetchTracks} />\n            <div className=\"cardContent\">\n                <p className=\"card-title\" onClick={fetchTracks}>{props.title}</p>\n                <span>\n                    {props.subtitle.map(each =>\n                        <p className=\"card-subtitle\" onClick={handleArtistClick} key={each} id={each}>{each}</p>)}\n                </span>\n            </div>\n\n        </div>\n    )\n}\n\nAlbumCard.prototype = {\n    subtitle: PropTypes.array,\n    albumId: PropTypes.string,\n    subtitle: PropTypes.array,\n    title: PropTypes.string,\n    imgSrc: PropTypes.string,\n    artistIds: PropTypes.array,\n}","import React from 'react';\nimport { useSelector } from \"react-redux\"\nimport { findAlbumList } from \"../../../core/Selectors\"\nimport AlbumCard from \"../track-card/AlbumCard\"\nimport { v4 as uuidv4 } from 'uuid';\nimport PropTypes from 'prop-types';\n\nexport default function TrackCardList(props) {\n    const cards = useSelector(findAlbumList(props.albumIds))\n\n    let display = []\n    display = cards === undefined ? [] : (props.limit > 0 && cards.length > props.limit) ? cards.slice(0, props.limit) : cards\n\n    return (\n        <div className=\"TrackCardList\">\n            <div className=\"title\"><b>{props.fetchList}</b></div>\n            <div className=\"list\">\n                {display.map(each =>\n                    <AlbumCard title={each.get(\"albumName\")} key={uuidv4()}\n                        albumId={each.get(\"albumId\")} artistIds={each.get(\"artistIds\")}\n                        subtitle={each.get(\"artistNames\")}\n                        imgSrc={each.get(\"albumImg\")} id={uuidv4()} />)}\n\n            </div>\n        </div>\n    )\n}\n\nconst { Map } = require('immutable');\n\nTrackCardList.prototype = {\n    fetchList: PropTypes.string.isRequired,\n    albums: PropTypes.instanceOf(Map).isRequired,\n    limit: PropTypes.number.isRequired,\n    albumIds: PropTypes.array.isRequired,\n}","import React from \"react\";\nimport TrackCardList from \"../components/tracklist/TrackCardList\"\nimport { RECENTLY_PLAYED, USERS_TOP_TRACKS, } from \"../../core/Constants\"\nimport { getRecentlyPlayed, getUserTopTracks } from \"../../core/Selectors\"\nimport { useSelector } from \"react-redux\"\n\nexport default function Homepage() {\n        const recentlyPlayedAlbumIds = useSelector(getRecentlyPlayed)\n        const userTopAlbumIds = useSelector(getUserTopTracks)\n\n        console.log(\"homepage\", recentlyPlayedAlbumIds)\n        console.log(userTopAlbumIds)\n\n        /**\n         *   if (albums.length === 0 && libraryReducer.get(USERS_TOP_TRACKS).length === 0) {\n                        //get the token from the local storage, and save the token, and init home page\n                }\n         */\n\n        return (\n                <div className=\"Homepage\">\n                        <TrackCardList fetchList={RECENTLY_PLAYED} albumIds={recentlyPlayedAlbumIds}\n                                limits={6}\n                        />\n                        <TrackCardList\n                                fetchList={USERS_TOP_TRACKS} albumIds={userTopAlbumIds} limits={6} />\n                </div>)\n}","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"polygon\", {\n  points: \"21.57 12 5.98 3 5.98 21 21.57 12\",\n  fill: \"currentColor\"\n});\n\nvar SvgPlay = function SvgPlay(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    height: 16,\n    role: \"img\",\n    width: 16,\n    viewBox: \"0 0 24 24\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2);\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgPlay, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/play.78b8b985.svg\";\nexport { ForwardRef as ReactComponent };","import React, { Fragment } from 'react';\nimport { ReactComponent as PlayIcon } from \"../../../svgs/play.svg\"\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\nimport PropTypes from 'prop-types';\n\nexport default function TracklistPageHeader(props) {\n\n    const toggleSave = () => { }//TODO should be the from the props\n\n    return (\n        <Fragment>\n            <div className=\"playlistPageInfo\">\n                <div className=\"playlistPageImage\">\n                    {props.imgSrc && <img src={props.imgSrc} alt=\"track-card\" key=\"card-img\" />}\n                </div>\n\n                <div className=\"playlistPageContent\">\n                    <p className=\"smallText uppercase bold\">{props.title}</p>\n                    <h1>{props.albumName}</h1>\n\n                    <div className=\"playlistPageDesc\">\n                        <p className=\"spotify\">{props.artistName}</p>\n                    </div>\n                </div>\n            </div>\n            <div className=\"playlistPageSongs\">\n                <div className=\"playlistButtons\">\n                    <span className=\"playIcon\" onClick={props.playAlbum}>\n                        <PlayIcon />\n                    </span>\n                    <div className=\"icons\">\n                        {props.saved &&\n                            <FavoriteIcon className=\"icon iconsHeart coloredIcon\" font-size=\"inherit\" onClick={toggleSave} />}\n                        {!props.saved &&\n                            <FavoriteBorderIcon className=\"icon iconsHeart  coloredIcon\" font-size=\"inherit\" onClick={toggleSave} />}\n                        }\n                        <div className=\"icon iconsDots\"></div>\n                    </div>\n                </div>\n            </div>\n        </Fragment>\n    )\n}\n\nTracklistPageHeader.prototype = {\n    saveToLikes: PropTypes.func,\n    playAlbum: PropTypes.func,\n    artistName: PropTypes.string,\n    albumName: PropTypes.string,\n    imgSr: PropTypes.string,\n    title: PropTypes.string,\n}","export const SAVE_TO_SAVED_ALBUMS = \"SAVE_TO_SAVED_ALBUMS\"\nexport const SAVE_TO_SAVED_ARTISTS = \"SAVE_TO_SAVED_ARTISTS\"\nexport const SAVE_TO_SAVED_PLAYLISTS = \"SAVE_TO_SAVED_PLAYLISTS\"\nexport const SAVE_TO_SAVED_TRACKS = \"SAVE_TO_SAVED_TRACKS\"\nexport const LOAD_LIBRARY_PAGE = \"LOAD_LIBRARY_PAGE\"\nexport const LOAD_NEXT_TRACKS = \"LOAD_NEXT_TRACKS\"\nexport const TOGGLE_TRACK = \"TOGGLE_TRACK\"\nexport const TOGGLE_ALBUM = \"TOGGLE_ALBUM\"\nexport const TOGGLE_ARTIST = \"TOGGLE_ARTIST\"\nexport const TOGGLE_PLAYLIST = \"TOGGLE_LAYLIST\"\nexport const FETCH_TOGGLE_ALBUM_SAVED_LOADING = \"FETCH_TOGGLE_ALBUM_SAVED_LOADING\"\nexport const FETCH_TOGGLE_TRACKS_SAVED_LOADING = \"FETCH_TOGGLE_TRACKS_SAVED_LOADING\"\nexport const FETCH_TOGGLE_ALBUM_SAVED_SUCCESSFUL = \"FETCH_TOGGLE_ALBUM_SAVED_SUCCESSFUL\"\nexport const FETCH_TOGGLE_TRACKS_SAVED_SUCCESSFUL = \"FETCH_TOGGLE_TRACKS_SAVED_SUCCESSFUL\"\nexport const SAVE_TO_RECENTLY_PLAYED = \"SAVE_TO_RECENTLY_PLAYED\"\nexport const SAVE_TO_USERS_TOP_TRACKS = \"SAVE_TO_USERS_TOP_TRACKS\"\nexport const FETCH_HOME_PAGE_PLAYLISTS = \"FETCH_HOME_PAGE_PLAYLISTS\"\nexport const SAVE_TO_FIRST_ARTISTS_TRACKS = \"SAVE_TO_FIRST_ARTISTS_TRACKS\"\nexport const SAVE_TO_SECOND_ARTISTS_TRACKS = \"SAVE_TO_SECOND_ARTISTS_TRACKS\"\n\n\nexport const loadLibraryPage = () => ({\n    type: LOAD_LIBRARY_PAGE,\n})\n\nexport const saveToSavedAlbums = (albums) => ({\n    type: SAVE_TO_SAVED_ALBUMS,\n    albumIds: albums,  //Note: changed from ids to albums atm\n})\n\nexport const saveToSavedArtists = (artists) => ({\n    type: SAVE_TO_SAVED_ARTISTS,\n    artistIds: artists, //Note: changed from ids to artists atm\n})\n\nexport const saveToSavedPlaylists = (albumIds) => ({\n    type: SAVE_TO_SAVED_PLAYLISTS,\n    albumIds: albumIds,\n})\n\nexport const saveToSavedTracks = (tracks) => ({\n    type: SAVE_TO_SAVED_TRACKS,\n    tracks: tracks,\n})\n\nexport const loadNextTracks = tracks => ({\n    type: LOAD_NEXT_TRACKS,\n    tracks: tracks,\n})\n\nexport const toggleTrack = (trackId, index) => ({\n    type: TOGGLE_TRACK,\n    data: {\n        trackId: trackId,\n        index: index\n    }\n})\n\nexport const toggleArtist = data => ({\n    type: TOGGLE_ARTIST,\n    data: data,\n})\n\nexport const toggleAlbum = data => ({\n    type: TOGGLE_ALBUM,\n    data: data,\n})\n\nexport const togglePlaylist = data => ({\n    type: TOGGLE_PLAYLIST,\n    data: data,\n})\n\nexport const fetchToggleAlbumSavedLoading = () => ({\n    type: FETCH_TOGGLE_ALBUM_SAVED_LOADING\n})\n\nexport const fetchToggleAlbumSavedSuccessful = (data) => ({\n    type: FETCH_TOGGLE_ALBUM_SAVED_SUCCESSFUL,\n    data: data\n})\n\nexport const saveToRecentlyPlay = (albumIds) => {\n    return ({\n        type: SAVE_TO_RECENTLY_PLAYED,\n        albumIds: albumIds,\n    })\n}\n\nexport const saveToUserTopTracks = (albumIds) => {\n    return ({\n        type: SAVE_TO_USERS_TOP_TRACKS,\n        albumIds: albumIds,\n    })\n}\n\nexport const saveToFirstArtistsTracks = (albumIds) => {\n    return ({\n        type: SAVE_TO_FIRST_ARTISTS_TRACKS,\n        albumIds: albumIds,\n    })\n}\n\nexport const saveToSecondArtistsTracks = (albumIds) => {\n    return ({\n        type: SAVE_TO_SECOND_ARTISTS_TRACKS,\n        albumIds: albumIds,\n    })\n}\n\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M334.938,102.697c-30.917-24.154-57.604-45.007-57.604-91.999C277.333,4.785,272.563,0,266.667,0 C260.771,0,256,4.785,256,10.698v351.53c0,11.805-9.563,21.396-21.333,21.396H192c-47.063,0-85.333,28.793-85.333,64.188 C106.667,483.207,144.937,512,192,512s85.333-28.793,85.333-64.188V77.853c12.349,16.53,28.538,29.241,44.5,41.706 C353.792,144.548,384,168.138,384,223.154c0,5.913,4.771,10.698,10.667,10.698s10.667-4.785,10.667-10.698 C405.333,157.691,367.938,128.46,334.938,102.697z M256,447.812c0,23.193-29.313,42.792-64,42.792s-64-19.599-64-42.792 s29.313-42.792,64-42.792h42.667c7.771,0,15.063-2.089,21.333-5.746V447.812z\"\n})));\n\nvar SvgNote = function SvgNote(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"Layer_1\",\n    x: \"0px\",\n    y: \"0px\",\n    viewBox: \"0 0 512 512\",\n    style: {\n      enableBackground: \"new 0 0 512 512\"\n    },\n    xmlSpace: \"preserve\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2);\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgNote, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/note.ceeb8cd1.svg\";\nexport { ForwardRef as ReactComponent };","export const PAUSE_SONG = \"PAUSE_SONG\"\nexport const STOP_SONG = \"STOP_SONG\"\nexport const PLAY_SONG = \"PLAY_SONG\"\nexport const RESUME_SONG = \"RESUME_SONG\"\nexport const PLAY_PREVIOUS_SONG = \"PLAY_PREVIOUS_SONG\"\nexport const PLAY_NEXT_SONG = \"PLAY_NEXT_SONG\"\n\nexport const play = (current, previous, next) => ({\n    type: PLAY_SONG,\n    current: current,\n    previous: previous,\n    next: next\n})\n\nexport const pause = () => ({\n    type: PAUSE_SONG,\n})\n\nexport const stop = () => ({\n    type: STOP_SONG,\n})\n\nexport const previous = () => ({\n    type: PLAY_PREVIOUS_SONG\n})\n\nexport const next = () => ({\n    type: PLAY_NEXT_SONG\n})\n\nexport const resume = () => ({\n    type: RESUME_SONG\n})\n\n\n","import React, { useState, useCallback } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { useDispatch } from \"react-redux\"\nimport { fetchArtistsAlbumsLoading } from \"../../../core/artist/Actions\"\nimport { ReactComponent as PlayIcon } from '../../../svgs/play.svg'\nimport { ReactComponent as NoteIcon } from '../../../svgs/note.svg'\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\nimport { play, pause } from '../../../core/player/Actions';\nimport PropTypes from 'prop-types';\nimport { toggleTrack } from \"../../../core/library/Actions\"\nimport history from \"../../../core/history\"\n\nexport default function TracklistItem(props) {\n    const [saved, setSaved] = useState(props.saved)\n\n    //TODO \n    //double click the container => play song\n    //https://medium.com/@anilchaudhary453/double-click-using-react-hooks-4fea2292d3a4\n\n    const [playIcon, setPlayIcon] = useState(true)\n\n    const dispatch = useDispatch()\n\n    const fetchAlbumsForArtist = useCallback(\n        (id) => {\n            dispatch(fetchArtistsAlbumsLoading(id))\n        }, [dispatch]\n    )\n\n    //TODO debug\n    function handleClickArtist(e) {\n        const artistId = e.target.id\n        if (artistId !== undefined || \"\") {\n            fetchAlbumsForArtist(e.target.id)\n            history.push(\"/artists\")\n        }\n    }\n\n    function playTrack() {\n        setPlayIcon(false)\n        dispatchPlay(props.current, props.previous, props.next)\n    }\n\n    function pauseTrack() {\n        setPlayIcon(true)\n        dispatchPause()\n    }\n\n\n    const dispatchPlay = useCallback(\n        (current, previous, next) => dispatch(play(current, previous, next),\n            [dispatch]\n        ))\n\n    const dispatchPause = useCallback(\n        () => dispatch(pause()), [dispatch]\n    )\n\n    const handleToggleTrack = useCallback(\n        () => dispatch(toggleTrack(props.current.get(\"id\"), props.index)), [dispatch]\n    )\n\n    const toggleSave = () => {\n        setSaved(saved => !saved)\n        handleToggleTrack()\n    }\n\n    return (\n        <li>\n            <div className=\"songIcon\">\n                {!playIcon && <NoteIcon className=\"noteI\" onClick={pauseTrack} />}\n                {playIcon && <PlayIcon className=\"playI\" onClick={playTrack} />}\n\n            </div>\n            <div className=\"songDetails\">\n                <h3 >{props.current.get(\"name\")}</h3>\n                {props.current.get(\"artists\") !== undefined && props.current.get(\"artists\").map(each => <span className=\"artist-name\" id={each.get(\"artistId\")}\n                    key={uuidv4()} onClick={handleClickArtist}>{each.get(\"artistName\") + \", \"} </span>)}\n            </div>\n            <div className=\"songTime\">\n                <span>\n                    {!saved && <FavoriteBorderIcon className=\"icon iconsHeart\" font-size=\"inherit\" onClick={toggleSave} />}\n                    {saved && <FavoriteIcon className=\"icon iconsHeart\" font-size=\"inherit\" onClick={toggleSave} />}</span>\n                <span>{props.current.get(\"duration\")}</span>\n            </div>\n        </li>\n\n    )\n}\n\nTracklistItem.prototype = {\n    current: PropTypes.object,\n    previous: PropTypes.object,\n    next: PropTypes.object,\n    saved: PropTypes.boolean,\n    index: PropTypes.string,\n}","import React, { useState, useCallback } from 'react';\nimport TracklistPageHeader from '../components/tracklist/TracklistPageHeader'\nimport { v4 as uuidv4 } from 'uuid';\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { fetchToggleAlbumSavedLoading } from \"../../core/library/Actions\"\nimport {\n    getAlbums, getCurrentTracks, getCurrentAlbumId, getTrackToToggle\n} from \"../../core/Selectors\"\n\nimport TracklistItemNew from \"../components/track-card/TracklistItem\"\n\nexport default function AlbumPage() {\n    const [albumSaved, setAlbumSaved] = useState(false)\n    const dispatch = useDispatch()\n    const currentAlbumId = useSelector(getCurrentAlbumId)\n    const albumsFromStore = useSelector(getAlbums).find(item => item.get(\"albumId\") === currentAlbumId)\n    const tracks = useSelector(getCurrentTracks)\n    const trackSaved = useSelector(getTrackToToggle) //trackSaved\n\n    const toggleSaveAlbum = useCallback(() => {\n        setAlbumSaved(albumSaved => !albumSaved)\n        dispatch(fetchToggleAlbumSavedLoading())\n    }, [dispatch])\n\n    function playTrack(trackId) {\n        //play the whole album\n    }\n\n    function pauseTrack(trackId) {\n        //Pause the play of the album\n    }\n\n    function playAlbum() {\n        //update the currentPlayingTracks and also set the current track index to 0\n\n    }\n\n    return (\n        <div className=\"mainInner\">\n            {albumsFromStore && <TracklistPageHeader title={albumsFromStore.get(\"albumType\") ? albumsFromStore.get(\"albumType\") : \"ALBUM\"} imgSrc={albumsFromStore.get(\"albumImg\")}\n                artistName={albumsFromStore.get(\"artistName\")} playAlbum={playAlbum} toggleSave={toggleSaveAlbum}\n                albumName={albumsFromStore.get(\"albumName\")} key={uuidv4()} saved={albumSaved}\n            />}\n            {albumsFromStore && <ul className=\"songList\">\n                {tracks.map(each => <TracklistItemNew saved={trackSaved[tracks.indexOf(each)]}\n                    index={tracks.indexOf(each)} key={uuidv4()}\n                    previous={tracks[tracks.indexOf(each) > 0 ? tracks.indexOf(each) - 1 : 0]}\n                    next={tracks[tracks.indexOf(each) + 1 <= tracks.length ? tracks.indexOf(each) + 1 : -1]} current={each}\n                />)}\n\n            </ul>}\n        </div>)\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport AccountBoxIcon from '@material-ui/icons/AccountBox';\n\n\n\nexport default function ArtistPageHeader(props) {\n    return (\n        <div className=\"ArtistPageHeader\">\n            {props.imgSrc !== \"\" ?\n                <img\n                    className=\"playlistPageImage\"\n                    src={props.imgSrc}\n                    alt=\"artist\"\n                /> : <AccountBoxIcon className=\"playlistPageImage\" fontSize=\"inherit\"/>}\n            <div className=\"playlistPageContent\">\n                <p className=\"smallText uppercase bold\">VERIFIED ARTIST</p>\n                <h1>{props.artistName}</h1>\n                {props.saved &&\n                    <div className=\"follow-button unfilledIcon\" onClick={props.toggleFollow}>Follow</div>}\n                {!props.saved &&\n                    <div className=\"follow-button coloredIcon\" onClick={props.toggleFollow}>UnFollow</div>}\n            </div>\n        </div>\n    )\n}\n\nArtistPageHeader.prototype = {\n    imgSrc: PropTypes.string,\n    artistName: PropTypes.string,\n}","import React from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport PropTypes from 'prop-types';\n\nexport default function ArtistTrackCard(props) {\n\n    return (\n        <div className=\"ArtistTrackCard\" onClick={props.onClick}>\n            <img onClick={props.onClick} className={props.round ? \"ArtistTrackCard-img round\" : \"ArtistTrackCard-img\"} src={props.imgSrc} alt=\"track-card\" key={uuidv4()} />\n            <div className=\"title\" onClick={props.onClick}><p>{props.name}</p></div>\n        </div>\n    )\n}\n\nArtistTrackCard.prototype = {\n    name: PropTypes.string,\n    imgSrc: PropTypes.string,\n}","const { Map } = require('immutable');\n\nexport default function createAlbum(albumId, albumName, albumImg, album_type, artistIds, artistNames) {\n    return Map({\n        albumId: albumId,\n        albumName: albumName,\n        albumImg: albumImg,\n        albumType: album_type,\n        artistIds: artistIds,\n        artistNames: artistNames,\n        tracks: []\n    })\n}","const { Map } = require('immutable');\n\nexport default function createArtist(id, name, img) {\n    return Map({\n        \"artistId\": id,\n        \"artistName\": name,\n        \"artistImg\": img,\n        \"relatedArtists\": [],\n        \"albums\": [],\n        \"saved\": \"\",\n    })\n}","const { Map } = require('immutable');\n\nexport default function createTrack(id, name, duration_ms, preview_url, artists) {\n    return Map({\n        id: id,\n        name: name,\n        duration: duration_ms,\n        url: preview_url,\n        artists: artists\n    })\n}","import React from 'react';\nimport createAlbum from \"../album/Album\"\nimport createArtist from \"../artist/Artist\"\nimport createTrack from \"../track/Track\"\n\nexport function createRequest(token, url, method) {\n    if (token === undefined || url === undefined || method === undefined) {\n        return\n    }\n    var myHeaders = new Headers({\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        \"Authorization\": \"Bearer \" + token\n    });\n\n    var myInit = {\n        method: method,\n        headers: myHeaders,\n        mode: 'cors',\n        cache: 'default'\n    };\n    var myRequest = new Request(url, myInit);\n\n    return myRequest\n}\n\nexport function convertToMin(duration_ms) {\n    var duration = parseInt(duration_ms)\n    var seconds = Math.floor((duration / 1000) % 60)\n    var minutes = Math.floor((duration / (1000 * 60)) % 60)\n    if (seconds < 10) {\n        seconds = 0 + seconds.toString()\n    }\n    return (minutes + \":\" + seconds)\n}\n\nexport const findAlbumsById = (albums, albumId) => {\n    const result = albums.find(item => item.get(\"albumId\") === albumId)\n    return result\n}\n\n\nexport const findArtistsById = (artists, artistId) => {\n    const result = artists.find(item => item.get(\"artistId\") === artistId)\n    return result\n}\n\nexport function removeDuplicates(list) {\n    let result = []\n    let trimmedIdList = Array.from(new Set(list.map(each => each.get(\"artistId\"))))\n    result = trimmedIdList.map(each => {\n        let midResult = findItemFromAList(each, list, \"artistId\")\n        return midResult\n    })\n    return result\n}\n\n\nexport function removeDuplicateAlbums(list) {\n    let result = []\n    let trimmedIdList = Array.from(new Set(list.map(each => each.get(\"albumId\"))))\n    let midResult = trimmedIdList.map(each => {\n        return findItemFromAList(each, list, \"albumId\")\n    })\n    let trimmedNameList = Array.from(new Set(midResult.map(each => each.get(\"albumName\"))))\n    result = trimmedNameList.map(each => {\n        return findItemFromAList(each, list, \"albumName\")\n    })\n    return result\n}\n\nfunction findItemFromAList(id, list, query) {\n    let result\n    list.map(each => {\n        if (id === each.get(query)) {\n            result = each\n        }\n    })\n    return result\n}\n\nexport const formatArtistNameForHeader = (list) => {\n    if (list.length === 3) {\n        return (\"With \" + list[0] + \" ,\" + list[1] + \" and \" + list[2])\n    }\n    if (list.length === 2) {\n        return (\"With \" + list[0] + \" and \" + list[1])\n    }\n    if (list.length === 1) {\n        return (\"With \" + list[0])\n    }\n    if (list.length > 3) {\n        return (\"With \" + list[0] + \" ,\" + list[1] + \" ,\" + list[2] + \" and more...\")\n    }\n    else {\n        return \"\"\n    }\n}\n\nexport const toUrlString = (txtList) => {\n    let result = \"\"\n    if (txtList.length > 0) {\n        result = txtList.join(\"%20\")\n    }\n    return result\n}\n\n\n//Take in the url that is returned from Spotify and then get the access token\nexport const retrieveAccessToken = url => {\n    let result = \"\"\n    console.log(\"url\", url)\n    if (url !== undefined || \"\") {\n        result = url.split(\"#\")\n    }\n    if (result[1] !== undefined) {\n        result = result[1].split(\"&\")\n    }\n    if (result[0] !== undefined) {\n        result = result[0].split(\"=\")\n    }\n    result = result[1]\n    console.log(\"result\", result)\n    return result\n\n}\n\n\n\nexport function createArtistFromList(data) {\n    let artists = []\n    if (data === undefined) { return [] }\n    console.log(\"list in util\", data)\n    if (data.length > 0) {\n        data.map(each => {\n            let url = each.images.length === 0 ? \"\" : each.images[0].url\n            artists.push(createArtist(each.id, each.name, url))\n        })\n    }\n    return artists\n}\n\n\n\nexport function createTracksFromList(list) {\n    let tracks = []\n    if (list.length === 0 || list === undefined) { return [] }\n    list.map(\n        each => {\n            let artists = each.track.artists.map(eachArtist => createArtist(eachArtist.id, eachArtist.name, \"\"))\n            tracks.push(createTrack(each.track.id, each.track.name, convertToMin(each.track.duration_ms), each.track.preview_url, artists))\n        })\n    return tracks\n}\n\nexport function createTracksForAlbum(list) {\n    const tracks = list.map(each => {\n        let artists = []\n        each.artists.map(eachArtist => artists.push(\n            createArtist(eachArtist.id, eachArtist.name, \"\")\n        ))\n        return createTrack(each.id, each.name, convertToMin(each.duration_ms), each.preview_url, artists)\n    })\n    return tracks\n}\n\nexport function createAlbumFromData(data) {\n    const albumImg = data.images[1] ? data.images[1].url : data.images[0] ? data.images[0].url : \"\"\n    let anAlbum = createAlbum(data.id, data.name, albumImg, data.album_type,\n        data.artists.map(eachArtist => eachArtist.id),\n        data.artists.map(eachArtist => eachArtist.name))\n    return anAlbum\n}\n\nexport function createAlbumsForAnArtist(list) {\n    let albumIds = []\n    let albums = []   //instantialize the list to store albums\n    let singles = []\n    list.map(each => {\n        if (!albumIds.includes(each.id)) {\n            albumIds.push(each.id)\n            let artistIds = []\n            each.artists.map(eachArtist => {\n                artistIds.push(eachArtist.id)\n            })\n            const albumImg = each.images[1] ? each.images[1].url : each.images[0] ? each.images[0].url : \"\"\n            let anAlbum = createAlbum(each.id, each.name, albumImg, each.album_type,\n                artistIds, each.artists.map(\n                    eachArtist => eachArtist.name))\n            albums.push(anAlbum)\n            if (each.album_group === \"album\") {\n                albums.push(anAlbum)\n            }\n            if (each.album_group === \"single\") {\n                singles.push(anAlbum)\n            }\n        }\n    })\n    const result = {\n        albums: albums,\n        singles: singles\n    }\n    return result\n}\n\nexport function createSavedAlbums(list) {\n    let albumIds = []\n    let albums = []\n    let artists = []\n    let artistIds = []\n    if (list === undefined) {\n        return\n    }\n    list.map(each => {\n        each.album.artists.map(\n            eachArtist => {\n                artists.push(\n                    createArtist(eachArtist.id, eachArtist.name, \"\")\n                )\n                artistIds.push(eachArtist.id)\n            }\n        )\n        albumIds.push(each.album.id)\n        const albumImg = each.album.images[1] ? each.album.images[1].url : each.album.images[0] ? each.album.images[0].url : \"\"\n        let anAlbum = createAlbum(each.album.id, each.album.name, albumImg, each.album.album_type,\n            each.album.artists.map(eachArtist => eachArtist.id), each.album.artists.map(\n                eachArtist => eachArtist.name))\n        albums.push(anAlbum)\n    })\n    return {\n        albums: albums,\n        artists: artists\n    }\n}\n\nexport function createTopTracksForArtist(list) {\n    let tracks = []\n    list.map(each => {\n        const artists = each.artists.map(eachArtist => { return createArtist(eachArtist.id, eachArtist.name, \"\") })\n        tracks.push(createTrack(each.id, each.name, convertToMin(each.duration_ms), each.preview_url, artists)\n        )\n    })\n    return tracks.slice(0, 5)\n}\n\nexport function createUsersTopTracks(list) {\n    let albumIds = []\n    let albums = []\n    let artists = []\n    if (list === undefined) {\n        return\n    }\n    list.map(each => {\n        let thisArtists = each.album.artists.map(\n            eachArtist => createArtist(eachArtist.id, eachArtist.name, \"\")\n        )\n        artists = artists.concat(thisArtists)\n        albumIds.push(each.album.id)\n        let anAlbum = createAlbum(each.album.id, each.album.name, each.album.images[1].url,\n            each.album.album_type, each.album.artists.map(eachArtist => eachArtist.id), each.album.artists.map(\n                eachArtist => eachArtist.name))\n        albums.push(anAlbum)\n    })\n    return {\n        albumIds: albumIds,\n        albums: albums,\n        artists: artists\n    }\n}\n\nexport function createTop2Artists(list) {\n    if (list === undefined) {\n        return\n    }\n    let artists = []\n    const firstArtist = createArtist(list[0].id, list[0].name, list[0].images[1].url)\n    const secondArtist = createArtist(list[1].id, list[1].name, list[1].images[1].url)\n    artists.push(firstArtist, secondArtist)\n    return artists\n}\n\nexport function createRecentPlayed(list) {\n    let albums = []\n    let albumIds = []\n    let artists = []\n    if (list === undefined) {\n        return\n    }\n    list.map(each => {\n        let thisArtists = each.track.album.artists.map(\n            eachArtist => createArtist(eachArtist.id, eachArtist.name, \"\"))\n        artists = artists.concat(thisArtists)\n        albumIds.push(each.track.album.id)\n        let anAlbum = createAlbum(each.track.album.id, each.track.album.name, each.track.album.images[1].url,\n            each.track.album.album_type, each.track.album.artists.map(\n                eachArtist => eachArtist.id), each.track.album.artists.map(\n                    eachArtist => eachArtist.name))\n        albums.push(anAlbum)\n    })\n    return {\n        albumIds: albumIds,\n        artists: artists,\n        albums: albums\n    }\n}\n\nexport function createPlaylist(list) {\n    let playlists = list.map(each => {\n        return {\n            id: each.id,\n            name: each.name,\n            img: each.images[0].url,\n            owner: each.owner.display_name\n        }\n    })\n    return playlists\n}","import { useState, useEffect, useCallback, useRef } from 'react';\nimport { useSelector, useDispatch } from \"react-redux\"\nimport { fetchArtistsAlbumsLoading } from \"../../core/artist/Actions\"\nimport { fetchAlbumTracksLoading } from \"../../core/track/Actions\"\nimport history from \"../../core/history\"\nimport { getSavedAlbums, getSavedArtists, getTrackToToggle} from \"../../core/Selectors\"\nimport { loadLibraryPage } from \"../../core/library/Actions\"\n\nimport { api_base_url } from \"../../core/Constants\"\nimport { createRequest, convertToMin } from \"../../core/utils/Utils\"\nimport { store } from \"../../index\"\nimport createTrack from \"../../core/track/Track\"\nimport createArtist from \"../../core/artist/Artist\"\n\n\nexport default function useLoadTracks(pageNumber) {\n    const [loading, setLoading] = useState(true)\n    const [error, setError] = useState(false)\n    const [tracks, setTracks] = useState([])\n    const [hasMore, setHasMore] = useState(false)\n\n    useEffect(() => {\n        setLoading(true)\n        setError(false)\n        const offset = pageNumber > 1 ? (pageNumber - 1) * 10 : 0\n        const url = api_base_url + \"me/tracks?limit=10&offset=\" + offset\n        const token = store.getState().UserReducer.accessToken\n        var myRequest = createRequest(token, url, \"GET\")\n        fetch(myRequest).then((response) => {\n            response.json().then(\n                data => {\n                    if (data === undefined) { return }\n                    let newTracks = []\n                    data.items.map(\n                        each => {\n                            let artists = each.track.artists.map(eachArtist => createArtist(eachArtist.id, eachArtist.name, \"\"))\n                            tracks.push(createTrack(each.track.id, each.track.name, convertToMin(each.track.duration_ms), each.track.preview_url, artists))\n                        }\n                    )\n                    setHasMore(data.total > offset + 10)\n                    setTracks(tracks.concat(newTracks))\n                    setLoading(false)\n                })\n\n        }).catch(e => {\n            setError(true)\n        })\n    }, [pageNumber])\n\n    return { loading, error, tracks, hasMore }\n}\n\nexport const useDispatchArtistPage = () => {\n    const dispatch = useDispatch()\n\n    const fetchTracks = useCallback(\n        (e) => dispatch(fetchAlbumTracksLoading(e.target.id)),\n        [dispatch]\n    )\n\n    const fetchArtistPage = useCallback(\n        (e) => {\n            dispatch(fetchArtistsAlbumsLoading(e.target.id))\n            history.push(\"/albums\")\n        },\n        [dispatch],\n    )\n\n    return { fetchTracks, fetchArtistPage }\n}\n\nexport const useDispatchLibraryPage = () => {\n    const dispatch = useDispatch()\n\n    const savedArtists = useSelector(getSavedArtists)\n    const savedAlbums = useSelector(getSavedAlbums)\n\n\n    const fetchLibrary = useCallback(() => {\n        dispatch(loadLibraryPage())\n    }, [dispatch])\n\n\n    useEffect(() => {\n        if (savedAlbums !== undefined && savedAlbums.length === 0) {\n            fetchLibrary()\n        }\n    }, [savedAlbums, savedArtists])\n\n    return { savedArtists, savedAlbums }\n}\n\nexport const useSavedTracks = () => {\n    const [pageNumber, setPageNumber] = useState(1)\n    const trackSaved = useSelector(getTrackToToggle)\n\n    const { loading, error, tracks, hasMore } = useLoadTracks(pageNumber)\n\n    useEffect(() => {\n        //fetch the top 10 tracks and save to the local state.\n        //when scroll, fetch another 10 tracks and append to the local state\n\n    }, [pageNumber])\n\n\n    const observer = useRef()\n    const lastTrackElementRef = useCallback(node => {\n        if (loading) return\n        if (observer.current) observer.current.disconnect()\n        observer.current = new IntersectionObserver(entries => {\n            console.log(\"entries\", entries, entries[0])\n            // TODO wrong entries[0].isIntersecting\n            if (entries[0].isIntersecting && hasMore) {\n                //TODO isIntersecting??????\n\n                setPageNumber(prevPageNumber => prevPageNumber + 1)\n            }\n        })\n        if (node) observer.current.observe(node)\n    }, [loading, hasMore])\n\n    return { trackSaved, tracks, lastTrackElementRef }\n}","import React, { useEffect } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport ArtistPageHeader from \"../components/artist/ArtistPageHeader\"\nimport ArtistTrackCard from \"../components/track-card/ArtistTrackCard\"\nimport { useSelector } from \"react-redux\"\nimport {\n    getCurrentArtistsAlbums, getCurrentArtist, getToken, getCurrentArtistSaved,\n    getRelatedArtists\n} from \"../../core/Selectors\"\nimport history from \"../../core/history\"\nimport { useDispatchArtistPage } from \"./CustomHooks\"\n\n\nexport default function ArtistPage() {\n    const currentArtist = useSelector(getCurrentArtist)\n    let saved = useSelector(getCurrentArtistSaved)\n    let relatedArtists = useSelector(getRelatedArtists)\n    const albums = useSelector(getCurrentArtistsAlbums)\n    const token = useSelector(getToken)\n\n    const img = currentArtist !== undefined && currentArtist.get(\"artistImg\") === undefined ? \"\" : currentArtist.get(\"artistImg\")\n\n    const { fetchTracks, fetchArtistPage } = useDispatchArtistPage()\n\n\n    useEffect(() => {\n        if (token === \"\") {\n            history.push(\"/\")\n        }\n    }, [])\n\n    if (albums.albums === undefined || albums.singles === undefined || relatedArtists === undefined) {\n        return <div className=\"ArtistPage\"></div>\n    }\n\n\n\n\n\n    return (\n        <div className=\"ArtistPage\">\n            {currentArtist !== (\"\" || undefined) &&\n                <ArtistPageHeader imgSrc={img} artistName={currentArtist.get(\"artistName\")}\n                    key={uuidv4()} saved={saved} />}\n            <h1>Albums</h1>\n            <div className=\"list\">\n                {albums.albums.map(each => {\n                    return (<ArtistTrackCard onClick={fetchTracks}  id={each.get(\"albumId\")}\n                        imgSrc={each.get(\"albumImg\")} name={each.get(\"albumName\")} />)\n                })}\n            </div>\n            <h1>Singles and EPs</h1>\n            <div className=\"list\">\n                {albums.singles.map(each => {\n                    return (<ArtistTrackCard onClick={fetchTracks} id={each.get(\"albumId\")}\n                        imgSrc={each.get(\"albumImg\")} name={each.get(\"albumName\")} />)\n                })}\n            </div>\n            <h1>Related Artists</h1>\n            <div className=\"list\">\n                {relatedArtists.map(each => {\n                    return (<ArtistTrackCard id={each.get(\"artistId\")}\n                        round={true} onClick={() => fetchArtistPage}\n                        imgSrc={each.get(\"artistImg\")} name={each.get(\"artistName\")} />)\n                })}\n            </div>\n        </div>)\n}","import React from \"react\";\nimport { ListItem, ListItemIcon, ListItemText } from '@material-ui/core';\nimport history from \"../../../core/history\"\nimport HomeOutlinedIcon from '@material-ui/icons/HomeOutlined';\nimport SearchOutlinedIcon from '@material-ui/icons/SearchOutlined';\nimport LibraryMusicOutlinedIcon from '@material-ui/icons/LibraryMusicOutlined';\nimport AddBoxIcon from '@material-ui/icons/AddBox';\n\nexport default function SideMenu() {\n\n    return (\n        <div className=\"SideMenu\">\n            <ListItem className=\"link\" button onClick={() => history.push(\"/Home\")}>\n                <ListItemIcon>\n                    <HomeOutlinedIcon className=\"nav-icon\" fontSize='inherit' />\n                </ListItemIcon>\n                <ListItemText className=\"nav-item\" primary=\"Home\" />\n            </ListItem>\n            <ListItem className=\"link\" button onClick={() => history.push(\"/search\")}>\n                <ListItemIcon>\n                    <SearchOutlinedIcon className=\"nav-icon\" fontSize='inherit' />\n                </ListItemIcon>\n                <ListItemText className=\"nav-item\" primary=\"Search\" />\n            </ListItem>\n            <ListItem className=\"link\" button onClick={() => history.push(\"/library\")}>\n                <ListItemIcon>\n                    <LibraryMusicOutlinedIcon className=\"nav-icon\" fontSize='inherit' />\n                </ListItemIcon>\n                <ListItemText className=\"nav-item\" primary=\"Your Library\" />\n            </ListItem>\n            <p className=\"nav-divider\" >PLAYLISTS</p>\n            <ListItem className=\"link\" button onClick={() => history.push(\"/create-playlist\")}>\n                <ListItemIcon>\n                    <AddBoxIcon className=\"nav-icon\" fontSize='inherit' color='inherit' />\n                </ListItemIcon>\n                <ListItemText className=\"nav-item\" primary=\"Create Playlist\" />\n            </ListItem>\n        </div>\n    )\n}","import React, { useCallback } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { useDispatch } from \"react-redux\"\nimport { fetchArtistsAlbumsLoading } from \"../../../core/artist/Actions\"\nimport PropTypes from 'prop-types';\nimport history from \"../../../core/history\"\n\nexport default function ArtistCard(props) {\n    const dispatch = useDispatch()\n\n    const fetchArtists = useCallback(\n        () => {\n            dispatch(fetchArtistsAlbumsLoading(props.artistId))\n            history.push(\"/artists\")\n        },\n        [dispatch],\n    )\n\n    return (\n        <div className=\"card\" key={uuidv4()} onClick={fetchArtists}>\n            <div className={props.round ? \"artist-card-image round\" : \"artist-card-image\"}>\n                <img src={props.imgSrc} alt=\"track-card\" key={uuidv4()}\n                />\n            </div>\n            <div className=\"cardContent\" >\n                <p >{props.title}</p>\n                <span>{props.subtitle}</span>\n\n            </div>\n        </div>\n    )\n}\n\nArtistCard.prototype = {\n    subtitle: PropTypes.string,\n    title: PropTypes.string,\n    imgSrc: PropTypes.string,\n    artistId: PropTypes.string,\n}","import React, { useState } from 'react';\nimport AlbumCard from \"../components/track-card/AlbumCard\"\nimport ArtistCard from \"../components/track-card/ArtistCard\"\nimport TracklistItem from \"../components/track-card/TracklistItem\"\nimport { useDispatchLibraryPage, useSavedTracks } from \"./CustomHooks\"\nimport { ListItem, ListItemText } from '@material-ui/core';\nimport { v4 as uuidv4 } from 'uuid';\n\nexport const SavedTracks = () => {\n    const { trackSaved, tracks, lastTrackElementRef } = useSavedTracks\n\n    return (\n        <ul className=\"songList\">\n            {tracks !== undefined && tracks.map((each, index) => {\n                if (tracks.length === index + 1) {\n                    return (<TracklistItem saved={trackSaved[tracks.indexOf(each)]}\n                        index={tracks.indexOf(each)} key={uuidv4()}\n                        previous={tracks[tracks.indexOf(each) > 0 ? tracks.indexOf(each) - 1 : 0]}\n                        next={tracks[tracks.indexOf(each) + 1 <= tracks.length ? tracks.indexOf(each) + 1 : -1]} current={each}\n                    />)\n                }\n                else {\n                    return (\n                        <TracklistItem saved={trackSaved[tracks.indexOf(each)]}\n                            index={tracks.indexOf(each)} key={uuidv4()}\n                            previous={tracks[tracks.indexOf(each) > 0 ? tracks.indexOf(each) - 1 : 0]}\n                            next={tracks[tracks.indexOf(each) + 1 <= tracks.length ? tracks.indexOf(each) + 1 : -1]} current={each}\n                        />\n                    )\n                }\n            })}\n        </ul>\n    )\n}\n\nexport default function LibraryPage() {\n    const [view, setView] = useState(\"albums\")\n\n    const { savedArtists, savedAlbums } = useDispatchLibraryPage()\n\n    return (\n        <div className=\"LibraryPage\" >\n            <div className=\"head-row\" >\n                <ListItem className=\"tab\" button onClick={() => setView(\"albums\")}>\n                    <ListItemText className={view === \"albums\" ? \"library-tab selected\" : \"library-tab\"} primary=\"Albums\" />\n                </ListItem>\n                <ListItem className=\"tab\" button onClick={() => setView(\"artists\")}>\n                    <ListItemText className={view === \"artists\" ? \"library-tab selected\" : \"library-tab\"} primary=\"Artists\" />\n                </ListItem>\n                <ListItem className=\"tab\" button onClick={() => setView(\"songs\")}>\n                    <ListItemText className={view === \"songs\" ? \"library-tab selected\" : \"library-tab\"} primary=\"Songs\" />\n                </ListItem>\n            </div>\n            <div className=\"list\" >\n                {view === \"albums\" && savedAlbums !== undefined && savedAlbums.length > 0 && savedAlbums.map(each =>\n                    <AlbumCard title={each.get(\"albumName\")} subtitle={each.get(\"artistNames\")}\n                        artistIds={each.get(\"artistIds\")} albumId={each.get(\"albumId\")} imgSrc={each.get(\"albumImg\")}\n                    />)}\n                {view === \"artists\" && savedArtists !== undefined && savedArtists.length > 0 && savedArtists.map(each =>\n                    <ArtistCard title={each.get(\"artistName\")} round={true}\n                        subtitle=\"Artist\" artistId={each.get(\"artistId\")} imgSrc={each.get(\"artistImg\")} />)}\n                {view === \"songs\" &&\n                    <SavedTracks />\n                }\n            </div>\n        </div>\n    )\n}","import { api_base_url } from \"../Constants\"\nimport { createRequest } from \"../utils/Utils\"\nimport { store } from \"../../index\"\n\n//Get the top 6 tracks from the recently played tracks\nexport async function fetchRecentPlayed(token) {\n    if (token === undefined || token === \"\") {\n        return\n    }\n    const url = api_base_url + \"me/player/recently-played?type=track&limit=7\"\n    var myRequest = createRequest(token, url, \"GET\")\n    const response = await fetch(myRequest)\n    const data = await response.json()\n    return data.items;\n}\n\nexport async function fetchUsersTopTracks(token) {\n    if (token === undefined || token === \"\") {\n        return\n    }\n    const url = api_base_url + \"me/top/tracks?limit=6\"\n    var myRequest = createRequest(token, url, \"GET\")\n    const response = await fetch(myRequest)\n    const data = await response.json()\n    return data.items;\n}\n\n//TODO Do I still need it???\nexport async function fetchUsersTopTwoArtists(token) {\n    if (token === undefined || token === \"\") {\n        return\n    }\n    const url = api_base_url + \"me/top/artists?limit=2\"\n    var myRequest = createRequest(token, url, \"GET\")\n    //.then((response) => {\n    const response = await fetch(myRequest)\n    const data = await response.json()\n    return data.items;\n}\n\n\nexport async function fetchArtistsTopTracks(token) {\n    if (token === undefined || token === \"\") {\n        return\n    }\n    const artistId = store.getState().ArtistReducer.get(\"currentArtistId\")\n    const url = api_base_url + \"artists/\" + artistId + \"/top-tracks?country=AU\"\n    var myRequest = createRequest(token, url, \"GET\")\n    const response = await fetch(myRequest)\n    const data = await response.json()\n    return data.tracks;\n}\n\n\nexport async function fetchTracksForAlbum(token, albumId) {\n    const url = api_base_url + \"albums/\" + albumId + \"/tracks\"\n    var myRequest = createRequest(token, url, \"GET\")\n    const response = await fetch(myRequest)\n    const data = await response.json()\n    return data.items;\n}\n\nexport async function fetchArtistsAlbums(token) {\n    const artistId = store.getState().ArtistReducer.get(\"currentArtistId\")\n    const url = api_base_url + \"artists/\" + artistId + \"/albums\"\n    var myRequest = createRequest(token, url, \"GET\")\n    const response = await fetch(myRequest)\n    const data = await response.json()\n    return data.items;\n}\n\nexport async function fetchAlbumById(token, albumId) {\n    const url = api_base_url + \"albums/\" + albumId\n    var myRequest = createRequest(token, url, \"GET\")\n    const response = await fetch(myRequest)\n    const data = await response.json()\n    return data;\n}\n\nexport async function fetchArtistById(token) {\n    const artistId = store.getState().ArtistReducer.get(\"currentArtistId\")\n    const url = api_base_url + \"artists/\" + artistId\n    var myRequest = createRequest(token, url, \"GET\")\n    const response = await fetch(myRequest)\n    const data = await response.json()\n    return data;\n}\n\nexport async function fetchSearchResults(token, query, callback) {\n    const url = api_base_url + \"search?q=\" + query + \"&type=track%2Cartist%2Cplaylist%2Calbum&limit=6\"\n    var myRequest = createRequest(token, url, \"GET\")\n    const response = await fetch(myRequest)\n    const data = await response.json()\n    return data;\n}\n\nexport async function fetchSavedAlbums(token) {\n    const url = api_base_url + \"me/albums\"\n    var myRequest = createRequest(token, url, \"GET\")\n    const response = await fetch(myRequest)\n    const data = await response.json()\n    return data.items;\n    //  createSavedAlbums\n    // store.dispatch(saveAlbums(albums))\n    // store.dispatch(saveToSavedAlbums(albums))\n    // store.dispatch(saveArtists(artists))\n}\n\nexport async function fetchRelatedArtists(token) {\n    const artistId = store.getState().ArtistReducer.get(\"currentArtistId\")\n    const url = api_base_url + \"artists/\" + artistId + \"/related-artists\"\n    var myRequest = createRequest(token, url, \"GET\")\n    const response = await fetch(myRequest)\n    const data = await response.json()\n    return data.artists\n}\n\nexport async function fetchSavedArtists(token) {\n    const url = api_base_url + \"me/following?type=artist\"\n    var myRequest = createRequest(token, url, \"GET\")\n    const response = await fetch(myRequest)\n    const data = await response.json()\n    return data.artists.items;\n}\n\nexport async function fetchSavedTracks(token) {\n    const url = api_base_url + \"me/tracks\"\n    var myRequest = createRequest(token, url, \"GET\")\n    const response = await fetch(myRequest)\n    const data = await response.json()\n    return data.items;\n}\n\nexport async function fetchSavedTracksNextPage(token, pageNumber) {\n    const url = api_base_url + \"me/tracks?limit=10&offset=\" + (pageNumber - 1) * 20\n    var myRequest = createRequest(token, url, \"GET\")\n    const response = await fetch(myRequest)\n    const data = await response.json()\n    return data.items;\n}\n\nexport async function fetchSavedPlaylists(token) {\n    const url = api_base_url + \"me/playlists\"\n    var myRequest = createRequest(token, url, \"GET\")\n    const response = await fetch(myRequest)\n    const data = await response.json()\n    console.log(\"saved playlists\", data)\n    return data;\n}\n\nexport async function saveRemoveAlbum(token, albumId, method) {\n    const url = api_base_url + \"me/albums?ids=\" + albumId\n    var myRequest = createRequest(token, url, method)\n    var response = await fetch(myRequest)\n    return response.status\n}\n\nexport async function followUnfollowArtist(token, artistId, method) {\n    const url = api_base_url + \"me/following?type=artist&ids=\" + artistId\n    var myRequest = createRequest(token, url, method)\n    var response = await fetch(myRequest)\n    return response.status\n}\n\nexport async function saveRemoveTrack(token, trackId, method) {\n    const url = api_base_url + \"me/tracks?ids=\" + trackId\n    var myRequest = createRequest(token, url, method)\n    var response = await fetch(myRequest)\n    return response.status\n}\n\nexport async function followUnfollowPlaylist(token, playlistId, method) {\n    const url = api_base_url + \"playlists/\" + playlistId + \"/followers\"\n    var myRequest = createRequest(token, url, method)\n    var response = await fetch(myRequest)\n    return response.status\n}\n\nexport async function checkFollowArtist(token, artistId) {\n    const url = api_base_url + \"me/following/contains?type=artist&ids=\" + artistId\n    var myRequest = createRequest(token, url, \"GET\")\n    var response = await fetch(myRequest)\n    var data = await response.json()\n    return data  //[true] or [false]\n}\n\nexport async function checkFollowAlbum(token, albumId) {\n    const url = api_base_url + \"me/albums/contains?ids=\" + albumId\n    var myRequest = createRequest(token, url, \"GET\")\n    var response = await fetch(myRequest)\n    var data = await response.json()\n    console.log(\"data albums\", data)\n    return data  //[true] or [false]\n}\n\nexport async function checkFollowTracks(token, trackIds) {\n    const formattedIds = trackIds.join(\",\")\n    const url = api_base_url + \"me/tracks/contains?ids=\" + formattedIds\n    var myRequest = createRequest(token, url, \"GET\")\n    var response = await fetch(myRequest)\n    var data = await response.json()\n    console.log(\"data tracks\", data)\n    return data\n}","import React, { useState } from \"react\";\nimport {useSelector} from \"react-redux\"\nimport { createArtistFromList, createTracksForAlbum, createPlaylist,createAlbumFromData } from \"../../../core/utils/Utils\"\nimport { throttle } from \"lodash\"\nimport { fetchSearchResults } from \"../../../core/api/api-calls\"\nimport { getToken } from \"../../../core/Selectors\";\n\nexport default function SearchBar(props) {\n    const [query, setQuery] = useState(\"\")\n    const handleInputDebounce = throttle(handleChange, 1000)\n    const token = useSelector(getToken)\n\n    async function handleChange(e) {\n        let newQuery = encodeURI(e.target.value)\n        setQuery(encodeURI(e.target.value))\n        const data = await fetchSearchResults(token, newQuery)\n        if(data!== undefined && data.tracks!== undefined && data.artists!== undefined\n            && data.playlists!== undefined && data.albums!== undefined){\n            let artists = createArtistFromList(data.artists.items)\n            let tracks = createTracksForAlbum(data.tracks.items)\n            let albums = data.albums.items.map(each => createAlbumFromData(each))\n            let playlists = createPlaylist(data.playlists.items)\n            props.found({\n                artists: artists,\n                albums: albums,\n                tracks: tracks,\n                playlists: playlists\n            })\n        }\n    }\n\n    return (\n        <div className=\"SearchBar\">\n            <input className=\"search-input\" type=\"text\" onChange={handleInputDebounce}\n                placeholder=\"Search for artists or songs\" />\n        </div>\n    )\n}","import React, { useState, useEffect } from \"react\";\nimport SearchBar from \"../components/search-bar/SearchBar\"\nimport AlbumCard from \"../components/track-card/AlbumCard\"\nimport ArtistCard from \"../components/track-card/ArtistCard\"\nimport TracklistItemNew from \"../components/track-card/TracklistItem\"\nimport { store } from \"../../index\"\nimport { getTrackToToggle } from \"../../core/Selectors\"\nimport { v4 as uuidv4 } from 'uuid';\n\nexport default function Searchpage() {\n    const [showResults, setShowResults] = useState(false)\n    const [tracks, setTracks] = useState([])\n    const [artists, setArtists] = useState([])\n    const [albums, setAlbums] = useState([])\n    const [playlists, setPlaylists] = useState([])\n    const [trackSaved, setTrackSaved] = useState([])\n    const [notFound, setNotFound] = useState(false)\n\n    const storeState = store.getState()\n\n    useEffect(() => {\n        const tracksToToggle = getTrackToToggle(storeState)\n        if (tracksToToggle.length !== 0) {\n            setTrackSaved(getTrackToToggle(storeState))\n        }\n    }, [storeState.TrackReducer])\n\n\n    function handleResult(data) {\n        setShowResults(false)\n        setTracks(data.tracks)\n        setArtists(data.artists)\n        setAlbums(data.albums)\n        setPlaylists(data.playlists)\n        setShowResults(true)\n    }\n\n    function displayError(err) {\n        console.log(err)\n    }\n\n    return (\n        <div className=\"Searchpage\">\n            <div className=\"SearchResults\">\n                <SearchBar found={handleResult} onErr={displayError} />\n                {notFound && <p className=\"not-found-message\">We could not find any result.</p>}\n                {showResults &&\n                    <div className=\"tracks\">\n                        <p className=\"title\"> Songs</p>\n                        <ul className=\"songList\">\n                            {tracks.map(each => <TracklistItemNew saved={trackSaved[tracks.indexOf(each)]}\n                                index={tracks.indexOf(each)} key={uuidv4()}\n                                previous={tracks[tracks.indexOf(each) > 0 ? tracks.indexOf(each) - 1 : 0]}\n                                next={tracks[tracks.indexOf(each) + 1 <= tracks.length ? tracks.indexOf(each) + 1 : -1]} current={each}\n                            />)}\n                        </ul>\n                    </div>}\n                {showResults && <div className=\"artists\" >\n                    <p className=\"title\"> Artists</p>\n                    <div className=\"contents\">\n                        {artists.map(each => <ArtistCard title={each.get(\"artistName\")} key={uuidv4()}\n                            subtitle=\"Artist\" artistId={each.get(\"artistId\")} imgSrc={each.get(\"artistImg\")} />)}\n                    </div>\n                </div>}\n                {showResults && <div className=\"albums\">\n                    <p className=\"title\"> Albums</p>\n                    <div className=\"contents\">\n                        {albums.map(each =>\n                            <AlbumCard title={each.get(\"albumName\")} subtitle={each.get(\"artistNames\")} key={uuidv4()}\n                                artistIds={each.get(\"artistIds\")} albumId={each.get(\"albumId\")} imgSrc={each.get(\"albumImg\")}\n                            />)}\n                    </div>\n                </div>}\n                }\n            </div>\n        </div>\n    )\n}\n\n","import React, { useEffect, useCallback } from 'react';\nimport { useSelector, useDispatch } from \"react-redux\"\nimport { resume, pause, next, previous } from \"../../../core/player/Actions\"\nimport ReactAudioPlayer from 'react-audio-player';\nimport SkipNextIcon from '@material-ui/icons/SkipNext';\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious';\nimport { getPlayingTrack } from \"../../../core/Selectors\"\n\nlet initialEntity = new Map()\ninitialEntity.set(\"currentTrack\", \"\")  //a track object\ninitialEntity.set(\"cursor\", \"\")  //previous track, next track //Inside the tracks are objects of {albumId:\"\", tracks:[]})\n\nexport default function MusicControl() {\n    const currentTrack = useSelector(getPlayingTrack)\n\n    const dispatch = useDispatch()\n\n\n    const playNextTrack = useCallback(\n        () => {\n            //if (playerReducer.get(\"currentTrack\") !== \"\") {\n              //  dispatch(next())\n            //}\n        },\n        [dispatch],\n    )\n\n    const playPreviousTrack = useCallback(\n        () => {\n           // if (playerReducer.get(\"currentTrack\") !== \"\") {\n            //    dispatch(previous())\n           // }\n        },\n        [dispatch],\n    )\n\n    return (\n        <div className='song-player-container musicControls'>\n            <div className='song-details'>\n                <p className='song-name'>{currentTrack !== (\"\" || undefined) ? currentTrack.get(\"name\") : \"\"}</p>\n                <p className='artist-name'>{currentTrack !== (\"\" || undefined) ? currentTrack.get(\"artists\").join(\",\") : \"\"}</p>\n            </div>\n            <div className='song-controls'>\n                <SkipPreviousIcon className='reverse-song' font-size=\"inherit\" onClick={playPreviousTrack} />\n                <ReactAudioPlayer controls={true} src={currentTrack !== (\"\" || undefined) ? currentTrack.get(\"url\") : \"\"} \n                onEnded={playNextTrack}/>\n                  <SkipNextIcon font-size=\"inherit\" className=\"next-song icon\" aria-hidden=\"true\" onClick={playNextTrack} />\n            </div>\n\n            <div className='song-progress-container'>\n\n                <div className='song-progress'>\n\n                </div>\n\n            </div>\n\n        </div>\n    )\n}","import React, { useEffect, useCallback } from 'react';\nimport Button from '@material-ui/core/Button';\nimport { useDispatch } from 'react-redux'\nimport { authorization_base_url, scope, client_id, redirect_url, response_type, } from \"../../core/Constants\"\nimport { retrieveAccessToken } from \"../../core/utils/Utils\"\nimport { saveAccessToken } from \"../../core/user/Actions\"\n\nexport default function Login({setShow}) {\n    const url = `${authorization_base_url}client_id=${client_id}&redirect_uri=${redirect_url}&scope=${scope.join(\"%20\")}&response_type=${response_type}`\n    const dispatchStore = useDispatch()\n\n    //Save the access token to the store\n    const dispatchSaveToken = useCallback(\n        (accessToken) => dispatchStore(saveAccessToken(accessToken)),\n        [useDispatch()]\n    )\n\n    useEffect(() => {\n        //save the token to the redux store\n        let newToken = retrieveAccessToken(window.location.href)\n        if (newToken !== \"\" && newToken !== undefined) {\n            setShow(true)\n            dispatchSaveToken(newToken)\n        }\n    }, [window.location.href]);\n\n    return (\n            <Button className=\"Login\" href={url} \n            style={{ color: \"white\" , fontSize:\"3rem\", backgroundColor:\"#0a0a0a\"}}> \n            Log in to Spotify</Button>\n    );\n}","export const FETCH_USER_FAILED = 'FETCH_USER_FAILED'\nexport const FETCH_USER_FULFILLED = 'FETCH_USER_FULFILLED'\nexport const FETCH_USER_PENDING = 'FETCH_USER_PENDING'\n\nexport const LOAD_USER = 'LOAD_USER'\nexport const SAVE_ACCESS_TOKEN = 'SAVE_ACCESS_TOKEN'\n\nexport const fetchUserFailed = error => ({\n    type: FETCH_USER_FAILED,\n    payload: error\n})\n\nexport const fetchUserFulfilled = (userId, data) => ({\n    type: FETCH_USER_FULFILLED,\n    payload: {\n        user: data\n    }\n})\n\nexport const fetchUserPending = userId => ({\n    type: FETCH_USER_PENDING,\n    payload: {\n        userId\n    }\n})\n\nexport const loadUser = userId => ({\n    type: LOAD_USER,\n    payload: {\n        userId: parseInt(userId, 10)\n    }\n})\n\nexport const saveAccessToken = token => ({\n    type: SAVE_ACCESS_TOKEN,\n        accessToken: token\n})\n\n\n\nexport const userRequestActions = {\n    failed: fetchUserFailed,\n    fulfilled: fetchUserFulfilled,\n    pending: fetchUserPending\n};","import React, { useState } from 'react';\nimport { hot } from 'react-hot-loader/root'\nimport { withRouter } from \"react-router\"\nimport { Route, Switch, } from 'react-router-dom';\nimport Homepage from \"./views/pages/HomePage\"\nimport AlbumPage from \"./views/pages/AlbumPage\"\nimport ArtistPage from \"./views/pages/ArtistPage\"\nimport SideMenu from \"./views/components/side-menu/SideMenu\"\nimport LibraryPage from \"./views/pages/LibraryPage\"\nimport SearchPage from \"./views/pages/SearchPage\"\nimport MusicControl from \"./views/components/music-control/MusicControler\"\nimport Login from \"./views/pages/Login\"\nimport './App.scss'\n\nconst App = () => {\n  const [show, setShow] = useState(false)\n\n  return (\n    <div className= \"outerWrap\">\n      <div className=\"App\">\n        <div className={show ? \"upperPart\" : \"full-screen\"}>\n          {show && <SideMenu />}\n          <div className= \"main\">\n            <Switch>\n              <Route path=\"/\" exact component={() => <Login setShow={setShow} />} />\n              <Route path=\"/Home\" exact component={Homepage} />\n              <Route path=\"/albums\" exact component={AlbumPage} />\n              <Route path=\"/artists\" exact component={ArtistPage} />\n              <Route path=\"/search\" exact component={SearchPage} />\n              <Route path=\"/library\" exact component={LibraryPage} />\n              <Route path=\"/playlists\" exact component={LibraryPage} />\n              <Route path=\"/create-playlist\" exact component={LibraryPage} />\n            </Switch>\n          </div>\n        </div>\n        {show && <MusicControl />}\n      </div>\n    </div>\n  );\n}\n\nexport default process.env.NODE_ENV === \"development\" ? hot(App) : App\n","export const SAVE_ALBUMS = \"SAVE_ALBUMS\"\nexport const FETCH_ARTISTS_ALBUMS_SUCCESSFUL = \"FETCH_ARTISTS_ALBUMS_SUCCESSFUL\"\n\nexport const saveAlbums = albums => ({\n    type: SAVE_ALBUMS,\n    albums: albums\n})\n\nexport const fetchArtistsAlbumsSuccessful = data => ({\n    type: FETCH_ARTISTS_ALBUMS_SUCCESSFUL,\n    data: data\n})","import {\n    SAVE_ARTISTS, FETCH_ARTISTS_ALBUMS_LOADING,\n    SAVE_RELATED_ARTISTS, UPDATE_CURRENT_ARTIST_SAVED\n} from \"./Actions\"\nimport { removeDuplicates } from \"../utils/Utils\"\nimport { FETCH_ARTISTS_ALBUMS_SUCCESSFUL } from \"../album/Actions\";\n\nconst initialState = new Map()\ninitialState.set(\"currentArtistId\", \"\")\ninitialState.set(\"artists\", [])\ninitialState.set(\"relatedArtists\", [])\n\nconst ArtistReducer = (state = initialState, action) => {\n    let newState = new Map(state)\n    const artistId = newState.get(\"currentArtistId\")\n    let currentArtist = newState.get(\"artists\").find(item => artistId === item.get(\"artistId\"))\n    switch (action.type) {\n        case SAVE_ARTISTS:\n            const newArtists = action.artists.concat(state.get(\"artists\"))\n            const trimmedNewArtists = removeDuplicates(newArtists)\n            newState.set(\"artists\", trimmedNewArtists)\n            return newState\n        case FETCH_ARTISTS_ALBUMS_LOADING:\n            newState.set(\"currentArtistId\", action.artistId)\n            newState.set(\"relatedArtists\", [])\n            return newState\n        case FETCH_ARTISTS_ALBUMS_SUCCESSFUL:\n            const albumIds = action.data.albums.map(each => each.get(\"albumId\"))\n            const singleIds = action.data.singles.map(each => each.get(\"albumId\"))\n            currentArtist.set(\"albums\", {\n                albums: albumIds,\n                singles: singleIds\n            })  //Object, not map\n            return newState\n        case SAVE_RELATED_ARTISTS:\n            const relatedArtistIds = action.artists.map(each => each.get(\"artstId\"))\n            // save the ids of the related artists into the current artist\n            currentArtist.set(\"relatedArtists\", relatedArtistIds)\n            newState.set(\"relatedArtists\", action.artists)\n            return newState\n        case UPDATE_CURRENT_ARTIST_SAVED:\n            currentArtist.set(\"saved\", action.data[0])\n            return newState\n        default:\n            return state;\n    }\n}\n\nexport default ArtistReducer;","import { SAVE_ACCESS_TOKEN } from \"./Actions\"\n\nlet initialState = {\n    accessToken: \"\",\n}\n\nconst UserReducer = (state = initialState, action) => {\n    let newState;\n    switch (action.type) {\n        case SAVE_ACCESS_TOKEN:\n            newState = Object.assign({}, state)\n            newState.accessToken = action.accessToken\n            return newState\n        default:\n            return state;\n    }\n}\n\nexport default UserReducer;","import { SAVE_ALBUMS } from \"./Actions\"\nimport { FETCH_ARTISTS_ALBUMS_LOADING, FETCH_ARTISTS_ALBUMS_SUCCESSFUL } from \"../artist/Actions\"\nimport { removeDuplicateAlbums } from \"../utils/Utils\"\nimport { FETCH_ALBUM_TRACKS_LOADING, FETCH_ALBUM_TRACKS_SUCCESSFUL } from \"../track/Actions\"\n\nconst initialState = new Map()\ninitialState.set(\"albums\", [])\ninitialState.set(\"currentAlbumId\", \"\")\ninitialState.set(\"currentArtistAlbums\", [])\n\nconst AlbumReducer = (state = initialState, action) => {\n    let newState = new Map(state)\n    let newList = []\n    let trimmedList = []\n    switch (action.type) {\n        case FETCH_ALBUM_TRACKS_LOADING:\n            newState.set(\"currentAlbumId\", action.albumId)\n            return newState\n        case FETCH_ALBUM_TRACKS_SUCCESSFUL:\n            const trackIds = action.data.map(each => each.get(\"id\"))\n            const currentAlbumId = newState.get(\"currentAlbumId\")\n            let currentAlbum = newState.get(\"albums\").find(item => item.get(\"albumId\") === currentAlbumId)\n            currentAlbum.set(\"tracks\", trackIds)\n            return newState\n        case SAVE_ALBUMS:\n            let trimmedData = removeDuplicateAlbums(action.albums)\n            newList = trimmedData.concat(state.get(\"albums\"))\n            trimmedList = removeDuplicateAlbums(newList)\n            newState.set(\"albums\", trimmedList)\n            return newState\n        case FETCH_ARTISTS_ALBUMS_LOADING:\n            newState.set(\"currentArtistAlbums\", [])\n            return newState\n        case FETCH_ARTISTS_ALBUMS_SUCCESSFUL:\n            let trimmedAlbums = removeDuplicateAlbums(action.data.albums)\n            let trimmedSingles = removeDuplicateAlbums(action.data.singles)\n            trimmedList = {\n                albums: trimmedAlbums,\n                singles: trimmedSingles\n            }\n            newState.set(\"currentArtistAlbums\", trimmedList)\n            return newState\n        default:\n            return state\n    }\n\n}\n\nexport default AlbumReducer\n","import {\n    FETCH_ALBUM_TRACKS_LOADING, FETCH_ALBUM_TRACKS_SUCCESSFUL, UPDATE_DISPLAY_TRACKS,\n    UPDATE_PLAYING_TRACKS\n} from \"./Actions\"\n\nlet initialEntity = new Map()\ninitialEntity.set(\"track\", []) //Inside the tracks are objects of {albumId:\"\", tracks:[]}\ninitialEntity.set(\"currentDisplayTracks\", [])\ninitialEntity.set(\"currentPlayingTracks\", [])\n\nconst TrackReducer = (state = initialEntity, action) => {\n    let newMap = new Map(state)\n    switch (action.type) {\n        case FETCH_ALBUM_TRACKS_LOADING:\n            newMap.set(\"currentDisplayTracks\", [])\n            return newMap\n        case FETCH_ALBUM_TRACKS_SUCCESSFUL:\n            //let the tracks be displayed\n            newMap.set(\"currentDisplayTracks\", action.data)\n            //Save the tracks into the track state\n            let newTrakcs = newMap.get(\"track\").concat(action.data)\n            newMap.set(\"track\", newTrakcs)\n            // Inside the album reducer, \n            // Append the track ids into the corresponding album object\n            return newMap\n        case UPDATE_DISPLAY_TRACKS:\n            newMap.set(\"currentDisplayTracks\", action.data)\n            return newMap\n        case UPDATE_PLAYING_TRACKS:\n            newMap.set(\"currentPlayingTracks\", newMap.get(\"currentDisplayTracks\"))\n            return newMap\n        default:\n            return state;\n    }\n\n}\n\nexport default TrackReducer;","import { SAVED_ALBUMS, SAVED_ARTISTS, SAVED_PLAYLISTS, SAVED_TRACKS, NEXT_TRACKS,\n    RECENTLY_PLAYED,USERS_TOP_TRACKS } from \"../Constants\"\nimport {\n    LOAD_LIBRARY_PAGE, SAVE_TO_SAVED_ALBUMS, SAVE_TO_SAVED_ARTISTS, SAVE_TO_SAVED_TRACKS,\n    LOAD_NEXT_TRACKS, TOGGLE_TRACK, TOGGLE_ARTIST, TOGGLE_ALBUM, TOGGLE_PLAYLIST,\n    SAVE_TO_RECENTLY_PLAYED, SAVE_TO_USERS_TOP_TRACKS\n} from \"./Actions\"\n\nlet initialState = new Map()\n//initialState.set(\"loading\", false)\ninitialState.set(\"libraryLoaded\", false)\ninitialState.set(SAVED_ALBUMS, [])\ninitialState.set(SAVED_ARTISTS, [])\ninitialState.set(SAVED_PLAYLISTS, [])\ninitialState.set(SAVED_TRACKS, [])\ninitialState.set(NEXT_TRACKS, [])\ninitialState.set(\"albumToToggle\", \"\")\ninitialState.set(\"artistToToggle\", \"\")\ninitialState.set(\"trackToToggle\", [])  //TODO set it to be a single track id so far\ninitialState.set(\"playlistToToggle\", \"\")\ninitialState.set(\"trackToChange\", \"\")\ninitialState.set(RECENTLY_PLAYED, [])\ninitialState.set(USERS_TOP_TRACKS, [])\n\n\nconst LibraryReducer = (state = initialState, action) => {\n    let newState = new Map(state)\n    switch (action.type) {\n        case LOAD_LIBRARY_PAGE:\n            newState.set(\"libraryLoaded\", true)\n            return newState\n        case SAVE_TO_SAVED_ALBUMS:\n            newState.set(SAVED_ALBUMS, action.albumIds)\n            return newState\n        case SAVE_TO_SAVED_ARTISTS:\n            newState.set(SAVED_ARTISTS, action.artistIds)\n            return newState\n        case SAVE_TO_SAVED_TRACKS:\n            newState.set(SAVED_TRACKS, action.tracks)\n            return newState\n        case SAVE_TO_RECENTLY_PLAYED:\n            newState.set(RECENTLY_PLAYED, action.albumIds)\n            return newState\n        case SAVE_TO_USERS_TOP_TRACKS:\n            newState.set(USERS_TOP_TRACKS, action.albumIds)\n            return newState\n        case LOAD_NEXT_TRACKS:\n            if (newState.get(NEXT_TRACKS).length > 0) {\n                let allTrakcs = newState.get(NEXT_TRACKS).concat(newState.get(SAVED_TRACKS))\n                newState.set(SAVED_TRACKS, allTrakcs)\n            }\n            newState.set(NEXT_TRACKS, action.tracks)\n            return newState\n        case TOGGLE_TRACK:\n            newState.set(\"trackToToggle\", action.data)\n            return newState\n        case TOGGLE_ALBUM:\n            newState.set(\"albumToToggle\", action.data)\n            return newState\n        case TOGGLE_ARTIST:\n            newState.set(\"artistToToggle\", action.data)\n            return newState\n        case TOGGLE_PLAYLIST:\n            newState.set(\"playlistToToggle\", action.data)\n            return newState\n        default:\n            return state;\n    }\n}\n\nexport default LibraryReducer;","import {\n    PLAY_SONG, PAUSE_SONG, STOP_SONG, RESUME_SONG\n} from \"./Actions\"\n\nconst { Map } = require('immutable');\n\n//TODO buggy buggy buggy!!!!!\n\nlet initialEntity = new Map()\ninitialEntity.set(\"currentTrack\", \"\")  //a track object\ninitialEntity.set(\"songPaused\", true)\ninitialEntity.set(\"songPlaying\", false)\ninitialEntity.set(\"cursor\", \"\")  //previous track, next track\n\nconst PlayerReducer = (state = initialEntity, action) => {\n\n    switch (action.type) {\n        case PLAY_SONG:\n            let newMap = new Map()\n            newMap.set(\"songPlaying\", true)\n            newMap.set(\"songPaused\", false)\n            newMap.set(\"currentTrack\", action.current)\n            const cursor = {\n                previous: action.previous,\n                next: action.next\n            }\n            newMap.set(\"cursor\", cursor)\n            console.log(\"new map\", newMap)\n            return newMap\n\n        //for next and previous song, \n        //call the saga and saga manages the cursor and put PLAY_SONG\n\n        //    case STOP_SONG:\n        // newMap.set(\"currentTrack\", \"\")\n        //   newMap.set(\"songPlaying\", false)\n        //   newMap.set(\"songPaused\", true)\n        //   return newMap\n        //    case PAUSE_SONG: //songPlaying is true\n        //      newMap.set(\"songPaused\", true)\n        //      return newMap\n        //  case RESUME_SONG:\n        //     newMap.set(\"songPaused\", false)\n        //    return newMap\n        default:\n            return state;\n    }\n}\n\nexport default PlayerReducer","import { combineReducers } from 'redux'\nimport ArtistReducer from \"./artist/ArtistReducer\"\nimport UserReducer from \"./user/UserReducer\"\nimport AlbumReducer from \"./album/AlbumReducer\"\nimport TrackReducer from \"./track/TrackReducer\"\nimport LibraryReducer from \"./library/LibraryReducer\"\nimport PlayerReducer from \"./player/PlayerReducer\"\n\nconst RootReducer = combineReducers({\n    ArtistReducer,\n    UserReducer,\n    AlbumReducer,\n    TrackReducer,\n    LibraryReducer,\n    PlayerReducer\n});\n\nexport default RootReducer;","import { call, take, all, select, takeLatest, fork, put } from 'redux-saga/effects';\nimport {\n    fetchArtistById, fetchArtistsAlbums, fetchAlbumById, fetchSavedAlbums, fetchSavedArtists, fetchSavedTracks,\n    fetchRelatedArtists, fetchRecentPlayed, fetchUsersTopTracks, fetchUsersTopTwoArtists, fetchTracksForAlbum, fetchArtistsTopTracks,\n    checkFollowAlbum, checkFollowTracks, checkFollowArtist\n} from \"./api-calls\"\n\nimport { SAVE_ACCESS_TOKEN } from \"../user/Actions\"\nimport {\n    FETCH_ALBUM_TRACKS_LOADING, fetchAlbumTracksSuccessful, updateDisplayTracks\n} from \"../track/Actions\"\nimport { saveAlbums } from \"../album/Actions\"\nimport { saveToSavedAlbums, saveToSavedArtists, saveToRecentlyPlay, saveToUserTopTracks } from \"../library/Actions\"\nimport {\n    FETCH_ARTISTS_ALBUMS_LOADING, updateCurrentArtistSaved,\n    saveArtists, fetchArtistsAlbumsSuccessful, saveRelatedArtists\n} from \"../artist/Actions\"\n\nimport {\n    getTrackIds, getToken, getCurrentArtistId, findArtistById,\n    findAlbumById, getCurrentAlbumId, getCurrentAlbumTracks\n} from \"../Selectors\"\n\nimport history from \"../history\"\nimport {\n    LOAD_LIBRARY_PAGE, toggleAlbum, toggleTrack, toggleArtist,\n} from \"../library/Actions\"\n\nimport {\n    createArtistFromList, createTracksForAlbum,\n    createAlbumFromData, createAlbumsForAnArtist, createSavedAlbums, createRecentPlayed, createTopTracksForArtist,\n    createUsersTopTracks, createTop2Artists\n} from \"../utils/Utils\"\n\n//worker\nexport function* fetchHomePage() {\n    while (select(getToken) === undefined) {\n        yield select(getToken)\n    }\n    const token = yield select(getToken)\n    //localStorage.setItem(\"token\", token)\n    // const now = addHours(new Date(), 1)\n    // localStorage.setItem(\"expires_at\", JSON.stringify(now))\n    try {\n        const [data1, data2, data3] = yield all([\n            call(fetchRecentPlayed, token),\n            call(fetchUsersTopTracks, token),\n            call(fetchUsersTopTwoArtists, token),\n        ])\n        const recentPlayed = createRecentPlayed(data1)\n        const topTracks = createUsersTopTracks(data2)\n        const topTwoArtists = createTop2Artists(data3)\n        const albumsToSave = topTracks.albums.concat(recentPlayed.albums)\n        const artistsToSave = (topTracks.artists.concat(recentPlayed.artists)).concat(topTwoArtists)\n        yield all([\n            put(saveToRecentlyPlay(recentPlayed.albumIds)),\n            put(saveToUserTopTracks(topTracks.albumIds)),\n            put(saveAlbums(albumsToSave)),\n            put(saveArtists(artistsToSave))\n        ])\n        history.push(\"/Home\")\n    }\n    catch (err) {\n        console.log(err)\n        //yield take(FETCH_FAILED)\n    }\n}\n\nexport function* checkArtistSaved(token) {\n    const currentArtistId = yield select(getCurrentArtistId)\n    const artistSaved = yield checkFollowArtist(token, currentArtistId)\n    yield put(updateCurrentArtistSaved(artistSaved))\n}\n\n\nexport function* fetchAlbumPage() {\n    const token = yield select(getToken)\n    while (select(getCurrentAlbumId) === undefined || \"\") {\n        yield select(getCurrentAlbumId)\n    }\n    const currentAlbumId = yield select(getCurrentAlbumId)\n    let albumsFromStore = yield select(findAlbumById(currentAlbumId))\n    try {\n        if (albumsFromStore === undefined) {\n            const [data1, data2] = yield all([\n                fetchAlbumById(token, currentAlbumId),\n                fetchTracksForAlbum(token, currentAlbumId)\n            ])\n            const album = createAlbumFromData(data1)\n            const tracks = createTracksForAlbum(data2)\n            yield all([\n                put(saveAlbums([album])),\n                put(fetchAlbumTracksSuccessful(tracks))\n            ])\n        }\n        else {\n            const tracks = yield select(getCurrentAlbumTracks)\n            if (tracks === undefined || tracks.length === 0) {\n                const data3 = yield fetchTracksForAlbum(token, currentAlbumId)\n                const otherTracks = createTracksForAlbum(data3)\n                yield put(fetchAlbumTracksSuccessful(otherTracks))\n            } else {\n                //Tracks are already in the store. Change the display tracks. \n                const tracks = yield select(getCurrentAlbumTracks)\n                yield put(updateDisplayTracks(tracks))\n            }\n        }\n        yield call(checkAlbumPageSaved)\n    } catch (err) {\n        console.log(err)\n    } finally {\n        // yield history.push(\"/Album\")\n    }\n}\n\nexport function* checkAlbumPageSaved() {\n    //TODO check the album and all its tracks saved or not\n    let [token, trackIds, albumId] = yield all([\n        select(getToken),\n        select(getTrackIds),\n        select(getCurrentAlbumId)\n    ])\n    while (trackIds.length === 0 || albumId === \"\") {\n        [trackIds, albumId] = yield all([\n            select(getTrackIds),\n            select(getCurrentAlbumId)\n        ])\n    }\n    const [albumSaved, tracksSaved] = yield all([\n        checkFollowAlbum(token, albumId),\n        checkFollowTracks(token, trackIds)\n    ])\n    yield all([\n        put(toggleAlbum(albumSaved)),\n        put(toggleTrack(tracksSaved))\n    ])\n}\n\nexport function* fetchArtistPage() {\n    const token = yield select(getToken)\n    while (select(getCurrentArtistId) === undefined || \"\") {\n        yield select(getCurrentArtistId)\n    }\n    const currentArtistId = yield select(getCurrentArtistId)\n    let artistsFromStore = yield select(findArtistById(currentArtistId))\n    try {\n        let artistExist = artistsFromStore === undefined ? false : true\n        let relatedArtistsExist = artistsFromStore.get(\"relatedArtists\").length > 0 ? true : false\n        let saveSatusChecked = artistsFromStore.get(\"saved\") !== \"\" || undefined\n        let albumsExist = artistsFromStore.get(\"albums\").length > 0 ? true : false\n        if (artistExist && !relatedArtistsExist && !saveSatusChecked && !albumsExist) {\n            const [albums, relatedArtists] = yield all([\n                call(fetchArtistsAlbums, token),\n                call(fetchRelatedArtists, token)\n            ])\n            const albums2 = createAlbumsForAnArtist(albums)\n            const relatedArtists2 = createArtistFromList(relatedArtists)\n            yield all([\n                put(saveAlbums(albums2.albums)),\n                put(saveAlbums(albums2.singles)),\n                put(fetchArtistsAlbumsSuccessful(albums2)),\n                put(saveRelatedArtists(relatedArtists2)),\n                call(checkArtistSaved, token)\n            ])\n        }\n        if (!artistExist && !relatedArtistsExist && !saveSatusChecked && !albumsExist) {\n            const [artist, albums, relatedArtists] = yield all([\n                call(fetchArtistById, token),\n                call(fetchArtistsAlbums, token),\n                call(fetchRelatedArtists, token)\n            ])\n            const artist1 = createArtistFromList(artist)\n            const albums1 = createAlbumsForAnArtist(albums)\n            const relatedArtists1 = createArtistFromList(relatedArtists)\n            yield all([\n                //save current artist\n                // Optional: save the related artists into the artist part as well???\n                put(saveAlbums(albums1.albums)),\n                put(saveAlbums(albums1.singles)),\n                put(saveArtists([artist1])),\n                put(fetchArtistsAlbumsSuccessful(albums1)),\n                put(saveRelatedArtists(relatedArtists1)),\n                call(checkArtistSaved, token)\n            ])\n        }\n\n    } catch (err) {\n        console.log(err)\n        //yield take(FETCH_FAILED)\n    } finally {\n        // yield history.push(\"/Artist\")\n    }\n}\n\nexport function* fetchLibraryPage() {\n    const token = yield select(getToken)\n    //load the user's library\n    try {\n        const [data1, data2] = yield all([\n            call(fetchSavedAlbums, token),\n            call(fetchSavedArtists, token),\n        ])\n        const albumsAndArtists = createSavedAlbums(data1)\n        const artists = createArtistFromList(data2)\n        const artistsToSave = albumsAndArtists.artists.concat(artists)\n        yield all([\n            put(saveArtists(artistsToSave)),\n            put(saveToSavedArtists(artists)),\n            put(saveToSavedAlbums(albumsAndArtists.albums)),\n        ])\n    } catch (err) {\n        console.log(err)\n        //yield take(FETCH_FAILED)\n    }\n}\n\nexport function* watchInitHomePage() {\n    yield take(SAVE_ACCESS_TOKEN);\n    yield call(fetchHomePage)\n}\n\nexport function* watchInitAlbumPage() {\n    yield takeLatest(FETCH_ALBUM_TRACKS_LOADING, fetchAlbumPage)\n}\n\nexport function* watchInitArtistPage() {\n    yield takeLatest(FETCH_ARTISTS_ALBUMS_LOADING, fetchArtistPage)\n}\n\nexport function* watchInitLibraryPage() {\n    yield takeLatest(LOAD_LIBRARY_PAGE, fetchLibraryPage)\n}\n\nexport const ApiSaga = [\n    fork(watchInitHomePage),\n    fork(watchInitAlbumPage),\n    fork(watchInitArtistPage),\n    fork(watchInitLibraryPage),\n]","import { fork, all, takeLatest, select, takeEvery, put } from 'redux-saga/effects';\nimport {\n    saveRemoveTrack, saveRemoveAlbum, followUnfollowArtist, checkFollowAlbum,\n    checkFollowTracks\n} from \"../api/api-calls\"\n\nimport {\n    getTrackIdAndIndex,getArtistToToggle, getAlbumToToggle, getPlaylistToToggle,\n    getCurrentAlbumId ,getToken\n} from \"../Selectors\"\nimport {\n    LOAD_LIBRARY_PAGE, FETCH_TOGGLE_ALBUM_SAVED_LOADING,\n    LOAD_NEXT_TRACKS, toggleTrack, toggleAlbum, toggleArtist, togglePlaylist\n} from \"./Actions\"\nimport { FETCH_TOGGLE_ARTIST_SAVED, FETCH_ARTISTS_ALBUMS_SUCCESSFUL } from \"../artist/Actions\"\n\nexport function* fetchNextTracks() {\n    //The library page should save the page number to the store\n\n    //get page number from the store\n    //and call fetch \n    //save the returned data to the next tracks in the library reducer\n\n}\n\n//TODO need the track index, and track id.\n// check if this index has been saved\n// and dispatch it accordingly\nexport function* fetchToggleTrack() {\n    const token = yield select(getToken)\n    while (select(getTrackIdAndIndex) === \"\") {\n        yield select(getTrackIdAndIndex)\n    }\n    //fetch add track\n    const trackInfo = yield select(getTrackIdAndIndex)  // not this selector.\n\n    let responseStatus = yield saveRemoveTrack(token, trackInfo.trackId)  // PUT or DELETE\n    if (responseStatus === 200 || \"200\") {\n        yield put(toggleTrack()) //Toggle the state\n    }\n}\n\nexport function* fetchToggleAlbum() {\n    console.log(\"called\")\n    const token = yield select(getToken)\n    while (select(getAlbumToToggle) === undefined || \"\") {\n        yield select(getAlbumToToggle)\n    }\n    let albumId = yield select(getCurrentAlbumId)\n    while (select(getCurrentAlbumId) === \"\") { albumId = yield select(getCurrentAlbumId) }\n    //select the store to see if the current album is saved or not.\n    let saved = yield select(getAlbumToToggle)\n    let responseStatus = \"\"\n    if (saved === false) {  //save the album\n        responseStatus = yield saveRemoveAlbum(token, albumId, \"PUT\")\n    } else {  //remove the album\n        responseStatus = yield saveRemoveAlbum(token, albumId, \"DELETE\")\n    }\n    if (responseStatus === 200 || \"200\") {\n        yield put(toggleAlbum(!saved)) //Toggle the state\n    }\n}\n\nexport function* fetchToggleArtist() {\n    const token = yield select(getToken)\n    while (select(getArtistToToggle) === undefined || \"\") {\n        yield select(getArtistToToggle)\n    }\n    //fetch add track\n    let artistId = yield select(getArtistToToggle)\n    const saved = yield select(getArtistToToggle)\n    while (artistId === \"\") { artistId = yield select(getArtistToToggle) }\n    let responseStatus = \"\"\n    if (saved === false) {  //save the album\n        responseStatus = yield followUnfollowArtist(token, artistId, \"PUT\")\n    } else {  //remove the album\n        responseStatus = yield followUnfollowArtist(token, artistId, \"DELETE\")\n    }\n    if (responseStatus === 200 || \"200\") {\n    }\n}\n\nexport function* fetchTogglePlaylist() { }\n\nexport function* checkArtistSaved() { }\n\nexport function* checkAlbumSaved() { }\n\nexport function* checkTracksaved() { }\n\nexport function* checkPlaylistSaved() { }\n\nexport function* checkLibrarySaved() { }\n\n\n\nexport function* watchFetchNextTracks() {\n    yield takeLatest(LOAD_NEXT_TRACKS, fetchNextTracks)\n}\n\n\n\nexport function* watchToggleAlbumSaved() {// When the user toggles to save or remove the current album\n    yield takeLatest(FETCH_TOGGLE_ALBUM_SAVED_LOADING, fetchToggleAlbum)\n}\n\nexport function* watchToggleArtistSaved() {// When the user toggles to follow or unfollow the current artist\n    yield takeLatest(FETCH_TOGGLE_ARTIST_SAVED, fetchToggleArtist)\n}\n\nexport function* watchCheckLibraryPageSaved() {\n    yield takeLatest(LOAD_LIBRARY_PAGE, checkLibrarySaved)\n}\n\nexport const LibrarySaga = [\n    fork(watchFetchNextTracks),\n    fork(watchCheckLibraryPageSaved),\n    fork(watchToggleArtistSaved),\n    fork(watchToggleAlbumSaved),\n]","import { all, select, takeLatest, fork, put } from 'redux-saga/effects';\nimport { PLAY_PREVIOUS_SONG, PLAY_NEXT_SONG, PLAY_SONG, play } from \"./Actions\"\nimport { UPDATE_PLAYING_TRACKS } from \"../track/Actions\"\nimport {getPlayingTracks, getPlayingTrack} from \"../Selectors\"\n\nexport function* updateplay() {\n    yield put(UPDATE_PLAYING_TRACKS)\n}\n\nexport function* playPreviousSong() {\n    //get the tracks from the track reducer\n    //get index of the current playing track\n    const [tracks, currentTrack] = yield all([\n        select(getPlayingTracks),\n        select(getPlayingTrack)\n    ])\n    let cursor = {\n        current: tracks[tracks.indexOf(currentTrack) - 1],\n        previous: tracks[tracks.indexOf(currentTrack) - 2],\n        next: currentTrack\n    }\n    //update the cursor object\n    put(play(cursor))\n}\n\nexport function* playNextSong() {\n    //get the tracks from the track reducer\n    //get index of the current playing track\n    const [tracks, currentTrack] = yield all([\n        select(getPlayingTracks),\n        select(getPlayingTrack)\n    ])\n    let cursor\n    if (tracks.indexOf(currentTrack) === tracks.length - 1) {\n        cursor = {\n            current: currentTrack,\n            previous: tracks[tracks.indexOf(currentTrack) - 1],\n            next: tracks[tracks.indexOf(currentTrack) + 1]\n        }\n    } else {\n        cursor = {\n            current: tracks[tracks.indexOf(currentTrack) + 1],\n            previous: currentTrack,\n            next: tracks[tracks.indexOf(currentTrack) + 2]\n        }\n    }\n    //update the cursor object\n    put(play(cursor))\n}\n\nexport function* watchPlay() {\n    yield takeLatest(PLAY_SONG, updateplay)\n}\n\nexport function* watchPlayPreviousSong() {\n    yield takeLatest(PLAY_PREVIOUS_SONG, playPreviousSong)\n}\n\nexport function* watchPlayNextSong() {\n    yield takeLatest(PLAY_NEXT_SONG, playNextSong)\n}\n\nexport const PlayerSaga = [\n    fork(watchPlay),\n    fork(watchPlayPreviousSong),\n    fork(watchPlayNextSong),\n]","import { ApiSaga } from \"./api/sagas\"\nimport { LibrarySaga } from \"./library/sagas\"\nimport { PlayerSaga } from \"./player/sagas\"\nimport { all } from 'redux-saga/effects';\n\nexport default function* RootSaga() {\n     yield all([...ApiSaga, ...LibrarySaga, ...PlayerSaga])\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nimport RootReducer from \"./core/RootReducer\"\nimport RootSaga from \"./core/RootSaga\"\nimport { Provider } from 'react-redux'\nimport { createStore, applyMiddleware } from 'redux'\nimport { logger } from 'redux-logger'\nimport createSagaMiddleware from 'redux-saga';\nimport history from './core/history';\n\nconst sagaMiddleware = createSagaMiddleware();\n\nexport const store = createStore(RootReducer, applyMiddleware(sagaMiddleware, logger))\n\nsagaMiddleware.run(RootSaga);\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router basename='/' history={history}>\n      <App history={history} />\n    </Router>\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}