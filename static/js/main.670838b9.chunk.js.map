{"version":3,"sources":["views/pages/4.jpg","core/Constants.js","core/Selectors.js","core/history.js","core/artist/Actions.js","core/track/Actions.js","views/components/track-card/AlbumCard.js","views/components/tracklist/TrackCardList.js","views/pages/HomePage.js","svgs/play.svg","views/components/tracklist/TracklistPageHeader.js","core/library/Actions.js","svgs/note.svg","core/player/Actions.js","views/components/track-card/TracklistItem.js","views/pages/AlbumPage.js","views/components/artist/ArtistPageHeader.js","views/components/track-card/ArtistTrackCard.js","core/album/Album.js","core/artist/Artist.js","core/track/Track.js","core/utils/Utils.js","views/pages/CustomHooks.js","views/pages/ArtistPage.js","views/components/side-menu/SideMenu.js","views/components/track-card/ArtistCard.js","views/pages/LibraryPage.js","core/api/api-calls.js","views/components/search-bar/SearchBar.js","views/pages/SearchPage.js","views/components/music-control/SongControls.js","views/pages/Login.js","core/user/Actions.js","App.js","core/album/Actions.js","core/artist/ArtistReducer.js","core/user/UserReducer.js","core/album/AlbumReducer.js","core/track/TrackReducer.js","core/library/LibraryReducer.js","core/player/PlayerReducer.js","core/RootReducer.js","core/api/sagas.js","core/library/sagas.js","core/RootSaga.js","index.js"],"names":["module","exports","api_base_url","scope","USERS_TOP_TRACKS","getPlayerReducer","state","PlayerReducer","getAlbumReducer","AlbumReducer","getTrackReducer","TrackReducer","getLibraryReducer","LibraryReducer","getArtistReducer","ArtistReducer","getToken","UserReducer","accessToken","createSelector","reducer","get","getCurrentTracks","getTrackIds","tracks","map","each","getTrackNameById","id","find","item","name","getSongPlaying","playerReducer","getSongPaused","getTimeElapsed","getSongs","getSongDetails","getTrackToToggle","getArtistToToggle","getAlbumToToggle","getRecentlyPlayed","getUserTopTracks","getSavedAlbums","getSavedArtists","findArtistById","artistId","getCurrentArtistId","getArtists","getCurrentArtist","artists","getRelatedArtists","getCurrentArtistSaved","artist","undefined","getAlbums","getCurrentAlbumId","getCurrentArtistsAlbums","findAlbumById","albumId","albums","getCurrentAlbumTracks","found","getAlbumsFromStore","currentAlbumId","history","saveArtists","type","fetchArtistsAlbumsLoading","fetchArtistsAlbumsSuccessful","data","saveRelatedArtists","fetchAlbumTracksLoading","fetchAlbumTracksSuccessful","AlbumCard","props","dispatch","useDispatch","fetchTracks","useCallback","push","handleArtistClick","e","index","subtitle","indexOf","target","fetchArtists","artistIds","className","key","uuidv4","src","imgSrc","alt","onClick","title","TrackCardList","albumIds","cards","useSelector","filter","includes","display","limit","length","slice","fetchList","prototype","PropTypes","array","string","Map","require","Homepage","recentlyPlayedAlbumIds","userTopAlbumIds","limits","_extends","Object","assign","i","arguments","source","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","isRequired","instanceOf","number","_ref2","createElement","points","fill","_ref","svgRef","height","role","width","viewBox","ref","ForwardRef","forwardRef","TracklistPageHeader","toggleSave","albumName","artistName","playAlbum","saved","fontSize","saveToLikes","func","imgSr","saveToSavedArtists","toggleTrack","trackId","toggleAlbum","saveToUserTopTracks","d","x","y","style","enableBackground","xmlSpace","play","current","previous","next","TracklistItem","useState","setSaved","playIcon","setPlayIcon","fetchAlbumsForArtist","handleClickArtist","dispatchPlay","dispatchPause","handleToggleTrack","AlbumPage","albumSaved","setAlbumSaved","albumsFromStore","trackSaved","toggleSaveAlbum","object","boolean","ArtistPageHeader","toggleFollow","ArtistTrackCard","round","createAlbum","albumImg","album_type","artistNames","albumType","createArtist","img","createTrack","duration_ms","preview_url","duration","url","createRequest","token","method","myHeaders","Headers","Request","headers","mode","cache","convertToMin","parseInt","seconds","Math","floor","minutes","toString","removeDuplicates","list","Array","from","Set","findItemFromAList","removeDuplicateAlbums","midResult","query","result","createArtistFromList","console","log","images","createTracksForAlbum","eachArtist","createAlbumFromData","createAlbumsForAnArtist","singles","anAlbum","album_group","createSavedAlbums","album","createUsersTopTracks","thisArtists","concat","createTop2Artists","firstArtist","secondArtist","createRecentPlayed","track","createPlaylist","owner","display_name","useSavedTracks","pageNumber","setPageNumber","loading","setLoading","error","setError","setTracks","hasMore","setHasMore","useEffect","offset","myRequest","store","getState","fetch","then","response","json","items","total","catch","useLoadTracks","observer","useRef","lastTrackElementRef","node","disconnect","IntersectionObserver","entries","isIntersecting","prevPageNumber","observe","ArtistPage","currentArtist","relatedArtists","fetchArtistPage","useDispatchArtistPage","SideMenu","ListItem","button","ListItemIcon","ListItemText","primary","color","ArtistCard","SavedTracks","LibraryPage","view","setView","savedArtists","savedAlbums","fetchLibrary","useDispatchLibraryPage","fetchRecentPlayed","a","fetchUsersTopTracks","fetchUsersTopTwoArtists","fetchTracksForAlbum","fetchArtistsAlbums","fetchAlbumById","fetchArtistById","fetchSearchResults","callback","fetchSavedAlbums","fetchRelatedArtists","fetchSavedArtists","saveRemoveAlbum","status","followUnfollowArtist","checkFollowArtist","checkFollowAlbum","checkFollowTracks","trackIds","formattedIds","join","SearchBar","setQuery","handleInputDebounce","throttle","newQuery","encodeURI","value","playlists","onChange","placeholder","Searchpage","showResults","setShowResults","setArtists","setAlbums","setPlaylists","setTrackSaved","notFound","storeState","onErr","err","SongControls","hide","audio","setAudio","songPlaying","songPaused","timeElapsed","songs","songName","songDetails","setState","clearInterval","intervalId","setInterval","calculateTime","audioControl","song","Audio","pause","getSongIndex","showPlay","currentIndex","aria-hidden","Login","setShow","dispatchStore","dispatchSaveToken","hashParams","r","q","window","location","hash","substring","exec","decodeURIComponent","access_token","href","Button","backgroundColor","process","show","exact","path","component","SearchPage","saveAlbums","initialState","set","action","newState","newArtists","trimmedNewArtists","singleIds","relatedArtistIds","trimmedList","currentAlbum","trimmedData","trimmedAlbums","trimmedSingles","initialEntity","newMap","newTrakcs","allTrakcs","time","RootReducer","combineReducers","fetchHomePage","checkArtistSaved","fetchAlbumPage","checkAlbumPageSaved","fetchLibraryPage","watchInitHomePage","watchInitAlbumPage","watchInitArtistPage","watchInitLibraryPage","select","all","data1","data2","data3","recentPlayed","topTracks","topTwoArtists","albumsToSave","artistsToSave","put","currentArtistId","artistSaved","otherTracks","tracksSaved","artistsFromStore","artistExist","relatedArtistsExist","saveSatusChecked","albumsExist","albums2","relatedArtists2","artist1","albums1","relatedArtists1","albumsAndArtists","take","takeLatest","ApiSaga","fork","fetchNextTracks","fetchToggleAlbum","fetchToggleArtist","checkLibrarySaved","watchFetchNextTracks","watchToggleAlbumSaved","watchToggleArtistSaved","watchCheckLibraryPageSaved","responseStatus","LibrarySaga","RootSaga","sagaMiddleware","createSagaMiddleware","createStore","applyMiddleware","logger","run","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.670838b9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/4.38936203.jpg\";","export const api_base_url = \"https://api.spotify.com/v1/\"\n\nexport const client_id = \"0c0eb8c9fa814086a12af77d398f0fcf\"\n\nexport const client_secret = \"80852af252fe42fd9089bbbea4b13c2c\"\n\nexport const response_type = \"token\"\n\nexport const redirect_url = \"http://localhost:3000\"\n\nexport const scope = [\"playlist-read-private\", \"user-top-read\", \"user-follow-read\", \"playlist-read-collaborative\",\n    \"playlist-read-private\", \"playlist-modify-public\", \"playlist-modify-private\",\n    \"user-follow-modify\", \"user-library-modify\", \"user-read-recently-played\", \"user-library-read\"]\n\nexport const authorization_base_url = \"https://accounts.spotify.com/authorize?\"\n\nexport const RECENTLY_PLAYED = \"Recently Played\"\nexport const USERS_TOP_TRACKS = \"Your Favorite Albums And Songs\"\nexport const BROWSE_ALL = \"Browse All\"\nexport const ARTISTS_TOP_TRACKS = \"Top Tracks\"\nexport const FOR_FANS_OF_FIRST = \"For Fans Of first\"\nexport const FOR_FANS_OF_SECOND = \"For Fans Of second\"\nexport const FOR_FANS_OF = \"For Fans Of \"\nexport const FANS_ALSO_LIKE = \"Fans also like\"\n\nexport const SAVED_ALBUMS = \"Albums\"\nexport const SAVED_ARTISTS = \"Artists\"\nexport const SAVED_PLAYLISTS = \"Playlists\"\nexport const SAVED_TRACKS = \"Tracks\"\nexport const NEXT_TRACKS = \"Next Tracks\"","import { createSelector } from 'reselect'\nimport { RECENTLY_PLAYED, USERS_TOP_TRACKS, SAVED_ALBUMS, SAVED_ARTISTS } from \"./Constants\"\n\nexport const getPlayerReducer = (state) => {\n    return state.PlayerReducer\n}\n\nexport const getAlbumReducer = (state) => {\n    return state.AlbumReducer\n}\n\nexport const getTrackReducer = (state) => {\n    return state.TrackReducer\n}\n\nexport const getLibraryReducer = (state) => {\n    return state.LibraryReducer\n}\n\nexport const getArtistReducer = (state) => {\n    return state.ArtistReducer\n}\n\nexport function getToken(state) {\n    return state.UserReducer.accessToken;\n}\n\n/****************** Reselectors *********************/\n\n//------------- Track Reducer ------------//\n\nexport const getTracks = createSelector(\n    getTrackReducer,\n    reducer => reducer.get(\"track\")\n)\n\nexport const getCurrentTracks = createSelector(\n    getTrackReducer,\n    reducer => reducer.get(\"currentDisplayTracks\")\n)\n\nexport const getTrackIds = createSelector(\n    getCurrentTracks,\n    tracks => tracks.map(each => each.get(\"id\"))\n)\n\nexport const getTrackNameById = id => createSelector(\n    getCurrentTracks,\n    tracks => tracks.find(item => item.id === id).name\n)\n\n\n\n//------------- Player Reducer ------------//\n\n\nexport const getPlayingTrack = createSelector(\n    getPlayerReducer,\n    playerReducer => playerReducer.get(\"currentTrack\")\n)\n\n\nexport const getSongPlaying = createSelector(\n    getPlayerReducer,\n    playerReducer => playerReducer.get(\"songPlaying\")\n)\n\nexport const getSongPaused = createSelector(\n    getPlayerReducer,\n    playerReducer => playerReducer.get(\"songPaused\")\n)\n\nexport const getTimeElapsed = createSelector(\n    getPlayerReducer,\n    playerReducer => playerReducer.get(\"timeElapsed\")\n)\n\nexport const getSongs = createSelector(\n    getPlayerReducer,\n    playerReducer => playerReducer.get(\"songs\")\n)\n\nexport const getSongDetails = createSelector(\n    getPlayerReducer,\n    playerReducer => playerReducer.get(\"songDetails\")\n)\n\n//------------- Library Reducer ------------//\n\nexport const getTrackIdAndIndex = createSelector(\n    getLibraryReducer,\n    reducer => reducer.get(\"trackToToggle\") //return id\n)\n\nexport const getTrackToToggle = createSelector(\n    getLibraryReducer,\n    reducer => reducer.get(\"trackToToggle\") //return id\n)\n\nexport const getArtistToToggle = createSelector(\n    getLibraryReducer,\n    reducer => reducer.get(\"artistoToggle\") //return id\n)\n\nexport const getAlbumToToggle = createSelector(\n    getLibraryReducer,\n    reducer => reducer.get(\"albumToToggle\") //return id\n)\n\nexport const getPlaylistToToggle = createSelector(\n    getLibraryReducer,\n    reducer => reducer.get(\"playlistToToggle\") //return id\n)\n\nexport const getRecentlyPlayed = createSelector(\n    getLibraryReducer,\n    reducer => reducer.get(RECENTLY_PLAYED) //return id\n)\n\nexport const getUserTopTracks = createSelector(\n    getLibraryReducer,\n    reducer => reducer.get(USERS_TOP_TRACKS) //return id\n)\n\nexport const getSavedAlbums = createSelector(\n    getLibraryReducer,\n    reducer => reducer.get(\"Albums\") //return id\n)\n\nexport const getSavedArtists = createSelector(\n    getLibraryReducer,\n    reducer => reducer.get(SAVED_ARTISTS) //return id\n)\n\n//------------- Artist Reducer ------------//\n\nexport const findArtistById = (artistId) => createSelector(\n    getArtistReducer,\n    reducer => reducer.get(\"artists\").find(item => artistId === item.get(\"artistId\"))\n)\n\nexport const getCurrentArtistId = createSelector(\n    getArtistReducer,\n    reducer => reducer.get(\"currentArtistId\")\n)\n\nexport const getArtists = createSelector(\n    getArtistReducer,\n    reducer => reducer.get(\"artists\")\n)\n\nexport const getCurrentArtist = createSelector(\n    getArtists,\n    getCurrentArtistId,\n    (artists, id) => artists.find(item => item.get(\"artistId\") === id)\n)\n\nexport const getArtistSaved = createSelector(\n    getCurrentArtistId,\n    id => findArtistById(id).get(\"saved\")\n)\n\nexport const getRelatedArtists = createSelector(\n    getArtistReducer,\n    reducer => reducer.get(\"relatedArtists\")\n)\n\nexport const getCurrentArtistSaved = createSelector(\n    getCurrentArtist,\n    artist => artist !== undefined && artist.get(\"saved\") !== undefined ? artist.get(\"saved\") : false\n)\n\n\n//------------- Album Reducer ------------//\n\nexport const getAlbums = createSelector(\n    getAlbumReducer,\n    reducer => reducer.get(\"albums\")\n)\n\nexport const getCurrentAlbumId = createSelector(\n    getAlbumReducer,\n    reducer => reducer.get(\"currentAlbumId\")\n)\n\nexport const getCurrentArtistsAlbums = createSelector(\n    getAlbumReducer,\n    reducer => reducer.get(\"currentArtistAlbums\")\n)\n\nexport const findAlbumById = albumId => createSelector(\n    getAlbums,\n    albums => albums.find(item => item.get(\"albumId\") === albumId)\n)\n\nexport const findAlbumList = albumIds => createSelector(\n    getAlbums,\n    albums => albums.filter(item => albumIds.includes(item.get(\"albumId\")))\n)\n\nexport const getCurrentAlbumTracks = createSelector(\n    getCurrentAlbumId,\n    getAlbums,\n    (id, albums) => {\n        const found = albums.find(item => item.get(\"albumId\") === id)\n        if (found) { return found.get(\"tracks\") }\n    }\n)\n\nexport const getTracksInAlbum = (id) => createSelector(\n    getAlbums,\n    albums => {\n        const album = albums.find(item => item.get(\"albumId\") === id)\n        if (album) { return album.get(\"trackIds\") }\n    }\n)\n\nexport const getAlbumsFromStore = createSelector(\n    getAlbums,\n    getCurrentAlbumId,\n    (albums, currentAlbumId) => {\n        return albums.find(item => item.get(\"albumId\") === currentAlbumId)\n    }\n)\n\n","import { createBrowserHistory as history} from 'history';\n\nexport default history();","export const SAVE_ARTISTS = \"SAVE_ARTISTS\"\nexport const FETCH_ARTISTS_ALBUMS_LOADING = \"FETCH_ARTISTS_ALBUMS_LOADING\"\nexport const FETCH_ARTISTS_ALBUMS_SUCCESSFUL = \"FETCH_ARTISTS_ALBUMS_SUCCESSFUL\"\nexport const SAVE_ARTIST_IMG = \"SAVE_ARTIST_IMG\"\nexport const SAVE_RELATED_ARTISTS = \"SAVE_RELATED_ARTISTS\"\nexport const UPDATE_CURRENT_ARTIST_SAVED = \"UPDATE_CURRENT_ARTIST_SAVED\"\nexport const FETCH_TOGGLE_ARTIST_SAVED = \"FETCH_TOGGLE_ARTIST_SAVED\"\n\nexport const saveArtists = artists => ({\n    type: SAVE_ARTISTS,\n    artists: artists\n})\n\n\nexport const fetchArtistsAlbumsLoading = artistId => ({\n    type: FETCH_ARTISTS_ALBUMS_LOADING,\n    artistId: artistId\n})\n\nexport const fetchArtistsAlbumsSuccessful = data => ({\n    type: FETCH_ARTISTS_ALBUMS_SUCCESSFUL,\n    data: data\n})\n\n\nexport const saveRelatedArtists = artists => ({\n    type: SAVE_RELATED_ARTISTS,\n    artists: artists\n})\n\nexport const updateCurrentArtistSaved = artists => ({\n    type: UPDATE_CURRENT_ARTIST_SAVED,\n    data: artists\n})\n\nexport const fetchToggleArtistSaved = () => ({\n    type: FETCH_TOGGLE_ARTIST_SAVED\n})","export const FETCH_ALBUM_TRACKS_LOADING = \"FETCH_ALBUM_TRACKS_LOADING\"\nexport const FETCH_ALBUM_TRACKS_SUCCESSFUL = \"FETCH_ALBUM_TRACKS_SUCCESSFUL\"\nexport const FETCH_ALBUM_TRACKS_FAILED = \"FETCH_ALBUM_TRACKS_FAILED\"\nexport const UPDATE_CURRENT_ALBUM_SAVED = \"UPDATE_ALBUM_SAVED\"\nexport const UPDATE_CURRENT_TRACKS_SAVED = \"UPDATE_TRACKS_SAVED\"\nexport const UPDATE_DISPLAY_TRACKS = \"UPDATE_DISPLAY_TRACKS\"\nexport const UPDATE_PLAYING_TRACKS = \"UPDATE_PLAYING_TRACKS\"\n\nexport const fetchAlbumTracksLoading = (albumId) => ({\n    type: FETCH_ALBUM_TRACKS_LOADING,\n    albumId: albumId,\n})\n\nexport const fetchAlbumTracksSuccessful = (data) => ({\n    type: FETCH_ALBUM_TRACKS_SUCCESSFUL,\n    data: data,\n    //albumId:albumId\n})\n\nexport const fetchAlbumTracksFailed = (albumId, err) => ({\n    type: FETCH_ALBUM_TRACKS_FAILED,\n    error: err\n})\n\nexport const updateDisplayTracks = (data)=> ({\n    type: UPDATE_DISPLAY_TRACKS,\n    data: data,\n})","import React, { useCallback } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { useDispatch } from \"react-redux\"\nimport history from \"../../../core/history\"\nimport { fetchArtistsAlbumsLoading } from \"../../../core/artist/Actions\"\nimport { fetchAlbumTracksLoading } from \"../../../core/track/Actions\"\nimport PropTypes from 'prop-types';\n\nexport default function AlbumCard(props) {\n    const dispatch = useDispatch()\n\n    const fetchTracks = useCallback(() => {\n        dispatch(fetchAlbumTracksLoading(props.albumId))\n        history.push(\"/albums\")\n    }, [dispatch])\n\n    const handleArtistClick = (e) => {\n        const index = props.subtitle.indexOf(e.target.id)\n        fetchArtists(props.artistIds[index])\n        history.push(\"/artists/\")\n    }\n\n    const fetchArtists = useCallback(\n        (id) =>\n            dispatch(fetchArtistsAlbumsLoading(id)\n            ), [dispatch]\n    )\n\n    return (\n        <div className=\"card\" key={uuidv4()}>\n            <img src={props.imgSrc} alt=\"track-card\" key={uuidv4()} onClick={fetchTracks} />\n            <div className=\"cardContent\">\n                <p className=\"card-title\" onClick={fetchTracks}>{props.title}</p>\n                {props.subtitle.map(each => {\n                    return (\n                        <span className=\"card-subtitle\" onClick={handleArtistClick} key={uuidv4()} id={each}>{each}</span>)\n                })}\n            </div>\n\n        </div>\n    )\n}\n\nAlbumCard.prototype = {\n    subtitle: PropTypes.array,\n    albumId: PropTypes.string,\n    subtitle: PropTypes.array,\n    title: PropTypes.string,\n    imgSrc: PropTypes.string,\n    artistIds: PropTypes.array,\n}","import React from 'react';\nimport { useSelector } from \"react-redux\"\nimport { findAlbumList } from \"../../../core/Selectors\"\nimport AlbumCard from \"../track-card/AlbumCard\"\nimport { v4 as uuidv4 } from 'uuid';\nimport PropTypes from 'prop-types';\n\nexport default function TrackCardList(props) {\n    const cards = useSelector(findAlbumList(props.albumIds))\n\n    let display = []\n    display = cards === undefined ? [] : (props.limit > 0 && cards.length > props.limit) ? cards.slice(0, props.limit) : cards\n\n    return (\n        <div className=\"TrackCardList\">\n            <div className=\"title\"><b>{props.fetchList}</b></div>\n            <div className=\"list\">\n                {display.map(each =>\n                    <AlbumCard title={each.get(\"albumName\")} key={uuidv4()}\n                        albumId={each.get(\"albumId\")} artistIds={each.get(\"artistIds\")}\n                        subtitle={each.get(\"artistNames\")}\n                        imgSrc={each.get(\"albumImg\")} id={uuidv4()} />)}\n\n            </div>\n        </div>\n    )\n}\n\nconst { Map } = require('immutable');\n\nTrackCardList.prototype = {\n    fetchList: PropTypes.string.isRequired,\n    albums: PropTypes.instanceOf(Map).isRequired,\n    limit: PropTypes.number.isRequired,\n    albumIds: PropTypes.array.isRequired,\n}","import React from \"react\";\nimport TrackCardList from \"../components/tracklist/TrackCardList\"\nimport { RECENTLY_PLAYED, USERS_TOP_TRACKS, } from \"../../core/Constants\"\nimport { getRecentlyPlayed, getUserTopTracks } from \"../../core/Selectors\"\nimport { useSelector } from \"react-redux\"\n\nexport default function Homepage() {\n        const recentlyPlayedAlbumIds = useSelector(getRecentlyPlayed)\n        const userTopAlbumIds = useSelector(getUserTopTracks)\n\n        /**\n         *   if (albums.length === 0 && libraryReducer.get(USERS_TOP_TRACKS).length === 0) {\n                        //get the token from the local storage, and save the token, and init home page\n                }\n         */\n\n        return (\n                <div className=\"Homepage\">\n                        <TrackCardList fetchList={RECENTLY_PLAYED} albumIds={recentlyPlayedAlbumIds}\n                                limits={6}\n                        />\n                        <TrackCardList\n                                fetchList={USERS_TOP_TRACKS} albumIds={userTopAlbumIds} limits={6} />\n                </div>)\n}","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"polygon\", {\n  points: \"21.57 12 5.98 3 5.98 21 21.57 12\",\n  fill: \"currentColor\"\n});\n\nvar SvgPlay = function SvgPlay(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    height: 16,\n    role: \"img\",\n    width: 16,\n    viewBox: \"0 0 24 24\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2);\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgPlay, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/play.78b8b985.svg\";\nexport { ForwardRef as ReactComponent };","import React, { Fragment } from 'react';\nimport { ReactComponent as PlayIcon } from \"../../../svgs/play.svg\"\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\nimport PropTypes from 'prop-types';\n\nexport default function TracklistPageHeader(props) {\n\n    const toggleSave = () => { }//TODO should be the from the props\n\n    return (\n        <Fragment>\n            <div className=\"playlistPageInfo\">\n                <div className=\"playlistPageImage\">\n                    {props.imgSrc && <img src={props.imgSrc} alt=\"track-card\" key=\"card-img\" />}\n                </div>\n\n                <div className=\"playlistPageContent\">\n                    <p className=\"smallText uppercase bold\">{props.title}</p>\n                    <h1>{props.albumName}</h1>\n\n                    <div className=\"playlistPageDesc\">\n                        <p className=\"spotify\">{props.artistName}</p>\n                    </div>\n                </div>\n            </div>\n            <div className=\"playlistPageSongs\">\n                <div className=\"playlistButtons\">\n                    <span className=\"playIcon\" onClick={props.playAlbum}>\n                        <PlayIcon />\n                    </span>\n                    <div className=\"icons\">\n                        {props.saved &&\n                            <FavoriteIcon className=\"icon iconsHeart coloredIcon\" fontSize=\"inherit\" onClick={toggleSave} />}\n                        {!props.saved &&\n                            <FavoriteBorderIcon className=\"icon iconsHeart  coloredIcon\" fontSize=\"inherit\" onClick={toggleSave} />}\n                        \n                        <div className=\"icon iconsDots\"></div>\n                    </div>\n                </div>\n            </div>\n        </Fragment>\n    )\n}\n\nTracklistPageHeader.prototype = {\n    saveToLikes: PropTypes.func,\n    playAlbum: PropTypes.func,\n    artistName: PropTypes.string,\n    albumName: PropTypes.string,\n    imgSr: PropTypes.string,\n    title: PropTypes.string,\n}","export const SAVE_TO_SAVED_ALBUMS = \"SAVE_TO_SAVED_ALBUMS\"\nexport const SAVE_TO_SAVED_ARTISTS = \"SAVE_TO_SAVED_ARTISTS\"\nexport const SAVE_TO_SAVED_PLAYLISTS = \"SAVE_TO_SAVED_PLAYLISTS\"\nexport const SAVE_TO_SAVED_TRACKS = \"SAVE_TO_SAVED_TRACKS\"\nexport const LOAD_LIBRARY_PAGE = \"LOAD_LIBRARY_PAGE\"\nexport const LOAD_NEXT_TRACKS = \"LOAD_NEXT_TRACKS\"\nexport const TOGGLE_TRACK = \"TOGGLE_TRACK\"\nexport const TOGGLE_ALBUM = \"TOGGLE_ALBUM\"\nexport const TOGGLE_ARTIST = \"TOGGLE_ARTIST\"\nexport const TOGGLE_PLAYLIST = \"TOGGLE_LAYLIST\"\nexport const FETCH_TOGGLE_ALBUM_SAVED_LOADING = \"FETCH_TOGGLE_ALBUM_SAVED_LOADING\"\nexport const FETCH_TOGGLE_TRACKS_SAVED_LOADING = \"FETCH_TOGGLE_TRACKS_SAVED_LOADING\"\nexport const FETCH_TOGGLE_ALBUM_SAVED_SUCCESSFUL = \"FETCH_TOGGLE_ALBUM_SAVED_SUCCESSFUL\"\nexport const FETCH_TOGGLE_TRACKS_SAVED_SUCCESSFUL = \"FETCH_TOGGLE_TRACKS_SAVED_SUCCESSFUL\"\nexport const SAVE_TO_RECENTLY_PLAYED = \"SAVE_TO_RECENTLY_PLAYED\"\nexport const SAVE_TO_USERS_TOP_TRACKS = \"SAVE_TO_USERS_TOP_TRACKS\"\nexport const FETCH_HOME_PAGE_PLAYLISTS = \"FETCH_HOME_PAGE_PLAYLISTS\"\nexport const SAVE_TO_FIRST_ARTISTS_TRACKS = \"SAVE_TO_FIRST_ARTISTS_TRACKS\"\nexport const SAVE_TO_SECOND_ARTISTS_TRACKS = \"SAVE_TO_SECOND_ARTISTS_TRACKS\"\n\n\nexport const loadLibraryPage = () => ({\n    type: LOAD_LIBRARY_PAGE,\n})\n\nexport const saveToSavedAlbums = (albums) => ({\n    type: SAVE_TO_SAVED_ALBUMS,\n    albumIds: albums,  //Note: changed from ids to albums atm\n})\n\nexport const saveToSavedArtists = (artists) => ({\n    type: SAVE_TO_SAVED_ARTISTS,\n    artistIds: artists, //Note: changed from ids to artists atm\n})\n\nexport const saveToSavedPlaylists = (albumIds) => ({\n    type: SAVE_TO_SAVED_PLAYLISTS,\n    albumIds: albumIds,\n})\n\nexport const saveToSavedTracks = (tracks) => ({\n    type: SAVE_TO_SAVED_TRACKS,\n    tracks: tracks,\n})\n\nexport const loadNextTracks = tracks => ({\n    type: LOAD_NEXT_TRACKS,\n    tracks: tracks,\n})\n\nexport const toggleTrack = (trackId, index) => ({\n    type: TOGGLE_TRACK,\n    data: {\n        trackId: trackId,\n        index: index\n    }\n})\n\nexport const toggleArtist = data => ({\n    type: TOGGLE_ARTIST,\n    data: data,\n})\n\nexport const toggleAlbum = data => ({\n    type: TOGGLE_ALBUM,\n    data: data,\n})\n\nexport const togglePlaylist = data => ({\n    type: TOGGLE_PLAYLIST,\n    data: data,\n})\n\nexport const fetchToggleAlbumSavedLoading = () => ({\n    type: FETCH_TOGGLE_ALBUM_SAVED_LOADING\n})\n\nexport const fetchToggleAlbumSavedSuccessful = (data) => ({\n    type: FETCH_TOGGLE_ALBUM_SAVED_SUCCESSFUL,\n    data: data\n})\n\nexport const saveToRecentlyPlay = (albumIds) => {\n    return ({\n        type: SAVE_TO_RECENTLY_PLAYED,\n        albumIds: albumIds,\n    })\n}\n\nexport const saveToUserTopTracks = (albumIds) => {\n    return ({\n        type: SAVE_TO_USERS_TOP_TRACKS,\n        albumIds: albumIds,\n    })\n}\n\nexport const saveToFirstArtistsTracks = (albumIds) => {\n    return ({\n        type: SAVE_TO_FIRST_ARTISTS_TRACKS,\n        albumIds: albumIds,\n    })\n}\n\nexport const saveToSecondArtistsTracks = (albumIds) => {\n    return ({\n        type: SAVE_TO_SECOND_ARTISTS_TRACKS,\n        albumIds: albumIds,\n    })\n}\n\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M334.938,102.697c-30.917-24.154-57.604-45.007-57.604-91.999C277.333,4.785,272.563,0,266.667,0 C260.771,0,256,4.785,256,10.698v351.53c0,11.805-9.563,21.396-21.333,21.396H192c-47.063,0-85.333,28.793-85.333,64.188 C106.667,483.207,144.937,512,192,512s85.333-28.793,85.333-64.188V77.853c12.349,16.53,28.538,29.241,44.5,41.706 C353.792,144.548,384,168.138,384,223.154c0,5.913,4.771,10.698,10.667,10.698s10.667-4.785,10.667-10.698 C405.333,157.691,367.938,128.46,334.938,102.697z M256,447.812c0,23.193-29.313,42.792-64,42.792s-64-19.599-64-42.792 s29.313-42.792,64-42.792h42.667c7.771,0,15.063-2.089,21.333-5.746V447.812z\"\n})));\n\nvar SvgNote = function SvgNote(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"Layer_1\",\n    x: \"0px\",\n    y: \"0px\",\n    viewBox: \"0 0 512 512\",\n    style: {\n      enableBackground: \"new 0 0 512 512\"\n    },\n    xmlSpace: \"preserve\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2);\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgNote, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/note.ceeb8cd1.svg\";\nexport { ForwardRef as ReactComponent };","export const PAUSE_SONG = \"PAUSE_SONG\"\nexport const STOP_SONG = \"STOP_SONG\"\nexport const PLAY_SONG = \"PLAY_SONG\"\nexport const RESUME_SONG = \"RESUME_SONG\"\nexport const PLAY_PREVIOUS_SONG = \"PLAY_PREVIOUS_SONG\"\nexport const PLAY_NEXT_SONG = \"PLAY_NEXT_SONG\"\n\nexport const play = (current, previous, next) => ({\n    type: PLAY_SONG,\n    current: current,\n    previous: previous,\n    next: next\n})\n\nexport const pause = () => ({\n    type: PAUSE_SONG,\n})\n\nexport const stop = () => ({\n    type: STOP_SONG,\n})\n\nexport const previous = () => ({\n    type: PLAY_PREVIOUS_SONG\n})\n\nexport const next = () => ({\n    type: PLAY_NEXT_SONG\n})\n\nexport const resume = () => ({\n    type: RESUME_SONG\n})\n\nexport const increaseSongTime = (time) => {\n    return {\n      type: 'INCREASE_SONG_TIME',\n      time\n    };\n  };","import React, { useState, useCallback } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { useDispatch } from \"react-redux\"\nimport { fetchArtistsAlbumsLoading } from \"../../../core/artist/Actions\"\nimport { ReactComponent as PlayIcon } from '../../../svgs/play.svg'\nimport { ReactComponent as NoteIcon } from '../../../svgs/note.svg'\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\nimport { play, pause } from '../../../core/player/Actions';\nimport PropTypes from 'prop-types';\nimport { toggleTrack } from \"../../../core/library/Actions\"\nimport history from \"../../../core/history\"\n\nexport default function TracklistItem(props) {\n    const [saved, setSaved] = useState(props.saved)\n\n    //TODO \n    //double click the container => play song\n    //https://medium.com/@anilchaudhary453/double-click-using-react-hooks-4fea2292d3a4\n\n    const [playIcon, setPlayIcon] = useState(true)\n\n    const dispatch = useDispatch()\n\n    const fetchAlbumsForArtist = useCallback(\n        (id) => {\n            dispatch(fetchArtistsAlbumsLoading(id))\n        }, [dispatch]\n    )\n\n    //TODO debug\n    function handleClickArtist(e) {\n        const artistId = e.target.id\n        if (artistId !== undefined || \"\") {\n            fetchAlbumsForArtist(e.target.id)\n            history.push(\"/artists\")\n        }\n    }\n\n    function playTrack() {\n        setPlayIcon(false)\n        //TODO update\n        //to give a list and the current song id\n        dispatchPlay(props.current, props.previous, props.next)\n    }\n\n    function pauseTrack() {\n        setPlayIcon(true)\n        dispatchPause()\n    }\n\n\n    const dispatchPlay = useCallback(\n        (current, previous, next) => dispatch(play(current, previous, next),\n            [dispatch]\n        ))\n\n    const dispatchPause = useCallback(\n        () => dispatch(pause()), [dispatch]\n    )\n\n    const handleToggleTrack = useCallback(\n        () => dispatch(toggleTrack(props.current.get(\"id\"), props.index)), [dispatch]\n    )\n\n    const toggleSave = () => {\n        setSaved(saved => !saved)\n        handleToggleTrack()\n    }\n\n    return (\n        <li>\n            <div className=\"songIcon\">\n                {!playIcon && <NoteIcon className=\"noteI\" onClick={pauseTrack} />}\n                {playIcon && <PlayIcon className=\"playI\" onClick={playTrack} />}\n\n            </div>\n            <div className=\"songDetails\">\n                <h3 >{props.current.get(\"name\")}</h3>\n                {props.current.get(\"artists\") !== undefined && props.current.get(\"artists\").map(each => <span className=\"artist-name\" id={each.get(\"artistId\")}\n                    key={uuidv4()} onClick={handleClickArtist}>{each.get(\"artistName\") + \", \"} </span>)}\n            </div>\n            <div className=\"songTime\">\n                <span>\n                    {!saved && <FavoriteBorderIcon className=\"icon iconsHeart\" fontSize=\"inherit\" onClick={toggleSave} />}\n                    {saved && <FavoriteIcon className=\"icon iconsHeart\" fontSize=\"inherit\" onClick={toggleSave} />}</span>\n                <span>{props.current.get(\"duration\")}</span>\n            </div>\n        </li>\n\n    )\n}\n\nTracklistItem.prototype = {\n    current: PropTypes.object,\n    previous: PropTypes.object,\n    next: PropTypes.object,\n    saved: PropTypes.boolean,\n    index: PropTypes.string,\n}","import React, { useState, useCallback } from 'react';\nimport TracklistPageHeader from '../components/tracklist/TracklistPageHeader'\nimport { v4 as uuidv4 } from 'uuid';\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { fetchToggleAlbumSavedLoading } from \"../../core/library/Actions\"\nimport {\n    getCurrentTracks, getTrackToToggle, getAlbumsFromStore\n} from \"../../core/Selectors\"\n\nimport TracklistItem from \"../components/track-card/TracklistItem\"\n\nexport default function AlbumPage() {\n    const [albumSaved, setAlbumSaved] = useState(false)\n    const dispatch = useDispatch()\n    const albumsFromStore = useSelector(getAlbumsFromStore)\n    const tracks = useSelector(getCurrentTracks)\n    const trackSaved = useSelector(getTrackToToggle) \n\n    const toggleSaveAlbum = useCallback(() => {\n        setAlbumSaved(albumSaved => !albumSaved)\n        dispatch(fetchToggleAlbumSavedLoading())\n    }, [dispatch])\n\n    function playTrack(trackId) {\n        //play the whole album\n    }\n\n    function pauseTrack(trackId) {\n        //Pause the play of the album\n    }\n\n    function playAlbum() {\n        //update the currentPlayingTracks and also set the current track index to 0\n\n    }\n\n    return (\n        <div className=\"mainInner\">\n            {albumsFromStore && <TracklistPageHeader title={albumsFromStore.get(\"albumType\") ? albumsFromStore.get(\"albumType\") : \"ALBUM\"} imgSrc={albumsFromStore.get(\"albumImg\")}\n                artistName={albumsFromStore.get(\"artistName\")} playAlbum={playAlbum} toggleSave={toggleSaveAlbum}\n                albumName={albumsFromStore.get(\"albumName\")} key={uuidv4()} saved={albumSaved}\n            />}\n            {albumsFromStore && <ul className=\"songList\">\n                {tracks.map(each => <TracklistItem saved={trackSaved[tracks.indexOf(each)]}\n                    index={tracks.indexOf(each)} key={uuidv4()}\n                    previous={tracks[tracks.indexOf(each) > 0 ? tracks.indexOf(each) - 1 : 0]}\n                    next={tracks[tracks.indexOf(each) + 1 <= tracks.length ? tracks.indexOf(each) + 1 : -1]} current={each}\n                />)}\n\n            </ul>}\n        </div>)\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport AccountBoxIcon from '@material-ui/icons/AccountBox';\n\n\n\nexport default function ArtistPageHeader(props) {\n    return (\n        <div className=\"ArtistPageHeader\">\n            {props.imgSrc !== \"\" ?\n                <img\n                    className=\"playlistPageImage\"\n                    src={props.imgSrc}\n                    alt=\"artist\"\n                /> : <AccountBoxIcon className=\"playlistPageImage\" fontSize=\"inherit\"/>}\n            <div className=\"playlistPageContent\">\n                <p className=\"smallText uppercase bold\">VERIFIED ARTIST</p>\n                <h1>{props.artistName}</h1>\n                {props.saved &&\n                    <div className=\"follow-button unfilledIcon\" onClick={props.toggleFollow}>Follow</div>}\n                {!props.saved &&\n                    <div className=\"follow-button coloredIcon\" onClick={props.toggleFollow}>UnFollow</div>}\n            </div>\n        </div>\n    )\n}\n\nArtistPageHeader.prototype = {\n    imgSrc: PropTypes.string,\n    artistName: PropTypes.string,\n}","import React from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport PropTypes from 'prop-types';\n\nexport default function ArtistTrackCard(props) {\n\n    return (\n        <div key={uuidv4()} className=\"ArtistTrackCard\" onClick={props.onClick}>\n            <img onClick={props.onClick} className={props.round ? \"ArtistTrackCard-img round\" : \"ArtistTrackCard-img\"} src={props.imgSrc} alt=\"track-card\" key={uuidv4()} />\n            <div className=\"title\" onClick={props.onClick}><p>{props.name}</p></div>\n        </div>\n    )\n}\n\nArtistTrackCard.prototype = {\n    name: PropTypes.string,\n    imgSrc: PropTypes.string,\n}","const { Map } = require('immutable');\n\nexport default function createAlbum(albumId, albumName, albumImg, album_type, artistIds, artistNames) {\n    return Map({\n        albumId: albumId,\n        albumName: albumName,\n        albumImg: albumImg,\n        albumType: album_type,\n        artistIds: artistIds,\n        artistNames: artistNames,\n        tracks: []\n    })\n}","const { Map } = require('immutable');\n\nexport default function createArtist(id, name, img) {\n    return Map({\n        \"artistId\": id,\n        \"artistName\": name,\n        \"artistImg\": img,\n        \"relatedArtists\": [],\n        \"albums\": [],\n        \"saved\": \"\",\n    })\n}","const { Map } = require('immutable');\n\nexport default function createTrack(id, name, duration_ms, preview_url, artists) {\n    return Map({\n        id: id,\n        name: name,\n        duration: duration_ms,\n        url: preview_url,\n        artists: artists\n    })\n}","import createAlbum from \"../album/Album\"\nimport createArtist from \"../artist/Artist\"\nimport createTrack from \"../track/Track\"\n\nexport function createRequest(token, url, method) {\n    if (token === undefined || url === undefined || method === undefined) {\n        return\n    }\n    var myHeaders = new Headers({\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        \"Authorization\": \"Bearer \" + token\n    });\n\n    var myInit = {\n        method: method,\n        headers: myHeaders,\n        mode: 'cors',\n        cache: 'default'\n    };\n    var myRequest = new Request(url, myInit);\n\n    return myRequest\n}\n\nexport function convertToMin(duration_ms) {\n    var duration = parseInt(duration_ms)\n    var seconds = Math.floor((duration / 1000) % 60)\n    var minutes = Math.floor((duration / (1000 * 60)) % 60)\n    if (seconds < 10) {\n        seconds = 0 + seconds.toString()\n    }\n    return (minutes + \":\" + seconds)\n}\n\nexport const findAlbumsById = (albums, albumId) => {\n    const result = albums.find(item => item.get(\"albumId\") === albumId)\n    return result\n}\n\n\nexport const findArtistsById = (artists, artistId) => {\n    const result = artists.find(item => item.get(\"artistId\") === artistId)\n    return result\n}\n\nexport function removeDuplicates(list) {\n    let result = []\n    let trimmedIdList = Array.from(new Set(list.map(each => each.get(\"artistId\"))))\n    result = trimmedIdList.map(each => {\n        let midResult = findItemFromAList(each, list, \"artistId\")\n        return midResult\n    })\n    return result\n}\n\n\nexport function removeDuplicateAlbums(list) {\n    let result = []\n    let trimmedIdList = Array.from(new Set(list.map(each => each.get(\"albumId\"))))\n    let midResult = trimmedIdList.map(each => {\n        return findItemFromAList(each, list, \"albumId\")\n    })\n    let trimmedNameList = Array.from(new Set(midResult.map(each => each.get(\"albumName\"))))\n    result = trimmedNameList.map(each => {\n        return findItemFromAList(each, list, \"albumName\")\n    })\n    return result\n}\n\nfunction findItemFromAList(id, list, query) {\n    let result\n    list.map(each => {\n        if (id === each.get(query)) {\n            result = each\n        }\n    })\n    return result\n}\n\nexport const formatArtistNameForHeader = (list) => {\n    if (list.length === 3) {\n        return (\"With \" + list[0] + \" ,\" + list[1] + \" and \" + list[2])\n    }\n    if (list.length === 2) {\n        return (\"With \" + list[0] + \" and \" + list[1])\n    }\n    if (list.length === 1) {\n        return (\"With \" + list[0])\n    }\n    if (list.length > 3) {\n        return (\"With \" + list[0] + \" ,\" + list[1] + \" ,\" + list[2] + \" and more...\")\n    }\n    else {\n        return \"\"\n    }\n}\n\nexport const toUrlString = (txtList) => {\n    let result = \"\"\n    if (txtList.length > 0) {\n        result = txtList.join(\"%20\")\n    }\n    return result\n}\n\n\n//Take in the url that is returned from Spotify and then get the access token\nexport const retrieveAccessToken = url => {\n    let result = \"\"\n    console.log(\"url\", url)\n    if (url !== undefined || \"\") {\n        result = url.split(\"#\")\n    }\n    if (result[1] !== undefined) {\n        result = result[1].split(\"&\")\n    }\n    if (result[0] !== undefined) {\n        result = result[0].split(\"=\")\n    }\n    result = result[1]\n    console.log(\"result\", result)\n    return result\n\n}\n\n\n\nexport function createArtistFromList(data) {\n    let artists = []\n    if (data === undefined) { return [] }\n    console.log(\"list in util\", data)\n    if (data.length > 0) {\n        data.map(each => {\n            let url = each.images.length === 0 ? \"\" : each.images[0].url\n            artists.push(createArtist(each.id, each.name, url))\n        })\n    }\n    return artists\n}\n\n\n\nexport function createTracksFromList(list) {\n    let tracks = []\n    if (list.length === 0 || list === undefined) { return [] }\n    list.map(\n        each => {\n            let artists = each.track.artists.map(eachArtist => createArtist(eachArtist.id, eachArtist.name, \"\"))\n            tracks.push(createTrack(each.track.id, each.track.name, convertToMin(each.track.duration_ms), each.track.preview_url, artists))\n        })\n    return tracks\n}\n\nexport function createTracksForAlbum(list) {\n    const tracks = list.map(each => {\n        let artists = []\n        each.artists.map(eachArtist => artists.push(\n            createArtist(eachArtist.id, eachArtist.name, \"\")\n        ))\n        return createTrack(each.id, each.name, convertToMin(each.duration_ms), each.preview_url, artists)\n    })\n    return tracks\n}\n\nexport function createAlbumFromData(data) {\n    const albumImg = data.images[1] ? data.images[1].url : data.images[0] ? data.images[0].url : \"\"\n    let anAlbum = createAlbum(data.id, data.name, albumImg, data.album_type,\n        data.artists.map(eachArtist => eachArtist.id),\n        data.artists.map(eachArtist => eachArtist.name))\n    return anAlbum\n}\n\nexport function createAlbumsForAnArtist(list) {\n    let albumIds = []\n    let albums = []   //instantialize the list to store albums\n    let singles = []\n    list.map(each => {\n        if (!albumIds.includes(each.id)) {\n            albumIds.push(each.id)\n            let artistIds = []\n            each.artists.map(eachArtist => {\n                artistIds.push(eachArtist.id)\n            })\n            const albumImg = each.images[1] ? each.images[1].url : each.images[0] ? each.images[0].url : \"\"\n            let anAlbum = createAlbum(each.id, each.name, albumImg, each.album_type,\n                artistIds, each.artists.map(\n                    eachArtist => eachArtist.name))\n            albums.push(anAlbum)\n            if (each.album_group === \"album\") {\n                albums.push(anAlbum)\n            }\n            if (each.album_group === \"single\") {\n                singles.push(anAlbum)\n            }\n        }\n    })\n    const result = {\n        albums: albums,\n        singles: singles\n    }\n    return result\n}\n\nexport function createSavedAlbums(list) {\n    let albumIds = []\n    let albums = []\n    let artists = []\n    let artistIds = []\n    if (list === undefined) {\n        return\n    }\n    list.map(each => {\n        each.album.artists.map(\n            eachArtist => {\n                artists.push(\n                    createArtist(eachArtist.id, eachArtist.name, \"\")\n                )\n                artistIds.push(eachArtist.id)\n            }\n        )\n        albumIds.push(each.album.id)\n        const albumImg = each.album.images[1] ? each.album.images[1].url : each.album.images[0] ? each.album.images[0].url : \"\"\n        let anAlbum = createAlbum(each.album.id, each.album.name, albumImg, each.album.album_type,\n            each.album.artists.map(eachArtist => eachArtist.id), each.album.artists.map(\n                eachArtist => eachArtist.name))\n        albums.push(anAlbum)\n    })\n    return {\n        albums: albums,\n        artists: artists\n    }\n}\n\nexport function createTopTracksForArtist(list) {\n    let tracks = []\n    list.map(each => {\n        const artists = each.artists.map(eachArtist => { return createArtist(eachArtist.id, eachArtist.name, \"\") })\n        tracks.push(createTrack(each.id, each.name, convertToMin(each.duration_ms), each.preview_url, artists)\n        )\n    })\n    return tracks.slice(0, 5)\n}\n\nexport function createUsersTopTracks(list) {\n    let albumIds = []\n    let albums = []\n    let artists = []\n    if (list === undefined) {\n        return\n    }\n    list.map(each => {\n        let thisArtists = each.album.artists.map(\n            eachArtist => createArtist(eachArtist.id, eachArtist.name, \"\")\n        )\n        artists = artists.concat(thisArtists)\n        albumIds.push(each.album.id)\n        let anAlbum = createAlbum(each.album.id, each.album.name, each.album.images[1].url,\n            each.album.album_type, each.album.artists.map(eachArtist => eachArtist.id), each.album.artists.map(\n                eachArtist => eachArtist.name))\n        albums.push(anAlbum)\n    })\n    return {\n        albumIds: albumIds,\n        albums: albums,\n        artists: artists\n    }\n}\n\nexport function createTop2Artists(list) {\n    if (list === undefined) {\n        return\n    }\n    let artists = []\n    const firstArtist = createArtist(list[0].id, list[0].name, list[0].images[1].url)\n    const secondArtist = createArtist(list[1].id, list[1].name, list[1].images[1].url)\n    artists.push(firstArtist, secondArtist)\n    return artists\n}\n\nexport function createRecentPlayed(list) {\n    let albums = []\n    let albumIds = []\n    let artists = []\n    if (list === undefined) {\n        return\n    }\n    list.map(each => {\n        let thisArtists = each.track.album.artists.map(\n            eachArtist => createArtist(eachArtist.id, eachArtist.name, \"\"))\n        artists = artists.concat(thisArtists)\n        albumIds.push(each.track.album.id)\n        let anAlbum = createAlbum(each.track.album.id, each.track.album.name, each.track.album.images[1].url,\n            each.track.album.album_type, each.track.album.artists.map(\n                eachArtist => eachArtist.id), each.track.album.artists.map(\n                    eachArtist => eachArtist.name))\n        albums.push(anAlbum)\n    })\n    return {\n        albumIds: albumIds,\n        artists: artists,\n        albums: albums\n    }\n}\n\nexport function createPlaylist(list) {\n    let playlists = list.map(each => {\n        return {\n            id: each.id,\n            name: each.name,\n            img: each.images[0].url,\n            owner: each.owner.display_name\n        }\n    })\n    return playlists\n}","import { useState, useEffect, useCallback, useRef } from 'react';\nimport { useSelector, useDispatch } from \"react-redux\"\nimport { fetchArtistsAlbumsLoading } from \"../../core/artist/Actions\"\nimport { fetchAlbumTracksLoading } from \"../../core/track/Actions\"\nimport history from \"../../core/history\"\nimport { getSavedAlbums, getSavedArtists, getTrackToToggle} from \"../../core/Selectors\"\nimport { loadLibraryPage } from \"../../core/library/Actions\"\n\nimport { api_base_url } from \"../../core/Constants\"\nimport { createRequest, convertToMin } from \"../../core/utils/Utils\"\nimport { store } from \"../../index\"\nimport createTrack from \"../../core/track/Track\"\nimport createArtist from \"../../core/artist/Artist\"\n\n\nexport default function useLoadTracks(pageNumber) {\n    const [loading, setLoading] = useState(true)\n    const [error, setError] = useState(false)\n    const [tracks, setTracks] = useState([])\n    const [hasMore, setHasMore] = useState(false)\n\n    useEffect(() => {\n        setLoading(true)\n        setError(false)\n        const offset = pageNumber > 1 ? (pageNumber - 1) * 10 : 0\n        const url = api_base_url + \"me/tracks?limit=10&offset=\" + offset\n        const token = store.getState().UserReducer.accessToken\n        var myRequest = createRequest(token, url, \"GET\")\n        fetch(myRequest).then((response) => {\n            response.json().then(\n                data => {\n                    if (data === undefined) { return }\n                    let newTracks = []\n                    data.items.map(\n                        each => {\n                            let artists = each.track.artists.map(eachArtist => createArtist(eachArtist.id, eachArtist.name, \"\"))\n                            tracks.push(createTrack(each.track.id, each.track.name, convertToMin(each.track.duration_ms), each.track.preview_url, artists))\n                        }\n                    )\n                    setHasMore(data.total > offset + 10)\n                    setTracks(tracks.concat(newTracks))\n                    setLoading(false)\n                })\n\n        }).catch(e => {\n            setError(true)\n        })\n    }, [pageNumber])\n\n    return { loading, error, tracks, hasMore }\n}\n\nexport const useDispatchArtistPage = () => {\n    const dispatch = useDispatch()\n\n    const fetchTracks = useCallback(\n        (e) => dispatch(fetchAlbumTracksLoading(e.target.id)),\n        [dispatch]\n    )\n\n    const fetchArtistPage = useCallback(\n        (e) => {\n            dispatch(fetchArtistsAlbumsLoading(e.target.id))\n            history.push(\"/albums\")\n        },\n        [dispatch],\n    )\n\n    return { fetchTracks, fetchArtistPage }\n}\n\nexport const useDispatchLibraryPage = () => {\n    const dispatch = useDispatch()\n\n    const savedArtists = useSelector(getSavedArtists)\n    const savedAlbums = useSelector(getSavedAlbums)\n\n\n    const fetchLibrary = useCallback(() => {\n        dispatch(loadLibraryPage())\n    }, [dispatch])\n\n\n    useEffect(() => {\n        if (savedAlbums !== undefined && savedAlbums.length === 0) {\n            fetchLibrary()\n        }\n    }, [savedAlbums, savedArtists])\n\n    return { savedArtists, savedAlbums }\n}\n\nexport const useSavedTracks = () => {\n    const [pageNumber, setPageNumber] = useState(1)\n    const trackSaved = useSelector(getTrackToToggle)\n\n    const { loading, error, tracks, hasMore } = useLoadTracks(pageNumber)\n\n    useEffect(() => {\n        //fetch the top 10 tracks and save to the local state.\n        //when scroll, fetch another 10 tracks and append to the local state\n\n    }, [pageNumber])\n\n\n    const observer = useRef()\n    const lastTrackElementRef = useCallback(node => {\n        if (loading) return\n        if (observer.current) observer.current.disconnect()\n        observer.current = new IntersectionObserver(entries => {\n            console.log(\"entries\", entries, entries[0])\n            // TODO wrong entries[0].isIntersecting\n            if (entries[0].isIntersecting && hasMore) {\n                //TODO isIntersecting??????\n\n                setPageNumber(prevPageNumber => prevPageNumber + 1)\n            }\n        })\n        if (node) observer.current.observe(node)\n    }, [loading, hasMore])\n\n    return { trackSaved, tracks, lastTrackElementRef }\n}","import React from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport ArtistPageHeader from \"../components/artist/ArtistPageHeader\"\nimport ArtistTrackCard from \"../components/track-card/ArtistTrackCard\"\nimport { useSelector } from \"react-redux\"\nimport {\n    getCurrentArtistsAlbums, getCurrentArtist, getCurrentArtistSaved,\n    getRelatedArtists\n} from \"../../core/Selectors\"\nimport { useDispatchArtistPage } from \"./CustomHooks\"\n\n\nexport default function ArtistPage() {\n    const currentArtist = useSelector(getCurrentArtist)\n    let saved = useSelector(getCurrentArtistSaved)\n    let relatedArtists = useSelector(getRelatedArtists)\n    const albums = useSelector(getCurrentArtistsAlbums)\n\n    const img = currentArtist !== undefined && currentArtist.get(\"artistImg\") === undefined ? \"\" : currentArtist.get(\"artistImg\")\n\n    const { fetchTracks, fetchArtistPage } = useDispatchArtistPage()\n\n\n  \n\n    if (albums.albums === undefined || albums.singles === undefined || relatedArtists === undefined) {\n        return <div className=\"ArtistPage\"></div>\n    }\n\n\n\n\n\n    return (\n        <div className=\"ArtistPage\">\n            {currentArtist !== (\"\" || undefined) &&\n                <ArtistPageHeader imgSrc={img} artistName={currentArtist.get(\"artistName\")}\n                    key={uuidv4()} saved={saved} />}\n            <h1>Albums</h1>\n            <div className=\"list\">\n                {albums.albums.map(each => {\n                    return (<ArtistTrackCard onClick={fetchTracks}  id={each.get(\"albumId\")}\n                        imgSrc={each.get(\"albumImg\")} name={each.get(\"albumName\")} />)\n                })}\n            </div>\n            <h1>Singles and EPs</h1>\n            <div className=\"list\">\n                {albums.singles.map(each => {\n                    return (<ArtistTrackCard onClick={fetchTracks} id={each.get(\"albumId\")}\n                        imgSrc={each.get(\"albumImg\")} name={each.get(\"albumName\")} />)\n                })}\n            </div>\n            <h1>Related Artists</h1>\n            <div className=\"list\">\n                {relatedArtists.map(each => {\n                    return (<ArtistTrackCard id={each.get(\"artistId\")}\n                        round={true} onClick={() => fetchArtistPage}\n                        imgSrc={each.get(\"artistImg\")} name={each.get(\"artistName\")} />)\n                })}\n            </div>\n        </div>)\n}","import React from \"react\";\nimport { ListItem, ListItemIcon, ListItemText } from '@material-ui/core';\nimport history from \"../../../core/history\"\nimport HomeOutlinedIcon from '@material-ui/icons/HomeOutlined';\nimport SearchOutlinedIcon from '@material-ui/icons/SearchOutlined';\nimport LibraryMusicOutlinedIcon from '@material-ui/icons/LibraryMusicOutlined';\nimport AddBoxIcon from '@material-ui/icons/AddBox';\n\nexport default function SideMenu() {\n\n    return (\n        <div className=\"SideMenu\">\n            <div className=\"container\">\n                <ListItem className=\"link\" button onClick={() => history.push(\"/Home\")}>\n                    <ListItemIcon>\n                        <HomeOutlinedIcon className=\"nav-icon\" fontSize='inherit' />\n                    </ListItemIcon>\n                    <ListItemText className=\"nav-item\" primary=\"Home\" />\n                </ListItem>\n                <ListItem className=\"link\" button onClick={() => history.push(\"/search\")}>\n                    <ListItemIcon>\n                        <SearchOutlinedIcon className=\"nav-icon\" fontSize='inherit' />\n                    </ListItemIcon>\n                    <ListItemText className=\"nav-item\" primary=\"Search\" />\n                </ListItem>\n                <ListItem className=\"link\" button onClick={() => history.push(\"/library\")}>\n                    <ListItemIcon>\n                        <LibraryMusicOutlinedIcon className=\"nav-icon\" fontSize='inherit' />\n                    </ListItemIcon>\n                    <ListItemText className=\"nav-item\" primary=\"Your Library\" />\n                </ListItem>\n                <p className=\"nav-divider\" >PLAYLISTS</p>\n                <ListItem className=\"link\" button onClick={() => history.push(\"/create-playlist\")}>\n                    <ListItemIcon>\n                        <AddBoxIcon className=\"nav-icon\" fontSize='inherit' color='inherit' />\n                    </ListItemIcon>\n                    <ListItemText className=\"nav-item\" primary=\"Create Playlist\" />\n                </ListItem>\n            </div>\n        </div>\n    )\n}","import React, { useCallback } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { useDispatch } from \"react-redux\"\nimport { fetchArtistsAlbumsLoading } from \"../../../core/artist/Actions\"\nimport PropTypes from 'prop-types';\nimport history from \"../../../core/history\"\n\nexport default function ArtistCard(props) {\n    const dispatch = useDispatch()\n\n    const fetchArtists = useCallback(\n        () => {\n            dispatch(fetchArtistsAlbumsLoading(props.artistId))\n            history.push(\"/artists\")\n        },\n        [dispatch],\n    )\n\n    return (\n        <div className=\"card\" key={uuidv4()} onClick={fetchArtists}>\n            <div className={props.round ? \"artist-card-image round\" : \"\"}>\n                <img src={props.imgSrc} alt=\"track-card\" key={uuidv4()}/>\n            </div>\n            <div className=\"cardContent\" >\n                <p className=\"card-title\">{props.title}</p>\n                <p className=\"card-subtitle\">{props.subtitle}</p>\n            </div>\n        </div>\n    )\n}\n\nArtistCard.prototype = {\n    subtitle: PropTypes.string,\n    title: PropTypes.string,\n    imgSrc: PropTypes.string,\n    artistId: PropTypes.string,\n}","import React, { useState } from 'react';\nimport AlbumCard from \"../components/track-card/AlbumCard\"\nimport ArtistCard from \"../components/track-card/ArtistCard\"\nimport TracklistItem from \"../components/track-card/TracklistItem\"\nimport { useDispatchLibraryPage, useSavedTracks } from \"./CustomHooks\"\nimport { ListItem, ListItemText } from '@material-ui/core';\nimport { v4 as uuidv4 } from 'uuid';\n\n//TODO bug\nexport const SavedTracks = () => {\n    const { trackSaved, tracks, lastTrackElementRef } = useSavedTracks\n\n    return (\n        <ul className=\"songList\">\n            {tracks !== undefined && tracks.map((each, index) => {\n                if (tracks.length === index + 1) {\n                    return (<TracklistItem saved={trackSaved[tracks.indexOf(each)]}\n                        index={tracks.indexOf(each)} key={uuidv4()}\n                        previous={tracks[tracks.indexOf(each) > 0 ? tracks.indexOf(each) - 1 : 0]}\n                        next={tracks[tracks.indexOf(each) + 1 <= tracks.length ? tracks.indexOf(each) + 1 : -1]} current={each}\n                    />)\n                }\n                else {\n                    return (\n                        <TracklistItem saved={trackSaved[tracks.indexOf(each)]}\n                            index={tracks.indexOf(each)} key={uuidv4()}\n                            previous={tracks[tracks.indexOf(each) > 0 ? tracks.indexOf(each) - 1 : 0]}\n                            next={tracks[tracks.indexOf(each) + 1 <= tracks.length ? tracks.indexOf(each) + 1 : -1]} current={each}\n                        />\n                    )\n                }\n            })}\n        </ul>\n    )\n}\n\nexport default function LibraryPage() {\n    const [view, setView] = useState(\"albums\")\n\n    const { savedArtists, savedAlbums } = useDispatchLibraryPage()\n\n    return (\n        <div className=\"LibraryPage\" >\n            <div className=\"head-row\" >\n                <ListItem className=\"tab\" button onClick={() => setView(\"albums\")}>\n                    <ListItemText className={view === \"albums\" ? \"library-tab selected\" : \"library-tab\"} primary=\"Albums\" />\n                </ListItem>\n                <ListItem className=\"tab\" button onClick={() => setView(\"artists\")}>\n                    <ListItemText className={view === \"artists\" ? \"library-tab selected\" : \"library-tab\"} primary=\"Artists\" />\n                </ListItem>\n                <ListItem className=\"tab\" button onClick={() => setView(\"songs\")}>\n                    <ListItemText className={view === \"songs\" ? \"library-tab selected\" : \"library-tab\"} primary=\"Songs\" />\n                </ListItem>\n            </div>\n            <div className=\"list\" >\n                {view === \"albums\" && savedAlbums !== undefined && savedAlbums.length > 0 && savedAlbums.map(each =>\n                    <AlbumCard title={each.get(\"albumName\")} subtitle={each.get(\"artistNames\")}\n                        artistIds={each.get(\"artistIds\")} albumId={each.get(\"albumId\")} imgSrc={each.get(\"albumImg\")}\n                    />)}\n                {view === \"artists\" && savedArtists !== undefined && savedArtists.length > 0 && savedArtists.map(each =>\n                    <ArtistCard title={each.get(\"artistName\")} round={true}\n                        subtitle=\"Artist\" artistId={each.get(\"artistId\")} imgSrc={each.get(\"artistImg\")} />)}\n                {view === \"songs\" &&\n                    <SavedTracks />\n                }\n            </div>\n        </div>\n    )\n}","import { api_base_url } from \"../Constants\"\nimport { createRequest } from \"../utils/Utils\"\nimport { store } from \"../../index\"\n\n//Get the top 6 tracks from the recently played tracks\nexport async function fetchRecentPlayed(token) {\n    if (token === undefined || token === \"\") {\n        return\n    }\n    const url = api_base_url + \"me/player/recently-played?type=track&limit=6\"\n    var myRequest = createRequest(token, url, \"GET\")\n    const response = await fetch(myRequest)\n    const data = await response.json()\n    return data.items;\n}\n\nexport async function fetchUsersTopTracks(token) {\n    if (token === undefined || token === \"\") {\n        return\n    }\n    const url = api_base_url + \"me/top/tracks?limit=6\"\n    var myRequest = createRequest(token, url, \"GET\")\n    const response = await fetch(myRequest)\n    const data = await response.json()\n    return data.items;\n}\n\n//TODO Do I still need it???\nexport async function fetchUsersTopTwoArtists(token) {\n    if (token === undefined || token === \"\") {\n        return\n    }\n    const url = api_base_url + \"me/top/artists?limit=2\"\n    var myRequest = createRequest(token, url, \"GET\")\n    //.then((response) => {\n    const response = await fetch(myRequest)\n    const data = await response.json()\n    return data.items;\n}\n\n\nexport async function fetchArtistsTopTracks(token) {\n    if (token === undefined || token === \"\") {\n        return\n    }\n    const artistId = store.getState().ArtistReducer.get(\"currentArtistId\")\n    const url = api_base_url + \"artists/\" + artistId + \"/top-tracks?country=AU\"\n    var myRequest = createRequest(token, url, \"GET\")\n    const response = await fetch(myRequest)\n    const data = await response.json()\n    return data.tracks;\n}\n\n\nexport async function fetchTracksForAlbum(token, albumId) {\n    const url = api_base_url + \"albums/\" + albumId + \"/tracks\"\n    var myRequest = createRequest(token, url, \"GET\")\n    const response = await fetch(myRequest)\n    const data = await response.json()\n    return data.items;\n}\n\nexport async function fetchArtistsAlbums(token) {\n    const artistId = store.getState().ArtistReducer.get(\"currentArtistId\")\n    const url = api_base_url + \"artists/\" + artistId + \"/albums\"\n    var myRequest = createRequest(token, url, \"GET\")\n    const response = await fetch(myRequest)\n    const data = await response.json()\n    return data.items;\n}\n\nexport async function fetchAlbumById(token, albumId) {\n    const url = api_base_url + \"albums/\" + albumId\n    var myRequest = createRequest(token, url, \"GET\")\n    const response = await fetch(myRequest)\n    const data = await response.json()\n    return data;\n}\n\nexport async function fetchArtistById(token) {\n    const artistId = store.getState().ArtistReducer.get(\"currentArtistId\")\n    const url = api_base_url + \"artists/\" + artistId\n    var myRequest = createRequest(token, url, \"GET\")\n    const response = await fetch(myRequest)\n    const data = await response.json()\n    return data;\n}\n\nexport async function fetchSearchResults(token, query, callback) {\n    const url = api_base_url + \"search?q=\" + query + \"&type=track%2Cartist%2Cplaylist%2Calbum&limit=6\"\n    var myRequest = createRequest(token, url, \"GET\")\n    const response = await fetch(myRequest)\n    const data = await response.json()\n    return data;\n}\n\nexport async function fetchSavedAlbums(token) {\n    const url = api_base_url + \"me/albums\"\n    var myRequest = createRequest(token, url, \"GET\")\n    const response = await fetch(myRequest)\n    const data = await response.json()\n    return data.items;\n    //  createSavedAlbums\n    // store.dispatch(saveAlbums(albums))\n    // store.dispatch(saveToSavedAlbums(albums))\n    // store.dispatch(saveArtists(artists))\n}\n\nexport async function fetchRelatedArtists(token) {\n    const artistId = store.getState().ArtistReducer.get(\"currentArtistId\")\n    const url = api_base_url + \"artists/\" + artistId + \"/related-artists\"\n    var myRequest = createRequest(token, url, \"GET\")\n    const response = await fetch(myRequest)\n    const data = await response.json()\n    return data.artists\n}\n\nexport async function fetchSavedArtists(token) {\n    const url = api_base_url + \"me/following?type=artist\"\n    var myRequest = createRequest(token, url, \"GET\")\n    const response = await fetch(myRequest)\n    const data = await response.json()\n    return data.artists.items;\n}\n\nexport async function fetchSavedTracks(token) {\n    const url = api_base_url + \"me/tracks\"\n    var myRequest = createRequest(token, url, \"GET\")\n    const response = await fetch(myRequest)\n    const data = await response.json()\n    return data.items;\n}\n\nexport async function fetchSavedTracksNextPage(token, pageNumber) {\n    const url = api_base_url + \"me/tracks?limit=10&offset=\" + (pageNumber - 1) * 20\n    var myRequest = createRequest(token, url, \"GET\")\n    const response = await fetch(myRequest)\n    const data = await response.json()\n    return data.items;\n}\n\nexport async function fetchSavedPlaylists(token) {\n    const url = api_base_url + \"me/playlists\"\n    var myRequest = createRequest(token, url, \"GET\")\n    const response = await fetch(myRequest)\n    const data = await response.json()\n    console.log(\"saved playlists\", data)\n    return data;\n}\n\nexport async function saveRemoveAlbum(token, albumId, method) {\n    const url = api_base_url + \"me/albums?ids=\" + albumId\n    var myRequest = createRequest(token, url, method)\n    var response = await fetch(myRequest)\n    return response.status\n}\n\nexport async function followUnfollowArtist(token, artistId, method) {\n    const url = api_base_url + \"me/following?type=artist&ids=\" + artistId\n    var myRequest = createRequest(token, url, method)\n    var response = await fetch(myRequest)\n    return response.status\n}\n\nexport async function saveRemoveTrack(token, trackId, method) {\n    const url = api_base_url + \"me/tracks?ids=\" + trackId\n    var myRequest = createRequest(token, url, method)\n    var response = await fetch(myRequest)\n    return response.status\n}\n\nexport async function followUnfollowPlaylist(token, playlistId, method) {\n    const url = api_base_url + \"playlists/\" + playlistId + \"/followers\"\n    var myRequest = createRequest(token, url, method)\n    var response = await fetch(myRequest)\n    return response.status\n}\n\nexport async function checkFollowArtist(token, artistId) {\n    const url = api_base_url + \"me/following/contains?type=artist&ids=\" + artistId\n    var myRequest = createRequest(token, url, \"GET\")\n    var response = await fetch(myRequest)\n    var data = await response.json()\n    return data  //[true] or [false]\n}\n\nexport async function checkFollowAlbum(token, albumId) {\n    const url = api_base_url + \"me/albums/contains?ids=\" + albumId\n    var myRequest = createRequest(token, url, \"GET\")\n    var response = await fetch(myRequest)\n    var data = await response.json()\n    console.log(\"data albums\", data)\n    return data  //[true] or [false]\n}\n\nexport async function checkFollowTracks(token, trackIds) {\n    const formattedIds = trackIds.join(\",\")\n    const url = api_base_url + \"me/tracks/contains?ids=\" + formattedIds\n    var myRequest = createRequest(token, url, \"GET\")\n    var response = await fetch(myRequest)\n    var data = await response.json()\n    console.log(\"data tracks\", data)\n    return data\n}","import React, { useState } from \"react\";\nimport {useSelector} from \"react-redux\"\nimport { createArtistFromList, createTracksForAlbum, createPlaylist,createAlbumFromData } from \"../../../core/utils/Utils\"\nimport { throttle } from \"lodash\"\nimport { fetchSearchResults } from \"../../../core/api/api-calls\"\nimport { getToken } from \"../../../core/Selectors\";\n\nexport default function SearchBar(props) {\n    const [query, setQuery] = useState(\"\")\n    const handleInputDebounce = throttle(handleChange, 1000)\n    const token = useSelector(getToken)\n\n    async function handleChange(e) {\n        let newQuery = encodeURI(e.target.value)\n        setQuery(encodeURI(e.target.value))\n        const data = await fetchSearchResults(token, newQuery)\n        if(data!== undefined && data.tracks!== undefined && data.artists!== undefined\n            && data.playlists!== undefined && data.albums!== undefined){\n            let artists = createArtistFromList(data.artists.items)\n            let tracks = createTracksForAlbum(data.tracks.items)\n            let albums = data.albums.items.map(each => createAlbumFromData(each))\n            let playlists = createPlaylist(data.playlists.items)\n            props.found({\n                artists: artists,\n                albums: albums,\n                tracks: tracks,\n                playlists: playlists\n            })\n        }\n    }\n\n    return (\n        <div className=\"SearchBar\">\n            <input className=\"search-input\" type=\"text\" onChange={handleInputDebounce}\n                placeholder=\"Search for artists or songs\" />\n        </div>\n    )\n}","import React, { useState, useEffect } from \"react\";\nimport SearchBar from \"../components/search-bar/SearchBar\"\nimport AlbumCard from \"../components/track-card/AlbumCard\"\nimport ArtistCard from \"../components/track-card/ArtistCard\"\nimport TracklistItem from \"../components/track-card/TracklistItem\"\nimport { store } from \"../../index\"\nimport { getTrackToToggle } from \"../../core/Selectors\"\nimport { v4 as uuidv4 } from 'uuid';\n\nexport default function Searchpage() {\n    const [showResults, setShowResults] = useState(false)\n    const [tracks, setTracks] = useState([])\n    const [artists, setArtists] = useState([])\n    const [albums, setAlbums] = useState([])\n    const [playlists, setPlaylists] = useState([])\n    const [trackSaved, setTrackSaved] = useState([])\n    const [notFound, setNotFound] = useState(false)\n\n    const storeState = store.getState()\n\n    useEffect(() => {\n        const tracksToToggle = getTrackToToggle(storeState)\n        if (tracksToToggle.length !== 0) {\n            setTrackSaved(getTrackToToggle(storeState))\n        }\n    }, [storeState.TrackReducer])\n\n\n    function handleResult(data) {\n        setShowResults(false)\n        setTracks(data.tracks)\n        setArtists(data.artists)\n        setAlbums(data.albums)\n        setPlaylists(data.playlists)\n        setShowResults(true)\n    }\n\n    function displayError(err) {\n        console.log(err)\n    }\n\n    return (\n        <div className=\"Searchpage\">\n            <div className=\"SearchResults\">\n                <SearchBar found={handleResult} onErr={displayError} />\n                {notFound && <p className=\"not-found-message\">We could not find any result.</p>}\n                {showResults &&\n                    <div className=\"tracks\">\n                        <p className=\"title\"> Songs</p>\n                        <ul className=\"songList\">\n                            {tracks.map(each => <TracklistItem saved={trackSaved[tracks.indexOf(each)]}\n                                index={tracks.indexOf(each)} key={uuidv4()}\n                                previous={tracks[tracks.indexOf(each) > 0 ? tracks.indexOf(each) - 1 : 0]}\n                                next={tracks[tracks.indexOf(each) + 1 <= tracks.length ? tracks.indexOf(each) + 1 : -1]} current={each}\n                            />)}\n                        </ul>\n                    </div>}\n                {showResults && <div className=\"artists\" >\n                    <p className=\"title\"> Artists</p>\n                    <div className=\"contents\">\n                        {artists.map(each => <ArtistCard title={each.get(\"artistName\")} key={uuidv4()}\n                            subtitle=\"Artist\" artistId={each.get(\"artistId\")} imgSrc={each.get(\"artistImg\")} />)}\n                    </div>\n                </div>}\n                {showResults && <div className=\"albums\">\n                    <p className=\"title\"> Albums</p>\n                    <div className=\"contents\">\n                        {albums.map(each =>\n                            <AlbumCard title={each.get(\"albumName\")} subtitle={each.get(\"artistNames\")} key={uuidv4()}\n                                artistIds={each.get(\"artistIds\")} albumId={each.get(\"albumId\")} imgSrc={each.get(\"albumImg\")}\n                            />)}\n                    </div>\n                </div>}\n                }\n            </div>\n        </div>\n    )\n}\n\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from \"react-redux\"\nimport PropTypes from 'prop-types';\nimport { increaseSongTime } from \"../../../core/player/Actions\"\nimport { getSongPlaying, getSongPaused, getTimeElapsed, getSongs, getTrackNameById, getSongDetails } from \"../../../core/Selectors\"\nimport { play, pause, resume, stop, } from \"../../..//core/player/Actions\"\n\nexport default function SongControls({ hide }) {\n  const [audio, setAudio] = useState()\n\n  const dispatch = useDispatch()\n\n  const songPlaying = useSelector(getSongPlaying)\n  const songPaused = useSelector(getSongPaused)\n  const timeElapsed = useSelector(getTimeElapsed)\n  const songs = useSelector(getSongs)\n  const songName = useSelector(getTrackNameById)\n  const songDetails = useSelector(getSongDetails)\n\n  const [state, setState] = useState({\n    timeElapsed: timeElapsed\n  })\n\n  useEffect(() => {\n    setState({\n      timeElapsed: timeElapsed\n    });\n    if (!songPlaying) {\n      clearInterval(state.intervalId);\n    }\n\n    if (songPlaying && timeElapsed === 0) {\n      clearInterval(state.intervalId);\n      calculateTime();\n    }\n  }, [songPlaying, timeElapsed])\n\n\n  const audioControl = (song) => {\n    if (audio === undefined) {\n      dispatch(play(song.track))\n      setAudio(new Audio(song.track.preview_url));\n      audio.play();\n    } else {\n      dispatch(stop())\n      audio.pause();\n      dispatch(play(song.track))\n      setAudio(new Audio(song.track.preview_url));\n      audio.play();\n    }\n  };\n\n  function calculateTime() {\n\n    const intervalId = setInterval(() => {\n      if (songPaused) { return }\n      if (state.timeElapsed === 30) {\n        clearInterval(state.intervalId);\n        dispatch(stop())\n      }\n      increaseSongTime(state.timeElapsed + 1);\n    }, 1000);\n\n    setState({\n      intervalId: intervalId\n    });\n  }\n\n  const getSongIndex = () => {\n    const currentIndex = songs.map((song, index) => {\n      //TODO check this\n      if (song.track === songDetails) {\n        return index;\n      } else {\n        return undefined;\n      }\n    }).filter(item => {\n      return item !== undefined;\n    })[0];\n    return currentIndex;\n  }\n\n  const nextSong = () => {\n    let currentIndex = getSongIndex();\n    currentIndex === songs.length - 1 ? audioControl(songs[0]) : audioControl(songs[currentIndex + 1]);\n  }\n\n  const prevSong = () => {\n    let currentIndex = getSongIndex();\n    currentIndex === 0 ? audioControl(songs[songs.length - 1]) : audioControl(songs[currentIndex - 1]);\n  }\n\n  const pauseSong = () => {\n    dispatch(pause())\n  }\n\n  const resumeSong = () => {\n    dispatch(resume())\n  }\n\n  const showPlay = songPaused ? 'fa fa-play-circle-o play-btn' : 'fa fa-pause-circle-o pause-btn';\n\n  return (\n    <div className={!hide ? 'musicControls' : 'hide'}>\n      <div className='song-details song-name'>\n        {songName}\n      </div>\n\n      <div className='song-controls'>\n\n        <div onClick={prevSong} className='reverse-song'>\n          <i className=\"fa fa-step-backward reverse\" aria-hidden=\"true\" />\n        </div>\n\n        <div className='play-btn'>\n          <i onClick={!songPaused ? pauseSong : resumeSong} className={\"fa play-btn\" + showPlay} aria-hidden=\"true\" />\n        </div>\n\n        <div onClick={nextSong} className='next-song'>\n          <i className=\"fa fa-step-forward forward\" aria-hidden=\"true\" />\n        </div>\n\n      </div>\n      <div className='song-progress-container'>\n        <div className='song-progress'>\n          <div style={{ width: state.timeElapsed ? state.timeElapsed * 16.5 : 0 }} className='song-expired' />\n        </div>\n      </div>\n    </div>\n  );\n}\n\n\nSongControls.propTypes = {\n  timeElapsed: PropTypes.number,\n  songPlaying: PropTypes.bool,\n  songPaused: PropTypes.bool,\n  songName: PropTypes.string,\n  stop: PropTypes.func,\n  resume: PropTypes.func,\n  increaseSongTime: PropTypes.func,\n  pause: PropTypes.func,\n  songs: PropTypes.array,\n  songDetails: PropTypes.object,\n  audioControl: PropTypes.func\n};\n","import React, { useEffect, useCallback } from 'react';\nimport Button from '@material-ui/core/Button';\nimport { useDispatch } from 'react-redux'\nimport { authorization_base_url, scope, client_id, redirect_url, response_type, } from \"../../core/Constants\"\nimport { saveAccessToken } from \"../../core/user/Actions\"\n\nexport default function Login({ setShow }) {\n    const url = `${authorization_base_url}client_id=${client_id}&redirect_uri=${redirect_url}&scope=${scope.join(\"%20\")}&response_type=${response_type}`\n    const dispatchStore = useDispatch()\n\n    //Save the access token to the store\n    const dispatchSaveToken = useCallback(\n        accessToken => {\n            dispatchStore(saveAccessToken(accessToken))\n            setShow(true)\n        },\n        [useDispatch()]\n    )\n\n    useEffect(() => {\n        let hashParams = {};\n        let e,\n            r = /([^&;=]+)=?([^&;]*)/g,\n            q = window.location.hash.substring(1);\n        while ((e = r.exec(q))) {\n            hashParams[e[1]] = decodeURIComponent(e[2]);\n        }\n\n        if (!hashParams.access_token) {\n            window.location.href =url;\n        } else {\n            dispatchSaveToken(hashParams.access_token)\n        }\n    }, [window.location.href])\n\n    return (\n        <div className=\"container\">\n            <img className=\"background\" src={require(\"./4.jpg\")} alt=\"background\"></img>\n            <Button className=\"Login\" href={url}\n                style={{ color: \"white\", fontSize: \"3rem\", backgroundColor: \"#0a0a0a\" }}>\n                Log in to Spotify</Button>\n        </div>\n    );\n}","export const FETCH_USER_FAILED = 'FETCH_USER_FAILED'\nexport const FETCH_USER_FULFILLED = 'FETCH_USER_FULFILLED'\nexport const FETCH_USER_PENDING = 'FETCH_USER_PENDING'\n\nexport const LOAD_USER = 'LOAD_USER'\nexport const SAVE_ACCESS_TOKEN = 'SAVE_ACCESS_TOKEN'\n\nexport const fetchUserFailed = error => ({\n    type: FETCH_USER_FAILED,\n    payload: error\n})\n\nexport const fetchUserFulfilled = (userId, data) => ({\n    type: FETCH_USER_FULFILLED,\n    payload: {\n        user: data\n    }\n})\n\nexport const fetchUserPending = userId => ({\n    type: FETCH_USER_PENDING,\n    payload: {\n        userId\n    }\n})\n\nexport const loadUser = userId => ({\n    type: LOAD_USER,\n    payload: {\n        userId: parseInt(userId, 10)\n    }\n})\n\nexport const saveAccessToken = token => ({\n    type: SAVE_ACCESS_TOKEN,\n        accessToken: token\n})\n\n\n\nexport const userRequestActions = {\n    failed: fetchUserFailed,\n    fulfilled: fetchUserFulfilled,\n    pending: fetchUserPending\n};","import React, { useState } from 'react';\nimport { hot } from 'react-hot-loader/root'\nimport { Route, Switch, } from 'react-router-dom';\nimport Homepage from \"./views/pages/HomePage\"\nimport AlbumPage from \"./views/pages/AlbumPage\"\nimport ArtistPage from \"./views/pages/ArtistPage\"\nimport SideMenu from \"./views/components/side-menu/SideMenu\"\nimport LibraryPage from \"./views/pages/LibraryPage\"\nimport SearchPage from \"./views/pages/SearchPage\"\nimport SongControls from \"./views/components/music-control/SongControls\"\nimport Login from \"./views/pages/Login\"\nimport './App.scss'\n\nconst App = () => {\n  const [show, setShow] = useState(false)\n\n  return (\n    <div className=\"App\">\n      <div className={show ? \"upperPart\" : \"full-screen\"}>\n        {show && <SideMenu />}\n        <div className=\"main\">\n          <Switch>\n            <Route exact path=\"/\" component={() => <Login setShow={setShow} />} />\n            <Route exact path=\"/Home\" component={Homepage} />\n            <Route exact path=\"/albums\" component={AlbumPage} />\n            <Route exact path=\"/artists\" component={ArtistPage} />\n            <Route exact path=\"/search\" component={SearchPage} />\n            <Route exact path=\"/library\" component={LibraryPage} />\n            <Route exact path=\"/playlists\" component={LibraryPage} />\n            <Route exact path=\"/create-playlist\" component={LibraryPage} />\n          </Switch>\n        </div>\n      </div>\n      <SongControls hide={!show} />\n    </div>\n  );\n}\n\nexport default process.env.NODE_ENV === \"development\" ? hot(App) : App\n","export const SAVE_ALBUMS = \"SAVE_ALBUMS\"\nexport const FETCH_ARTISTS_ALBUMS_SUCCESSFUL = \"FETCH_ARTISTS_ALBUMS_SUCCESSFUL\"\n\nexport const saveAlbums = albums => ({\n    type: SAVE_ALBUMS,\n    albums: albums\n})\n\nexport const fetchArtistsAlbumsSuccessful = data => ({\n    type: FETCH_ARTISTS_ALBUMS_SUCCESSFUL,\n    data: data\n})","import {\n    SAVE_ARTISTS, FETCH_ARTISTS_ALBUMS_LOADING,\n    SAVE_RELATED_ARTISTS, UPDATE_CURRENT_ARTIST_SAVED\n} from \"./Actions\"\nimport { removeDuplicates } from \"../utils/Utils\"\nimport { FETCH_ARTISTS_ALBUMS_SUCCESSFUL } from \"../album/Actions\";\n\nconst initialState = new Map()\ninitialState.set(\"currentArtistId\", \"\")\ninitialState.set(\"artists\", [])\ninitialState.set(\"relatedArtists\", [])\n\nconst ArtistReducer = (state = initialState, action) => {\n    let newState = new Map(state)\n    const artistId = newState.get(\"currentArtistId\")\n    let currentArtist = newState.get(\"artists\").find(item => artistId === item.get(\"artistId\"))\n    switch (action.type) {\n        case SAVE_ARTISTS:\n            const newArtists = action.artists.concat(state.get(\"artists\"))\n            const trimmedNewArtists = removeDuplicates(newArtists)\n            newState.set(\"artists\", trimmedNewArtists)\n            return newState\n        case FETCH_ARTISTS_ALBUMS_LOADING:\n            newState.set(\"currentArtistId\", action.artistId)\n            newState.set(\"relatedArtists\", [])\n            return newState\n        case FETCH_ARTISTS_ALBUMS_SUCCESSFUL:\n            const albumIds = action.data.albums.map(each => each.get(\"albumId\"))\n            const singleIds = action.data.singles.map(each => each.get(\"albumId\"))\n            currentArtist.set(\"albums\", {\n                albums: albumIds,\n                singles: singleIds\n            })  //Object, not map\n            return newState\n        case SAVE_RELATED_ARTISTS:\n            const relatedArtistIds = action.artists.map(each => each.get(\"artstId\"))\n            // save the ids of the related artists into the current artist\n            currentArtist.set(\"relatedArtists\", relatedArtistIds)\n            newState.set(\"relatedArtists\", action.artists)\n            return newState\n        case UPDATE_CURRENT_ARTIST_SAVED:\n            currentArtist.set(\"saved\", action.data[0])\n            return newState\n        default:\n            return state;\n    }\n}\n\nexport default ArtistReducer;","import { SAVE_ACCESS_TOKEN } from \"./Actions\"\n\nlet initialState = {\n    accessToken: \"\",\n}\n\nconst UserReducer = (state = initialState, action) => {\n    let newState;\n    switch (action.type) {\n        case SAVE_ACCESS_TOKEN:\n            newState = Object.assign({}, state)\n            newState.accessToken = action.accessToken\n            return newState\n        default:\n            return state;\n    }\n}\n\nexport default UserReducer;","import { SAVE_ALBUMS } from \"./Actions\"\nimport { FETCH_ARTISTS_ALBUMS_LOADING, FETCH_ARTISTS_ALBUMS_SUCCESSFUL } from \"../artist/Actions\"\nimport { removeDuplicateAlbums } from \"../utils/Utils\"\nimport { FETCH_ALBUM_TRACKS_LOADING, FETCH_ALBUM_TRACKS_SUCCESSFUL } from \"../track/Actions\"\n\nconst initialState = new Map()\ninitialState.set(\"albums\", [])\ninitialState.set(\"currentAlbumId\", \"\")\ninitialState.set(\"currentArtistAlbums\", [])\n\nconst AlbumReducer = (state = initialState, action) => {\n    let newState = new Map(state)\n    let newList = []\n    let trimmedList = []\n    switch (action.type) {\n        case FETCH_ALBUM_TRACKS_LOADING:\n            newState.set(\"currentAlbumId\", action.albumId)\n            return newState\n        case FETCH_ALBUM_TRACKS_SUCCESSFUL:\n            const trackIds = action.data.map(each => each.get(\"id\"))\n            const currentAlbumId = newState.get(\"currentAlbumId\")\n            let currentAlbum = newState.get(\"albums\").find(item => item.get(\"albumId\") === currentAlbumId)\n            currentAlbum.set(\"tracks\", trackIds)\n            return newState\n        case SAVE_ALBUMS:\n            let trimmedData = removeDuplicateAlbums(action.albums)\n            newList = trimmedData.concat(state.get(\"albums\"))\n            trimmedList = removeDuplicateAlbums(newList)\n            newState.set(\"albums\", trimmedList)\n            return newState\n        case FETCH_ARTISTS_ALBUMS_LOADING:\n            newState.set(\"currentArtistAlbums\", [])\n            return newState\n        case FETCH_ARTISTS_ALBUMS_SUCCESSFUL:\n            let trimmedAlbums = removeDuplicateAlbums(action.data.albums)\n            let trimmedSingles = removeDuplicateAlbums(action.data.singles)\n            trimmedList = {\n                albums: trimmedAlbums,\n                singles: trimmedSingles\n            }\n            newState.set(\"currentArtistAlbums\", trimmedList)\n            return newState\n        default:\n            return state\n    }\n\n}\n\nexport default AlbumReducer\n","import {\n    FETCH_ALBUM_TRACKS_LOADING, FETCH_ALBUM_TRACKS_SUCCESSFUL, UPDATE_DISPLAY_TRACKS,\n    UPDATE_PLAYING_TRACKS\n} from \"./Actions\"\n\nlet initialEntity = new Map()\ninitialEntity.set(\"track\", []) //Inside the tracks are objects of {albumId:\"\", tracks:[]}\ninitialEntity.set(\"currentDisplayTracks\", [])\n\nconst TrackReducer = (state = initialEntity, action) => {\n    let newMap = new Map(state)\n    switch (action.type) {\n        case FETCH_ALBUM_TRACKS_LOADING:\n            newMap.set(\"currentDisplayTracks\", [])\n            return newMap\n        case FETCH_ALBUM_TRACKS_SUCCESSFUL:\n            //let the tracks be displayed\n            newMap.set(\"currentDisplayTracks\", action.data)\n            //Save the tracks into the track state\n            let newTrakcs = newMap.get(\"track\").concat(action.data)\n            newMap.set(\"track\", newTrakcs)\n            // Inside the album reducer, \n            // Append the track ids into the corresponding album object\n            return newMap\n        case UPDATE_DISPLAY_TRACKS:\n            newMap.set(\"currentDisplayTracks\", action.data)\n            return newMap\n        case UPDATE_PLAYING_TRACKS:\n            newMap.set(\"currentPlayingTracks\", newMap.get(\"currentDisplayTracks\"))\n            return newMap\n        default:\n            return state;\n    }\n\n}\n\nexport default TrackReducer;","import { SAVED_ALBUMS, SAVED_ARTISTS, SAVED_PLAYLISTS, SAVED_TRACKS, NEXT_TRACKS,\n    RECENTLY_PLAYED,USERS_TOP_TRACKS } from \"../Constants\"\nimport {\n    LOAD_LIBRARY_PAGE, SAVE_TO_SAVED_ALBUMS, SAVE_TO_SAVED_ARTISTS, SAVE_TO_SAVED_TRACKS,\n    LOAD_NEXT_TRACKS, TOGGLE_TRACK, TOGGLE_ARTIST, TOGGLE_ALBUM, TOGGLE_PLAYLIST,\n    SAVE_TO_RECENTLY_PLAYED, SAVE_TO_USERS_TOP_TRACKS\n} from \"./Actions\"\n\nlet initialState = new Map()\n//initialState.set(\"loading\", false)\ninitialState.set(\"libraryLoaded\", false)\ninitialState.set(SAVED_ALBUMS, [])\ninitialState.set(SAVED_ARTISTS, [])\ninitialState.set(SAVED_PLAYLISTS, [])\ninitialState.set(SAVED_TRACKS, [])\ninitialState.set(NEXT_TRACKS, [])\ninitialState.set(\"albumToToggle\", \"\")\ninitialState.set(\"artistToToggle\", \"\")\ninitialState.set(\"trackToToggle\", [])  //TODO set it to be a single track id so far\ninitialState.set(\"playlistToToggle\", \"\")\ninitialState.set(\"trackToChange\", \"\")\ninitialState.set(RECENTLY_PLAYED, [])\ninitialState.set(USERS_TOP_TRACKS, [])\n\n\nconst LibraryReducer = (state = initialState, action) => {\n    let newState = new Map(state)\n    switch (action.type) {\n        case LOAD_LIBRARY_PAGE:\n            newState.set(\"libraryLoaded\", true)\n            return newState\n        case SAVE_TO_SAVED_ALBUMS:\n            newState.set(SAVED_ALBUMS, action.albumIds)\n            return newState\n        case SAVE_TO_SAVED_ARTISTS:\n            newState.set(SAVED_ARTISTS, action.artistIds)\n            return newState\n        case SAVE_TO_SAVED_TRACKS:\n            newState.set(SAVED_TRACKS, action.tracks)\n            return newState\n        case SAVE_TO_RECENTLY_PLAYED:\n            newState.set(RECENTLY_PLAYED, action.albumIds)\n            return newState\n        case SAVE_TO_USERS_TOP_TRACKS:\n            newState.set(USERS_TOP_TRACKS, action.albumIds)\n            return newState\n        case LOAD_NEXT_TRACKS:\n            if (newState.get(NEXT_TRACKS).length > 0) {\n                let allTrakcs = newState.get(NEXT_TRACKS).concat(newState.get(SAVED_TRACKS))\n                newState.set(SAVED_TRACKS, allTrakcs)\n            }\n            newState.set(NEXT_TRACKS, action.tracks)\n            return newState\n        case TOGGLE_TRACK:\n            newState.set(\"trackToToggle\", action.data)\n            return newState\n        case TOGGLE_ALBUM:\n            newState.set(\"albumToToggle\", action.data)\n            return newState\n        case TOGGLE_ARTIST:\n            newState.set(\"artistToToggle\", action.data)\n            return newState\n        case TOGGLE_PLAYLIST:\n            newState.set(\"playlistToToggle\", action.data)\n            return newState\n        default:\n            return state;\n    }\n}\n\nexport default LibraryReducer;","import {\n    PLAY_SONG, PAUSE_SONG, STOP_SONG, RESUME_SONG\n} from \"./Actions\"\n\nconst { Map } = require('immutable');\n\nlet initialEntity = new Map()\ninitialEntity.set(\"songPaused\", true)\ninitialEntity.set(\"songPlaying\", false)\ninitialEntity.set(\"timeElapsed\", 0)\ninitialEntity.set(\"songId\", 0)\n\nconst PlayerReducer = (state = initialEntity, action) => {\n    let newMap = new Map()\n    switch (action.type) {\n        case \"FETCH_SONGS_SUCCESS\":\n            newMap.set(\"songs\", action.songs)\n            return newMap\n        case PLAY_SONG:\n            newMap.set(\"songPlaying\", true)\n            newMap.set(\"songPaused\", false)\n            newMap.set(\"songDetails\", action.song)\n            newMap.set(\"songId\", action.song.id)\n            newMap.set(\"timeElapsed\", 0)\n            return newMap\n        case STOP_SONG:\n            newMap.set(\"songPlaying\", false)\n            newMap.set(\"songPaused\", true)\n            newMap.set(\"songDetails\", null)\n            newMap.set(\"timeElapsed\", 0)\n            return newMap\n        case PAUSE_SONG:\n            newMap.set(\"songPaused\", true)\n            return newMap\n        case RESUME_SONG:\n            newMap.set(\"songPaused\", false)\n            return newMap\n        case \"INCREASE_SONG_TIME\":\n            newMap.set(\"timeElapsed\", action.time)\n            return newMap\n        default:\n            return state;\n    }\n}\n\nexport default PlayerReducer","import { combineReducers } from 'redux'\nimport ArtistReducer from \"./artist/ArtistReducer\"\nimport UserReducer from \"./user/UserReducer\"\nimport AlbumReducer from \"./album/AlbumReducer\"\nimport TrackReducer from \"./track/TrackReducer\"\nimport LibraryReducer from \"./library/LibraryReducer\"\nimport PlayerReducer from \"./player/PlayerReducer\"\n\nconst RootReducer = combineReducers({\n    ArtistReducer,\n    UserReducer,\n    AlbumReducer,\n    TrackReducer,\n    LibraryReducer,\n    PlayerReducer\n});\n\nexport default RootReducer;","import { call, take, all, select, takeLatest, fork, put } from 'redux-saga/effects';\nimport {\n    fetchArtistById, fetchArtistsAlbums, fetchAlbumById, fetchSavedAlbums, fetchSavedArtists, fetchSavedTracks,\n    fetchRelatedArtists, fetchRecentPlayed, fetchUsersTopTracks, fetchUsersTopTwoArtists, fetchTracksForAlbum, fetchArtistsTopTracks,\n    checkFollowAlbum, checkFollowTracks, checkFollowArtist\n} from \"./api-calls\"\n\nimport { SAVE_ACCESS_TOKEN } from \"../user/Actions\"\nimport {\n    FETCH_ALBUM_TRACKS_LOADING, fetchAlbumTracksSuccessful, updateDisplayTracks\n} from \"../track/Actions\"\nimport { saveAlbums } from \"../album/Actions\"\nimport { saveToSavedAlbums, saveToSavedArtists, saveToRecentlyPlay, saveToUserTopTracks } from \"../library/Actions\"\nimport {\n    FETCH_ARTISTS_ALBUMS_LOADING, updateCurrentArtistSaved,\n    saveArtists, fetchArtistsAlbumsSuccessful, saveRelatedArtists\n} from \"../artist/Actions\"\n\nimport {\n    getTrackIds, getToken, getCurrentArtistId, findArtistById,\n    findAlbumById, getCurrentAlbumId, getCurrentAlbumTracks\n} from \"../Selectors\"\n\nimport history from \"../history\"\nimport {\n    LOAD_LIBRARY_PAGE, toggleAlbum, toggleTrack, toggleArtist,\n} from \"../library/Actions\"\n\nimport {\n    createArtistFromList, createTracksForAlbum,\n    createAlbumFromData, createAlbumsForAnArtist, createSavedAlbums, createRecentPlayed, createTopTracksForArtist,\n    createUsersTopTracks, createTop2Artists\n} from \"../utils/Utils\"\n\n//worker\nexport function* fetchHomePage() {\n    while (select(getToken) === undefined) {\n        yield select(getToken)\n    }\n    const token = yield select(getToken)\n    try {\n        const [data1, data2, data3] = yield all([\n            call(fetchRecentPlayed, token),\n            call(fetchUsersTopTracks, token),\n            call(fetchUsersTopTwoArtists, token),\n        ])\n        const recentPlayed = createRecentPlayed(data1)\n        const topTracks = createUsersTopTracks(data2)\n        const topTwoArtists = createTop2Artists(data3)\n        const albumsToSave = topTracks.albums.concat(recentPlayed.albums)\n        const artistsToSave = (topTracks.artists.concat(recentPlayed.artists)).concat(topTwoArtists)\n        yield all([\n            put(saveToRecentlyPlay(recentPlayed.albumIds)),\n            put(saveToUserTopTracks(topTracks.albumIds)),\n            put(saveAlbums(albumsToSave)),\n            put(saveArtists(artistsToSave))\n        ])\n        history.push(\"/Home\")\n    }\n    catch (err) {\n        console.log(err)\n        //yield take(FETCH_FAILED)\n    }\n}\n\nexport function* checkArtistSaved(token) {\n    const currentArtistId = yield select(getCurrentArtistId)\n    const artistSaved = yield checkFollowArtist(token, currentArtistId)\n    yield put(updateCurrentArtistSaved(artistSaved))\n}\n\n\nexport function* fetchAlbumPage() {\n    const token = yield select(getToken)\n    while (select(getCurrentAlbumId) === undefined || \"\") {\n        yield select(getCurrentAlbumId)\n    }\n    const currentAlbumId = yield select(getCurrentAlbumId)\n    let albumsFromStore = yield select(findAlbumById(currentAlbumId))\n    try {\n        if (albumsFromStore === undefined) {\n            const [data1, data2] = yield all([\n                fetchAlbumById(token, currentAlbumId),\n                fetchTracksForAlbum(token, currentAlbumId)\n            ])\n            const album = createAlbumFromData(data1)\n            const tracks = createTracksForAlbum(data2)\n            yield all([\n                put(saveAlbums([album])),\n                put(fetchAlbumTracksSuccessful(tracks))\n            ])\n        }\n        else {\n            const tracks = yield select(getCurrentAlbumTracks)\n            if (tracks === undefined || tracks.length === 0) {\n                const data3 = yield fetchTracksForAlbum(token, currentAlbumId)\n                const otherTracks = createTracksForAlbum(data3)\n                yield put(fetchAlbumTracksSuccessful(otherTracks))\n            } else {\n                //Tracks are already in the store. Change the display tracks. \n                const tracks = yield select(getCurrentAlbumTracks)\n                yield put(updateDisplayTracks(tracks))\n            }\n        }\n        yield call(checkAlbumPageSaved)\n    } catch (err) {\n        console.log(err)\n    } finally {\n        // yield history.push(\"/Album\")\n    }\n}\n\nexport function* checkAlbumPageSaved() {\n    //TODO check the album and all its tracks saved or not\n    let [token, trackIds, albumId] = yield all([\n        select(getToken),\n        select(getTrackIds),\n        select(getCurrentAlbumId)\n    ])\n    while (trackIds.length === 0 || albumId === \"\") {\n        [trackIds, albumId] = yield all([\n            select(getTrackIds),\n            select(getCurrentAlbumId)\n        ])\n    }\n    const [albumSaved, tracksSaved] = yield all([\n        checkFollowAlbum(token, albumId),\n        checkFollowTracks(token, trackIds)\n    ])\n    yield all([\n        put(toggleAlbum(albumSaved)),\n        put(toggleTrack(tracksSaved))\n    ])\n}\n\nexport function* fetchArtistPage() {\n    const token = yield select(getToken)\n    while (select(getCurrentArtistId) === undefined || \"\") {\n        yield select(getCurrentArtistId)\n    }\n    const currentArtistId = yield select(getCurrentArtistId)\n    let artistsFromStore = yield select(findArtistById(currentArtistId))\n    try {\n        let artistExist = artistsFromStore === undefined ? false : true\n        let relatedArtistsExist = artistsFromStore.get(\"relatedArtists\").length > 0 ? true : false\n        let saveSatusChecked = artistsFromStore.get(\"saved\") !== \"\" || undefined\n        let albumsExist = artistsFromStore.get(\"albums\").length > 0 ? true : false\n        if (artistExist && !relatedArtistsExist && !saveSatusChecked && !albumsExist) {\n            const [albums, relatedArtists] = yield all([\n                call(fetchArtistsAlbums, token),\n                call(fetchRelatedArtists, token)\n            ])\n            const albums2 = createAlbumsForAnArtist(albums)\n            const relatedArtists2 = createArtistFromList(relatedArtists)\n            yield all([\n                put(saveAlbums(albums2.albums)),\n                put(saveAlbums(albums2.singles)),\n                put(fetchArtistsAlbumsSuccessful(albums2)),\n                put(saveRelatedArtists(relatedArtists2)),\n                call(checkArtistSaved, token)\n            ])\n        }\n        if (!artistExist && !relatedArtistsExist && !saveSatusChecked && !albumsExist) {\n            const [artist, albums, relatedArtists] = yield all([\n                call(fetchArtistById, token),\n                call(fetchArtistsAlbums, token),\n                call(fetchRelatedArtists, token)\n            ])\n            const artist1 = createArtistFromList(artist)\n            const albums1 = createAlbumsForAnArtist(albums)\n            const relatedArtists1 = createArtistFromList(relatedArtists)\n            yield all([\n                //save current artist\n                // Optional: save the related artists into the artist part as well???\n                put(saveAlbums(albums1.albums)),\n                put(saveAlbums(albums1.singles)),\n                put(saveArtists([artist1])),\n                put(fetchArtistsAlbumsSuccessful(albums1)),\n                put(saveRelatedArtists(relatedArtists1)),\n                call(checkArtistSaved, token)\n            ])\n        }\n\n    } catch (err) {\n        console.log(err)\n        //yield take(FETCH_FAILED)\n    } finally {\n        // yield history.push(\"/Artist\")\n    }\n}\n\nexport function* fetchLibraryPage() {\n    const token = yield select(getToken)\n    //load the user's library\n    try {\n        const [data1, data2] = yield all([\n            call(fetchSavedAlbums, token),\n            call(fetchSavedArtists, token),\n        ])\n        const albumsAndArtists = createSavedAlbums(data1)\n        const artists = createArtistFromList(data2)\n        const artistsToSave = albumsAndArtists.artists.concat(artists)\n        yield all([\n            put(saveArtists(artistsToSave)),\n            put(saveToSavedArtists(artists)),\n            put(saveToSavedAlbums(albumsAndArtists.albums)),\n        ])\n    } catch (err) {\n        console.log(err)\n        //yield take(FETCH_FAILED)\n    }\n}\n\nexport function* watchInitHomePage() {\n    yield take(SAVE_ACCESS_TOKEN);\n    yield call(fetchHomePage)\n}\n\nexport function* watchInitAlbumPage() {\n    yield takeLatest(FETCH_ALBUM_TRACKS_LOADING, fetchAlbumPage)\n}\n\nexport function* watchInitArtistPage() {\n    yield takeLatest(FETCH_ARTISTS_ALBUMS_LOADING, fetchArtistPage)\n}\n\nexport function* watchInitLibraryPage() {\n    yield takeLatest(LOAD_LIBRARY_PAGE, fetchLibraryPage)\n}\n\nexport const ApiSaga = [\n    fork(watchInitHomePage),\n    fork(watchInitAlbumPage),\n    fork(watchInitArtistPage),\n    fork(watchInitLibraryPage),\n]","import { fork, all, takeLatest, select, takeEvery, put } from 'redux-saga/effects';\nimport {\n    saveRemoveTrack, saveRemoveAlbum, followUnfollowArtist, checkFollowAlbum,\n    checkFollowTracks\n} from \"../api/api-calls\"\n\nimport {\n    getTrackIdAndIndex,getArtistToToggle, getAlbumToToggle, getPlaylistToToggle,\n    getCurrentAlbumId ,getToken\n} from \"../Selectors\"\nimport {\n    LOAD_LIBRARY_PAGE, FETCH_TOGGLE_ALBUM_SAVED_LOADING,\n    LOAD_NEXT_TRACKS, toggleTrack, toggleAlbum, toggleArtist, togglePlaylist\n} from \"./Actions\"\nimport { FETCH_TOGGLE_ARTIST_SAVED, FETCH_ARTISTS_ALBUMS_SUCCESSFUL } from \"../artist/Actions\"\n\nexport function* fetchNextTracks() {\n    //The library page should save the page number to the store\n\n    //get page number from the store\n    //and call fetch \n    //save the returned data to the next tracks in the library reducer\n\n}\n\n//TODO need the track index, and track id.\n// check if this index has been saved\n// and dispatch it accordingly\nexport function* fetchToggleTrack() {\n    const token = yield select(getToken)\n    while (select(getTrackIdAndIndex) === \"\") {\n        yield select(getTrackIdAndIndex)\n    }\n    //fetch add track\n    const trackInfo = yield select(getTrackIdAndIndex)  // not this selector.\n\n    let responseStatus = yield saveRemoveTrack(token, trackInfo.trackId)  // PUT or DELETE\n    if (responseStatus === 200 || \"200\") {\n        yield put(toggleTrack()) //Toggle the state\n    }\n}\n\nexport function* fetchToggleAlbum() {\n    console.log(\"called\")\n    const token = yield select(getToken)\n    while (select(getAlbumToToggle) === undefined || \"\") {\n        yield select(getAlbumToToggle)\n    }\n    let albumId = yield select(getCurrentAlbumId)\n    while (select(getCurrentAlbumId) === \"\") { albumId = yield select(getCurrentAlbumId) }\n    //select the store to see if the current album is saved or not.\n    let saved = yield select(getAlbumToToggle)\n    let responseStatus = \"\"\n    if (saved === false) {  //save the album\n        responseStatus = yield saveRemoveAlbum(token, albumId, \"PUT\")\n    } else {  //remove the album\n        responseStatus = yield saveRemoveAlbum(token, albumId, \"DELETE\")\n    }\n    if (responseStatus === 200 || \"200\") {\n        yield put(toggleAlbum(!saved)) //Toggle the state\n    }\n}\n\nexport function* fetchToggleArtist() {\n    const token = yield select(getToken)\n    while (select(getArtistToToggle) === undefined || \"\") {\n        yield select(getArtistToToggle)\n    }\n    //fetch add track\n    let artistId = yield select(getArtistToToggle)\n    const saved = yield select(getArtistToToggle)\n    while (artistId === \"\") { artistId = yield select(getArtistToToggle) }\n    let responseStatus = \"\"\n    if (saved === false) {  //save the album\n        responseStatus = yield followUnfollowArtist(token, artistId, \"PUT\")\n    } else {  //remove the album\n        responseStatus = yield followUnfollowArtist(token, artistId, \"DELETE\")\n    }\n    if (responseStatus === 200 || \"200\") {\n    }\n}\n\nexport function* fetchTogglePlaylist() { }\n\nexport function* checkArtistSaved() { }\n\nexport function* checkAlbumSaved() { }\n\nexport function* checkTracksaved() { }\n\nexport function* checkPlaylistSaved() { }\n\nexport function* checkLibrarySaved() { }\n\n\n\nexport function* watchFetchNextTracks() {\n    yield takeLatest(LOAD_NEXT_TRACKS, fetchNextTracks)\n}\n\n\n\nexport function* watchToggleAlbumSaved() {// When the user toggles to save or remove the current album\n    yield takeLatest(FETCH_TOGGLE_ALBUM_SAVED_LOADING, fetchToggleAlbum)\n}\n\nexport function* watchToggleArtistSaved() {// When the user toggles to follow or unfollow the current artist\n    yield takeLatest(FETCH_TOGGLE_ARTIST_SAVED, fetchToggleArtist)\n}\n\nexport function* watchCheckLibraryPageSaved() {\n    yield takeLatest(LOAD_LIBRARY_PAGE, checkLibrarySaved)\n}\n\nexport const LibrarySaga = [\n    fork(watchFetchNextTracks),\n    fork(watchCheckLibraryPageSaved),\n    fork(watchToggleArtistSaved),\n    fork(watchToggleAlbumSaved),\n]","import { ApiSaga } from \"./api/sagas\"\nimport { LibrarySaga } from \"./library/sagas\"\nimport { all } from 'redux-saga/effects';\n\nexport default function* RootSaga() {\n     yield all([...ApiSaga, ...LibrarySaga])\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Router } from 'react-router-dom';\nimport RootReducer from \"./core/RootReducer\"\nimport RootSaga from \"./core/RootSaga\"\nimport { Provider } from 'react-redux'\nimport { createStore, applyMiddleware } from 'redux'\nimport { logger } from 'redux-logger'\nimport createSagaMiddleware from 'redux-saga';\nimport history from \"./core/history\"\n\nconst sagaMiddleware = createSagaMiddleware();\n\nexport const store = createStore(RootReducer, applyMiddleware(sagaMiddleware, logger))\n\nsagaMiddleware.run(RootSaga);\n\nif (module.hot) {\n  module.hot.accept()\n}\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router history={history}>\n      <App />\n    </Router>\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}